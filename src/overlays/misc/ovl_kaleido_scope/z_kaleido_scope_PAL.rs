#![allow(dead_code, mutable_transmutes, non_camel_case_types, non_snake_case,
         non_upper_case_globals, unused_assignments, unused_mut)]
#![register_tool(c2rust)]
#![feature(const_raw_ptr_to_usize_cast, register_tool)]
extern "C" {
    #[no_mangle]
    fn DmaMgr_SendRequest1(ram0: *mut libc::c_void, vrom: u32_0, size: u32_0,
                           file: *const libc::c_char, line: s32) -> s32;
    #[no_mangle]
    fn osSyncPrintf(fmt: *const libc::c_char, _: ...);
    #[no_mangle]
    fn osCreateMesgQueue(mq: *mut OSMesgQueue, msg: *mut OSMesg, count: s32);
    #[no_mangle]
    fn func_800418D0(colCtx: *mut CollisionContext,
                     globalCtx: *mut GlobalContext);
    #[no_mangle]
    fn Map_SetFloorPalettesData(globalCtx: *mut GlobalContext, floor: s16);
    #[no_mangle]
    fn Map_InitData(globalCtx: *mut GlobalContext, room: s16);
    #[no_mangle]
    fn Interface_ChangeAlpha(alphaType: u16_0);
    #[no_mangle]
    fn func_80084BF4(globalCtx: *mut GlobalContext, flag: u16_0);
    #[no_mangle]
    fn Interface_SetDoAction(globalCtx: *mut GlobalContext, action: u16_0);
    #[no_mangle]
    fn Interface_LoadActionLabelB(globalCtx: *mut GlobalContext,
                                  action: u16_0);
    #[no_mangle]
    fn Player_SetEquipmentData(globalCtx: *mut GlobalContext,
                               player: *mut Player);
    #[no_mangle]
    fn func_80091738(globalCtx: *mut GlobalContext, segment: *mut u8_0,
                     skelAnime: *mut SkelAnime) -> u32_0;
    #[no_mangle]
    fn func_800944C4(gfxCtx: *mut GraphicsContext);
    #[no_mangle]
    fn func_800949A8(gfxCtx: *mut GraphicsContext);
    #[no_mangle]
    fn func_800981B8(objectCtx: *mut ObjectContext);
    #[no_mangle]
    fn Sram_WriteSave(sramCtx: *mut SramContext);
    #[no_mangle]
    fn func_800AA358(view: *mut View, eye: *mut Vec3f, lookAt: *mut Vec3f,
                     up: *mut Vec3f);
    #[no_mangle]
    fn func_800AAA50(view: *mut View, arg1: s32);
    #[no_mangle]
    fn Gameplay_SaveSceneFlags(globalCtx: *mut GlobalContext);
    #[no_mangle]
    fn Gameplay_TriggerRespawn(globalCtx: *mut GlobalContext);
    #[no_mangle]
    fn PreRender_SetValuesSave(this: *mut PreRender, width: u32_0,
                               height: u32_0, fbuf: *mut libc::c_void,
                               zbuf: *mut libc::c_void,
                               cvg: *mut libc::c_void);
    #[no_mangle]
    fn PreRender_Init(this: *mut PreRender);
    #[no_mangle]
    fn PreRender_SetValues(this: *mut PreRender, width: u32_0, height: u32_0,
                           fbuf: *mut libc::c_void, zbuf: *mut libc::c_void);
    #[no_mangle]
    fn PreRender_Destroy(this: *mut PreRender);
    #[no_mangle]
    fn func_800C1F20(this: *mut PreRender, gfxp: *mut *mut Gfx);
    #[no_mangle]
    fn func_800C20B4(this: *mut PreRender, gfxp: *mut *mut Gfx);
    #[no_mangle]
    fn PreRender_Calc(this: *mut PreRender);
    #[no_mangle]
    fn Graph_Alloc(gfxCtx: *mut GraphicsContext, size: size_t)
     -> *mut libc::c_void;
    #[no_mangle]
    fn Graph_OpenDisps(dispRefs: *mut *mut Gfx, gfxCtx: *mut GraphicsContext,
                       file: *const libc::c_char, line: s32);
    #[no_mangle]
    fn Graph_CloseDisps(dispRefs: *mut *mut Gfx, gfxCtx: *mut GraphicsContext,
                        file: *const libc::c_char, line: s32);
    #[no_mangle]
    fn Graph_GfxPlusOne(gfx: *mut Gfx) -> *mut Gfx;
    #[no_mangle]
    fn Graph_BranchDlist(gfx: *mut Gfx, dst: *mut Gfx) -> *mut Gfx;
    #[no_mangle]
    fn Matrix_Translate(x: f32_0, y: f32_0, z: f32_0, mode: u8_0);
    #[no_mangle]
    fn Matrix_Scale(x: f32_0, y: f32_0, z: f32_0, mode: u8_0);
    #[no_mangle]
    fn Matrix_RotateX(x: f32_0, mode: u8_0);
    #[no_mangle]
    fn Matrix_RotateY(y: f32_0, mode: u8_0);
    #[no_mangle]
    fn Matrix_RotateZ(z: f32_0, mode: u8_0);
    #[no_mangle]
    fn Matrix_NewMtx(gfxCtx: *mut GraphicsContext, file: *mut libc::c_char,
                     line: s32) -> *mut Mtx;
    #[no_mangle]
    fn Audio_OcaSetInstrument(_: u8_0);
    #[no_mangle]
    fn Audio_OcaGetPlayingStaff() -> *mut OcarinaStaff;
    #[no_mangle]
    fn Audio_OcaGetDisplayingStaff() -> *mut OcarinaStaff;
    #[no_mangle]
    fn func_800F64E0(arg0: u8_0);
    #[no_mangle]
    fn Audio_PlaySoundGeneral(sfxId: u16_0, pos: *mut Vec3f, token: u8_0,
                              freqScale: *mut f32_0, a4: *mut f32_0,
                              reverbAdd: *mut s8);
    #[no_mangle]
    fn Audio_QueueSeqCmd(bgmID: u32_0);
    #[no_mangle]
    fn Sleep_Msec(ms: u32_0);
    #[no_mangle]
    fn Opening_Init(thisx: *mut GameState);
    #[no_mangle]
    static mut _icon_item_staticSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _icon_item_staticSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _icon_item_24_staticSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _icon_item_24_staticSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _icon_item_field_staticSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _icon_item_field_staticSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _icon_item_dungeon_staticSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _icon_item_dungeon_staticSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _icon_item_gameover_staticSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _icon_item_gameover_staticSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _icon_item_nes_staticSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _icon_item_nes_staticSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _icon_item_ger_staticSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _icon_item_ger_staticSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _icon_item_fra_staticSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _icon_item_fra_staticSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _item_name_staticSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _map_name_staticSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _map_48x85_staticSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    fn PauseMapMark_Draw(globalCtx: *mut GlobalContext);
    #[no_mangle]
    fn KaleidoScope_UpdatePrompt(globalCtx: *mut GlobalContext);
    #[no_mangle]
    fn KaleidoScope_DrawWorldMap(globalCtx: *mut GlobalContext,
                                 gfxCtx: *mut GraphicsContext);
    #[no_mangle]
    fn KaleidoScope_DrawDungeonMap(globalCtx: *mut GlobalContext,
                                   gfxCtx: *mut GraphicsContext);
    #[no_mangle]
    fn KaleidoScope_UpdateItemEquip(globalCtx: *mut GlobalContext);
    #[no_mangle]
    fn KaleidoScope_DrawItemSelect(globalCtx: *mut GlobalContext);
    #[no_mangle]
    fn KaleidoScope_DrawEquipment(globalCtx: *mut GlobalContext);
    #[no_mangle]
    fn KaleidoScope_DrawPlayerWork(globalCtx: *mut GlobalContext);
    #[no_mangle]
    fn KaleidoScope_DrawDebugEditor(globalCtx: *mut GlobalContext);
    #[no_mangle]
    fn KaleidoScope_DrawQuestStatus(globalCtx: *mut GlobalContext,
                                    gfxCtx: *mut GraphicsContext);
    #[no_mangle]
    static mut gSegments: [u32_0; 16];
    #[no_mangle]
    static mut gGameInfo: *mut GameInfo;
    #[no_mangle]
    static mut gSaveContext: SaveContext;
    #[no_mangle]
    static mut D_801333E8: s8;
    #[no_mangle]
    static mut D_801333E0: f32_0;
    #[no_mangle]
    static mut D_801333D4: Vec3f;
    #[no_mangle]
    static mut gItemSlots: [u8_0; 56];
    #[no_mangle]
    static mut gItemIcons: [*mut libc::c_void; 130];
    #[no_mangle]
    static mut gGsFlagsShifts: [u32_0; 4];
    #[no_mangle]
    static mut gGsFlagsMasks: [u32_0; 4];
    #[no_mangle]
    static mut gUpgradeShifts: [u8_0; 8];
    #[no_mangle]
    static mut gEquipShifts: [u8_0; 4];
    #[no_mangle]
    static mut gUpgradeMasks: [u32_0; 8];
    #[no_mangle]
    static mut gEquipMasks: [u16_0; 4];
    #[no_mangle]
    static mut gBitFlags: [u32_0; 32];
    #[no_mangle]
    static mut gPauseMenuCursorTopLeftTex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseMenuCursorTopRightTex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseMenuCursorBottomLeftTex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseMenuCursorBottomRightTex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseEquipment00Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseEquipment20Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseMap00Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseMap20Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseQuestStatus00Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseQuestStatus20Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseSave00Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseSave20Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseEquipment01Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseEquipment11Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseEquipment21Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseSelectItem01Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseSelectItem11Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseSelectItem21Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseMap01Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseMap11Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseMap21Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseQuestStatus01Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseQuestStatus11Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseQuestStatus21Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseSave01Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseSave11Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseSave21Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseEquipment02Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseEquipment12Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseEquipment22Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseSelectItem02Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseSelectItem12Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseSelectItem22Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseMap02Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseMap12Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseMap22Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseQuestStatus02Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseQuestStatus12Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseQuestStatus22Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseSave02Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseSave12Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseSave22Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseEquipment03Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseEquipment13Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseEquipment23Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseSelectItem03Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseSelectItem13Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseSelectItem23Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseMap03Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseMap13Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseMap23Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseQuestStatus03Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseQuestStatus13Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseQuestStatus23Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseSave03Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseSave13Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseSave23Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseEquipment04Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseEquipment14Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseEquipment24Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseSelectItem04Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseSelectItem14Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseSelectItem24Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseMap04Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseMap14Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseMap24Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseQuestStatus04Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseQuestStatus14Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseQuestStatus24Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseSave04Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseSave14Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseSave24Tex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseGameOver10Tex: [u64_0; 0];
    #[no_mangle]
    static mut gItemNamePanelDL: [Gfx; 0];
    #[no_mangle]
    static mut gLButtonIconDL: [Gfx; 0];
    #[no_mangle]
    static mut gRButtonIconDL: [Gfx; 0];
    #[no_mangle]
    static mut gCButtonIconsDL: [Gfx; 0];
    #[no_mangle]
    static mut gAButtonIconDL: [Gfx; 0];
    #[no_mangle]
    static mut gPromptCursorLeftDL: [Gfx; 0];
    #[no_mangle]
    static mut gPromptCursorRightDL: [Gfx; 0];
    #[no_mangle]
    static mut gGoldSkulltulaIconTex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseToEquipENGTex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseToDecideENGTex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseToPlayMelodyENGTex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseToSelectItemENGTex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseToMapENGTex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseToQuestStatusENGTex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseToEquipmentENGTex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseSavePromptENGTex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseYesENGTex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseNoENGTex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseEquipment10ENGTex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseSelectItem00ENGTex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseSelectItem10ENGTex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseSelectItem20ENGTex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseMap10ENGTex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseQuestStatus00ENGTex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseQuestStatus10ENGTex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseQuestStatus20ENGTex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseSave10ENGTex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseToEquipGERTex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseToDecideGERTex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseToPlayMelodyGERTex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseToSelectItemGERTex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseToMapGERTex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseToQuestStatusGERTex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseToEquipmentGERTex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseSavePromptGERTex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseYesGERTex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseNoGERTex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseEquipment00GERTex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseEquipment10GERTex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseEquipment20GERTex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseSelectItem00GERTex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseSelectItem10GERTex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseSelectItem20GERTex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseMap10GERTex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseQuestStatus10GERTex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseSave10GERTex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseSave20GERTex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseToEquipFRATex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseToDecideFRATex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseToPlayMelodyFRATex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseToSelectItemFRATex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseToMapFRATex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseToQuestStatusFRATex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseToEquipmentFRATex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseSavePromptFRATex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseYesFRATex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseNoFRATex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseEquipment00FRATex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseEquipment10FRATex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseEquipment20FRATex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseSelectItem00FRATex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseSelectItem10FRATex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseSelectItem20FRATex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseMap10FRATex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseQuestStatus10FRATex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseSave00FRATex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseSave10FRATex: [u64_0; 0];
    #[no_mangle]
    static mut gPauseSave20FRATex: [u64_0; 0];
    #[no_mangle]
    static mut gGameOverP1Tex: [u64_0; 0];
    #[no_mangle]
    static mut gGameOverP2Tex: [u64_0; 0];
    #[no_mangle]
    static mut gGameOverP3Tex: [u64_0; 0];
    #[no_mangle]
    static mut gGameOverMaskTex: [u64_0; 0];
    #[no_mangle]
    static mut gContinuePlayingENGTex: [u64_0; 0];
    #[no_mangle]
    static mut gContinuePlayingGERTex: [u64_0; 0];
    #[no_mangle]
    static mut gContinuePlayingFRATex: [u64_0; 0];
}
pub type s8 = libc::c_schar;
pub type u8_0 = libc::c_uchar;
pub type s16 = libc::c_short;
pub type u16_0 = libc::c_ushort;
pub type s32 = libc::c_int;
pub type u32_0 = libc::c_uint;
pub type u64_0 = libc::c_ulonglong;
pub type f32_0 = libc::c_float;
pub type Mtx_t = [[libc::c_long; 4]; 4];
#[derive(Copy, Clone)]
#[repr(C)]
pub union Mtx {
    pub m: Mtx_t,
    pub c2rust_unnamed: C2RustUnnamed,
    pub forc_structure_alignment: libc::c_longlong,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct C2RustUnnamed {
    pub intPart: [[u16_0; 4]; 4],
    pub fracPart: [[u16_0; 4]; 4],
}
pub type MtxF_t = [[libc::c_float; 4]; 4];
#[derive(Copy, Clone)]
#[repr(C)]
pub union MtxF {
    pub mf: MtxF_t,
    pub c2rust_unnamed: C2RustUnnamed_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct C2RustUnnamed_0 {
    pub xx: libc::c_float,
    pub yx: libc::c_float,
    pub zx: libc::c_float,
    pub wx: libc::c_float,
    pub xy: libc::c_float,
    pub yy: libc::c_float,
    pub zy: libc::c_float,
    pub wy: libc::c_float,
    pub xz: libc::c_float,
    pub yz: libc::c_float,
    pub zz: libc::c_float,
    pub wz: libc::c_float,
    pub xw: libc::c_float,
    pub yw: libc::c_float,
    pub zw: libc::c_float,
    pub ww: libc::c_float,
}
pub type size_t = libc::c_ulong;
pub type OSPri = s32;
pub type OSId = s32;
#[derive(Copy, Clone)]
#[repr(C)]
pub union __OSfp {
    pub f: C2RustUnnamed_1,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct C2RustUnnamed_1 {
    pub f_odd: f32_0,
    pub f_even: f32_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct __OSThreadContext {
    pub at: u64_0,
    pub v0: u64_0,
    pub v1: u64_0,
    pub a0: u64_0,
    pub a1: u64_0,
    pub a2: u64_0,
    pub a3: u64_0,
    pub t0: u64_0,
    pub t1: u64_0,
    pub t2: u64_0,
    pub t3: u64_0,
    pub t4: u64_0,
    pub t5: u64_0,
    pub t6: u64_0,
    pub t7: u64_0,
    pub s0: u64_0,
    pub s1: u64_0,
    pub s2: u64_0,
    pub s3: u64_0,
    pub s4: u64_0,
    pub s5: u64_0,
    pub s6: u64_0,
    pub s7: u64_0,
    pub t8: u64_0,
    pub t9: u64_0,
    pub gp: u64_0,
    pub sp: u64_0,
    pub s8: u64_0,
    pub ra: u64_0,
    pub lo: u64_0,
    pub hi: u64_0,
    pub sr: u32_0,
    pub pc: u32_0,
    pub cause: u32_0,
    pub badvaddr: u32_0,
    pub rcp: u32_0,
    pub fpcsr: u32_0,
    pub fp0: __OSfp,
    pub fp2: __OSfp,
    pub fp4: __OSfp,
    pub fp6: __OSfp,
    pub fp8: __OSfp,
    pub fp10: __OSfp,
    pub fp12: __OSfp,
    pub fp14: __OSfp,
    pub fp16: __OSfp,
    pub fp18: __OSfp,
    pub fp20: __OSfp,
    pub fp22: __OSfp,
    pub fp24: __OSfp,
    pub fp26: __OSfp,
    pub fp28: __OSfp,
    pub fp30: __OSfp,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct __OSThreadprofile {
    pub flag: u32_0,
    pub count: u32_0,
    pub time: u64_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct OSThread {
    pub next: *mut OSThread,
    pub priority: OSPri,
    pub queue: *mut *mut OSThread,
    pub tlnext: *mut OSThread,
    pub state: u16_0,
    pub flags: u16_0,
    pub id: OSId,
    pub fp: s32,
    pub thprof: *mut __OSThreadprofile,
    pub context: __OSThreadContext,
}
pub type OSMesg = *mut libc::c_void;
#[derive(Copy, Clone)]
#[repr(C)]
pub struct OSMesgQueue {
    pub mtqueue: *mut OSThread,
    pub fullqueue: *mut OSThread,
    pub validCount: s32,
    pub first: s32,
    pub msgCount: s32,
    pub msg: *mut OSMesg,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct OSTask_t {
    pub type_0: u32_0,
    pub flags: u32_0,
    pub ucode_boot: *mut u64_0,
    pub ucode_boot_size: u32_0,
    pub ucode: *mut u64_0,
    pub ucode_size: u32_0,
    pub ucode_data: *mut u64_0,
    pub ucode_data_size: u32_0,
    pub dram_stack: *mut u64_0,
    pub dram_stack_size: u32_0,
    pub output_buff: *mut u64_0,
    pub output_buff_size: *mut u64_0,
    pub data_ptr: *mut u64_0,
    pub data_size: u32_0,
    pub yield_data_ptr: *mut u64_0,
    pub yield_data_size: u32_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub union OSTask {
    pub t: OSTask_t,
    pub force_structure_alignment: libc::c_longlong,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct OSViCommonRegs {
    pub ctrl: u32_0,
    pub width: u32_0,
    pub burst: u32_0,
    pub vSync: u32_0,
    pub hSync: u32_0,
    pub leap: u32_0,
    pub hStart: u32_0,
    pub xScale: u32_0,
    pub vCurrent: u32_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct OSViFieldRegs {
    pub origin: u32_0,
    pub yScale: u32_0,
    pub vStart: u32_0,
    pub vBurst: u32_0,
    pub vIntr: u32_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct OSViMode {
    pub type_0: u8_0,
    pub comRegs: OSViCommonRegs,
    pub fldRegs: [OSViFieldRegs; 2],
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct OSContPad {
    pub button: u16_0,
    pub stick_x: s8,
    pub stick_y: s8,
    pub errno: u8_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Vtx_t {
    pub ob: [libc::c_short; 3],
    pub flag: libc::c_ushort,
    pub tc: [libc::c_short; 2],
    pub cn: [libc::c_uchar; 4],
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Vtx_tn {
    pub ob: [libc::c_short; 3],
    pub flag: libc::c_ushort,
    pub tc: [libc::c_short; 2],
    pub n: [libc::c_schar; 3],
    pub a: libc::c_uchar,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub union Vtx {
    pub v: Vtx_t,
    pub n: Vtx_tn,
    pub force_structure_alignment: libc::c_longlong,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Tri {
    pub flag: libc::c_uchar,
    pub v: [libc::c_uchar; 3],
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Vp_t {
    pub vscale: [libc::c_short; 4],
    pub vtrans: [libc::c_short; 4],
}
#[derive(Copy, Clone)]
#[repr(C)]
pub union Vp {
    pub vp: Vp_t,
    pub force_structure_alignment: libc::c_longlong,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Light_t {
    pub col: [libc::c_uchar; 3],
    pub pad1: libc::c_char,
    pub colc: [libc::c_uchar; 3],
    pub pad2: libc::c_char,
    pub dir: [libc::c_schar; 3],
    pub pad3: libc::c_char,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Ambient_t {
    pub col: [libc::c_uchar; 3],
    pub pad1: libc::c_char,
    pub colc: [libc::c_uchar; 3],
    pub pad2: libc::c_char,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub union Light {
    pub l: Light_t,
    pub force_structure_alignment: [libc::c_longlong; 2],
}
#[derive(Copy, Clone)]
#[repr(C)]
pub union Ambient {
    pub l: Ambient_t,
    pub force_structure_alignment: [libc::c_longlong; 1],
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Lightsn {
    pub a: Ambient,
    pub l: [Light; 7],
}
#[derive(Copy, Clone, BitfieldStruct)]
#[repr(C)]
pub struct Gdma {
    #[bitfield(name = "cmd", ty = "libc::c_int", bits = "0..=7")]
    #[bitfield(name = "par", ty = "libc::c_uint", bits = "8..=15")]
    #[bitfield(name = "len", ty = "libc::c_uint", bits = "16..=31")]
    pub cmd_par_len: [u8; 4],
    pub addr: libc::c_uint,
}
#[derive(Copy, Clone, BitfieldStruct)]
#[repr(C)]
pub struct Gtri {
    #[bitfield(name = "cmd", ty = "libc::c_int", bits = "0..=7")]
    #[bitfield(name = "pad", ty = "libc::c_int", bits = "8..=31")]
    pub cmd_pad: [u8; 4],
    pub tri: Tri,
}
#[derive(Copy, Clone, BitfieldStruct)]
#[repr(C)]
pub struct Gpopmtx {
    #[bitfield(name = "cmd", ty = "libc::c_int", bits = "0..=7")]
    #[bitfield(name = "pad1", ty = "libc::c_int", bits = "8..=31")]
    #[bitfield(name = "pad2", ty = "libc::c_int", bits = "32..=55")]
    #[bitfield(name = "param", ty = "libc::c_uchar", bits = "56..=63")]
    pub cmd_pad1_pad2_param: [u8; 8],
}
#[derive(Copy, Clone, BitfieldStruct)]
#[repr(C)]
pub struct Gsegment {
    #[bitfield(name = "cmd", ty = "libc::c_int", bits = "0..=7")]
    #[bitfield(name = "pad0", ty = "libc::c_int", bits = "8..=15")]
    #[bitfield(name = "mw_index", ty = "libc::c_int", bits = "16..=23")]
    #[bitfield(name = "number", ty = "libc::c_int", bits = "24..=31")]
    #[bitfield(name = "pad1", ty = "libc::c_int", bits = "32..=39")]
    #[bitfield(name = "base", ty = "libc::c_int", bits = "40..=63")]
    pub cmd_pad0_mw_index_number_pad1_base: [u8; 8],
}
#[derive(Copy, Clone, BitfieldStruct)]
#[repr(C)]
pub struct GsetothermodeL {
    #[bitfield(name = "cmd", ty = "libc::c_int", bits = "0..=7")]
    #[bitfield(name = "pad0", ty = "libc::c_int", bits = "8..=15")]
    #[bitfield(name = "sft", ty = "libc::c_int", bits = "16..=23")]
    #[bitfield(name = "len", ty = "libc::c_int", bits = "24..=31")]
    #[bitfield(name = "data", ty = "libc::c_uint", bits = "32..=63")]
    pub cmd_pad0_sft_len_data: [u8; 8],
}
#[derive(Copy, Clone, BitfieldStruct)]
#[repr(C)]
pub struct GsetothermodeH {
    #[bitfield(name = "cmd", ty = "libc::c_int", bits = "0..=7")]
    #[bitfield(name = "pad0", ty = "libc::c_int", bits = "8..=15")]
    #[bitfield(name = "sft", ty = "libc::c_int", bits = "16..=23")]
    #[bitfield(name = "len", ty = "libc::c_int", bits = "24..=31")]
    #[bitfield(name = "data", ty = "libc::c_uint", bits = "32..=63")]
    pub cmd_pad0_sft_len_data: [u8; 8],
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Gtexture {
    pub cmd: libc::c_uchar,
    pub lodscale: libc::c_uchar,
    pub tile: libc::c_uchar,
    pub on: libc::c_uchar,
    pub s: libc::c_ushort,
    pub t: libc::c_ushort,
}
#[derive(Copy, Clone, BitfieldStruct)]
#[repr(C)]
pub struct Gline3D {
    #[bitfield(name = "cmd", ty = "libc::c_int", bits = "0..=7")]
    #[bitfield(name = "pad", ty = "libc::c_int", bits = "8..=31")]
    pub cmd_pad: [u8; 4],
    pub line: Tri,
}
#[derive(Copy, Clone, BitfieldStruct)]
#[repr(C)]
pub struct Gperspnorm {
    #[bitfield(name = "cmd", ty = "libc::c_int", bits = "0..=7")]
    #[bitfield(name = "pad1", ty = "libc::c_int", bits = "8..=31")]
    pub cmd_pad1: [u8; 4],
    pub pad2: libc::c_short,
    pub scale: libc::c_short,
}
#[derive(Copy, Clone, BitfieldStruct)]
#[repr(C)]
pub struct Gsetimg {
    #[bitfield(name = "cmd", ty = "libc::c_int", bits = "0..=7")]
    #[bitfield(name = "fmt", ty = "libc::c_uint", bits = "8..=10")]
    #[bitfield(name = "siz", ty = "libc::c_uint", bits = "11..=12")]
    #[bitfield(name = "pad", ty = "libc::c_uint", bits = "13..=19")]
    #[bitfield(name = "wd", ty = "libc::c_uint", bits = "20..=31")]
    pub cmd_fmt_siz_pad_wd: [u8; 4],
    pub dram: libc::c_uint,
}
#[derive(Copy, Clone, BitfieldStruct)]
#[repr(C)]
pub struct Gsetcombine {
    #[bitfield(name = "cmd", ty = "libc::c_int", bits = "0..=7")]
    #[bitfield(name = "muxs0", ty = "libc::c_uint", bits = "8..=31")]
    #[bitfield(name = "muxs1", ty = "libc::c_uint", bits = "32..=63")]
    pub cmd_muxs0_muxs1: [u8; 8],
}
#[derive(Copy, Clone, BitfieldStruct)]
#[repr(C)]
pub struct Gsetcolor {
    #[bitfield(name = "cmd", ty = "libc::c_int", bits = "0..=7")]
    pub cmd: [u8; 1],
    pub pad: libc::c_uchar,
    pub prim_min_level: libc::c_uchar,
    pub prim_level: libc::c_uchar,
    pub color: libc::c_ulong,
}
#[derive(Copy, Clone, BitfieldStruct)]
#[repr(C)]
pub struct Gfillrect {
    #[bitfield(name = "cmd", ty = "libc::c_int", bits = "0..=7")]
    #[bitfield(name = "x0", ty = "libc::c_int", bits = "8..=17")]
    #[bitfield(name = "x0frac", ty = "libc::c_int", bits = "18..=19")]
    #[bitfield(name = "y0", ty = "libc::c_int", bits = "20..=29")]
    #[bitfield(name = "y0frac", ty = "libc::c_int", bits = "30..=31")]
    #[bitfield(name = "pad", ty = "libc::c_uint", bits = "32..=39")]
    #[bitfield(name = "x1", ty = "libc::c_int", bits = "40..=49")]
    #[bitfield(name = "x1frac", ty = "libc::c_int", bits = "50..=51")]
    #[bitfield(name = "y1", ty = "libc::c_int", bits = "52..=61")]
    #[bitfield(name = "y1frac", ty = "libc::c_int", bits = "62..=63")]
    pub cmd_x0_x0frac_y0_y0frac_pad_x1_x1frac_y1_y1frac: [u8; 8],
}
#[derive(Copy, Clone, BitfieldStruct)]
#[repr(C)]
pub struct Gsettile {
    #[bitfield(name = "cmd", ty = "libc::c_int", bits = "0..=7")]
    #[bitfield(name = "fmt", ty = "libc::c_uint", bits = "8..=10")]
    #[bitfield(name = "siz", ty = "libc::c_uint", bits = "11..=12")]
    #[bitfield(name = "pad0", ty = "libc::c_uint", bits = "13..=13")]
    #[bitfield(name = "line", ty = "libc::c_uint", bits = "14..=22")]
    #[bitfield(name = "tmem", ty = "libc::c_uint", bits = "23..=31")]
    #[bitfield(name = "pad1", ty = "libc::c_uint", bits = "32..=36")]
    #[bitfield(name = "tile", ty = "libc::c_uint", bits = "37..=39")]
    #[bitfield(name = "palette", ty = "libc::c_uint", bits = "40..=43")]
    #[bitfield(name = "ct", ty = "libc::c_uint", bits = "44..=44")]
    #[bitfield(name = "mt", ty = "libc::c_uint", bits = "45..=45")]
    #[bitfield(name = "maskt", ty = "libc::c_uint", bits = "46..=49")]
    #[bitfield(name = "shiftt", ty = "libc::c_uint", bits = "50..=53")]
    #[bitfield(name = "cs", ty = "libc::c_uint", bits = "54..=54")]
    #[bitfield(name = "ms", ty = "libc::c_uint", bits = "55..=55")]
    #[bitfield(name = "masks", ty = "libc::c_uint", bits = "56..=59")]
    #[bitfield(name = "shifts", ty = "libc::c_uint", bits = "60..=63")]
    pub cmd_fmt_siz_pad0_line_tmem_pad1_tile_palette_ct_mt_maskt_shiftt_cs_ms_masks_shifts: [u8; 8],
}
#[derive(Copy, Clone, BitfieldStruct)]
#[repr(C)]
pub struct Gloadtile {
    #[bitfield(name = "cmd", ty = "libc::c_int", bits = "0..=7")]
    #[bitfield(name = "sl", ty = "libc::c_uint", bits = "8..=19")]
    #[bitfield(name = "tl", ty = "libc::c_uint", bits = "20..=31")]
    #[bitfield(name = "pad", ty = "libc::c_int", bits = "32..=36")]
    #[bitfield(name = "tile", ty = "libc::c_uint", bits = "37..=39")]
    #[bitfield(name = "sh", ty = "libc::c_uint", bits = "40..=51")]
    #[bitfield(name = "th", ty = "libc::c_uint", bits = "52..=63")]
    pub cmd_sl_tl_pad_tile_sh_th: [u8; 8],
}
pub type Gsettilesize = Gloadtile;
pub type Gloadtlut = Gloadtile;
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Gwords {
    pub w0: libc::c_uint,
    pub w1: libc::c_uint,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub union Gfx {
    pub words: Gwords,
    pub dma: Gdma,
    pub tri: Gtri,
    pub line: Gline3D,
    pub popmtx: Gpopmtx,
    pub segment: Gsegment,
    pub setothermodeH: GsetothermodeH,
    pub setothermodeL: GsetothermodeL,
    pub texture: Gtexture,
    pub perspnorm: Gperspnorm,
    pub setimg: Gsetimg,
    pub setcombine: Gsetcombine,
    pub setcolor: Gsetcolor,
    pub fillrect: Gfillrect,
    pub settile: Gsettile,
    pub loadtile: Gloadtile,
    pub settilesize: Gsettilesize,
    pub loadtlut: Gloadtlut,
    pub force_structure_alignment: libc::c_longlong,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Vec3f {
    pub x: f32_0,
    pub y: f32_0,
    pub z: f32_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Vec3us {
    pub x: u16_0,
    pub y: u16_0,
    pub z: u16_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Vec3s {
    pub x: s16,
    pub y: s16,
    pub z: s16,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Vec3i {
    pub x: s32,
    pub y: s32,
    pub z: s32,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Sphere16 {
    pub center: Vec3s,
    pub radius: s16,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Cylinder16 {
    pub radius: s16,
    pub height: s16,
    pub yShift: s16,
    pub pos: Vec3s,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Linef {
    pub a: Vec3f,
    pub b: Vec3f,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct ItemEquips {
    pub buttonItems: [u8_0; 4],
    pub cButtonSlots: [u8_0; 3],
    pub equipment: u16_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Inventory {
    pub items: [u8_0; 24],
    pub ammo: [s8; 16],
    pub equipment: u16_0,
    pub upgrades: u32_0,
    pub questItems: u32_0,
    pub dungeonItems: [u8_0; 20],
    pub dungeonKeys: [s8; 19],
    pub defenseHearts: s8,
    pub gsTokens: s16,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct SavedSceneFlags {
    pub chest: u32_0,
    pub swch: u32_0,
    pub clear: u32_0,
    pub collect: u32_0,
    pub unk: u32_0,
    pub rooms: u32_0,
    pub floors: u32_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct HorseData {
    pub scene: s16,
    pub pos: Vec3s,
    pub angle: s16,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct RespawnData {
    pub pos: Vec3f,
    pub yaw: s16,
    pub playerParams: s16,
    pub entranceIndex: s16,
    pub roomIndex: u8_0,
    pub data: s8,
    pub tempSwchFlags: u32_0,
    pub tempCollectFlags: u32_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct FaroresWindData {
    pub pos: Vec3i,
    pub yaw: s32,
    pub playerParams: s32,
    pub entranceIndex: s32,
    pub roomIndex: s32,
    pub set: s32,
    pub tempSwchFlags: s32,
    pub tempCollectFlags: s32,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct SaveContext {
    pub entranceIndex: s32,
    pub linkAge: s32,
    pub cutsceneIndex: s32,
    pub dayTime: u16_0,
    pub nightFlag: s32,
    pub totalDays: s32,
    pub bgsDayCount: s32,
    pub newf: [libc::c_char; 6],
    pub deaths: u16_0,
    pub playerName: [libc::c_char; 8],
    pub n64ddFlag: s16,
    pub healthCapacity: s16,
    pub health: s16,
    pub magicLevel: s8,
    pub magic: s8,
    pub rupees: s16,
    pub swordHealth: u16_0,
    pub naviTimer: u16_0,
    pub magicAcquired: u8_0,
    pub unk_3B: [libc::c_char; 1],
    pub doubleMagic: u8_0,
    pub doubleDefense: u8_0,
    pub bgsFlag: u8_0,
    pub ocarinaGameRoundNum: u8_0,
    pub childEquips: ItemEquips,
    pub adultEquips: ItemEquips,
    pub unk_54: u32_0,
    pub unk_58: [libc::c_char; 14],
    pub savedSceneNum: s16,
    pub equips: ItemEquips,
    pub inventory: Inventory,
    pub sceneFlags: [SavedSceneFlags; 124],
    pub fw: FaroresWindData,
    pub unk_E8C: [libc::c_char; 16],
    pub gsFlags: [s32; 6],
    pub unk_EB4: [libc::c_char; 4],
    pub highScores: [s32; 7],
    pub eventChkInf: [u16_0; 14],
    pub itemGetInf: [u16_0; 4],
    pub infTable: [u16_0; 30],
    pub unk_F34: [libc::c_char; 4],
    pub worldMapAreaData: u32_0,
    pub unk_F3C: [libc::c_char; 4],
    pub scarecrowCustomSongSet: u8_0,
    pub scarecrowCustomSong: [u8_0; 864],
    pub unk_12A1: [libc::c_char; 36],
    pub scarecrowSpawnSongSet: u8_0,
    pub scarecrowSpawnSong: [u8_0; 128],
    pub unk_1346: [libc::c_char; 2],
    pub horseData: HorseData,
    pub checksum: u16_0,
    pub fileNum: s32,
    pub unk_1358: [libc::c_char; 4],
    pub gameMode: s32,
    pub sceneSetupIndex: s32,
    pub respawnFlag: s32,
    pub respawn: [RespawnData; 3],
    pub entranceSpeed: f32_0,
    pub entranceSound: u16_0,
    pub unk_13C2: [libc::c_char; 1],
    pub unk_13C3: u8_0,
    pub dogParams: s16,
    pub textTriggerFlags: u8_0,
    pub showTitleCard: u8_0,
    pub nayrusLoveTimer: s16,
    pub unk_13CA: [libc::c_char; 2],
    pub rupeeAccumulator: s16,
    pub timer1State: s16,
    pub timer1Value: s16,
    pub timer2State: s16,
    pub timer2Value: s16,
    pub timerX: [s16; 2],
    pub timerY: [s16; 2],
    pub unk_13DE: [libc::c_char; 2],
    pub seqId: u8_0,
    pub natureAmbienceId: u8_0,
    pub buttonStatus: [u8_0; 5],
    pub unk_13E7: u8_0,
    pub unk_13E8: u16_0,
    pub unk_13EA: u16_0,
    pub unk_13EC: u16_0,
    pub unk_13EE: u16_0,
    pub unk_13F0: s16,
    pub unk_13F2: s16,
    pub unk_13F4: s16,
    pub unk_13F6: s16,
    pub unk_13F8: s16,
    pub eventInf: [u16_0; 4],
    pub mapIndex: u16_0,
    pub minigameState: u16_0,
    pub minigameScore: u16_0,
    pub unk_1408: [libc::c_char; 1],
    pub language: u8_0,
    pub audioSetting: u8_0,
    pub unk_140B: [libc::c_char; 1],
    pub zTargetSetting: u8_0,
    pub forcedSeqId: u16_0,
    pub unk_1410: u8_0,
    pub unk_1411: [libc::c_char; 1],
    pub nextCutsceneIndex: u16_0,
    pub cutsceneTrigger: u8_0,
    pub chamberCutsceneNum: u8_0,
    pub nextDayTime: u16_0,
    pub fadeDuration: u8_0,
    pub unk_1419: u8_0,
    pub skyboxTime: u16_0,
    pub dogIsLost: u8_0,
    pub nextTransition: u8_0,
    pub unk_141E: [libc::c_char; 2],
    pub worldMapArea: s16,
    pub sunsSongState: s16,
    pub healthAccumulator: s16,
}
pub type C2RustUnnamed_2 = libc::c_uint;
pub const BTN_DISABLED: C2RustUnnamed_2 = 255;
pub const BTN_ENABLED: C2RustUnnamed_2 = 0;
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Color_RGB8 {
    pub r: u8_0,
    pub g: u8_0,
    pub b: u8_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub union Color_RGBA8_u32 {
    pub c2rust_unnamed: C2RustUnnamed_3,
    pub rgba: u32_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct C2RustUnnamed_3 {
    pub r: u8_0,
    pub g: u8_0,
    pub b: u8_0,
    pub a: u8_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Color_RGBAf {
    pub r: f32_0,
    pub g: f32_0,
    pub b: f32_0,
    pub a: f32_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct LightPoint {
    pub x: s16,
    pub y: s16,
    pub z: s16,
    pub color: [u8_0; 3],
    pub drawGlow: u8_0,
    pub radius: s16,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct LightDirectional {
    pub x: s8,
    pub y: s8,
    pub z: s8,
    pub color: [u8_0; 3],
}
#[derive(Copy, Clone)]
#[repr(C)]
pub union LightParams {
    pub point: LightPoint,
    pub dir: LightDirectional,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct LightInfo {
    pub type_0: u8_0,
    pub params: LightParams,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Lights {
    pub numLights: u8_0,
    pub l: Lightsn,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct LightNode {
    pub info: *mut LightInfo,
    pub prev: *mut LightNode,
    pub next: *mut LightNode,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct LightContext {
    pub listHead: *mut LightNode,
    pub ambientColor: [u8_0; 3],
    pub fogColor: [u8_0; 3],
    pub fogNear: s16,
    pub fogFar: s16,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct GlobalContext {
    pub state: GameState,
    pub sceneNum: s16,
    pub sceneConfig: u8_0,
    pub unk_A7: [libc::c_char; 9],
    pub sceneSegment: *mut libc::c_void,
    pub view: View,
    pub mainCamera: Camera,
    pub subCameras: [Camera; 3],
    pub cameraPtrs: [*mut Camera; 4],
    pub activeCamera: s16,
    pub nextCamera: s16,
    pub sequenceCtx: SequenceContext,
    pub lightCtx: LightContext,
    pub frameAdvCtx: FrameAdvanceContext,
    pub colCtx: CollisionContext,
    pub actorCtx: ActorContext,
    pub csCtx: CutsceneContext,
    pub soundSources: [SoundSource; 16],
    pub sramCtx: SramContext,
    pub skyboxCtx: SkyboxContext,
    pub msgCtx: MessageContext,
    pub interfaceCtx: InterfaceContext,
    pub pauseCtx: PauseContext,
    pub gameOverCtx: GameOverContext,
    pub envCtx: EnvironmentContext,
    pub animationCtx: AnimationContext,
    pub objectCtx: ObjectContext,
    pub roomCtx: RoomContext,
    pub transiActorCtx: TransitionActorContext,
    pub playerInit: Option<unsafe extern "C" fn(_: *mut Player,
                                                _: *mut GlobalContext,
                                                _: *mut FlexSkeletonHeader)
                               -> ()>,
    pub playerUpdate: Option<unsafe extern "C" fn(_: *mut Player,
                                                  _: *mut GlobalContext,
                                                  _: *mut Input) -> ()>,
    pub isPlayerDroppingFish: Option<unsafe extern "C" fn(_:
                                                              *mut GlobalContext)
                                         -> s32>,
    pub startPlayerFishing: Option<unsafe extern "C" fn(_: *mut GlobalContext)
                                       -> s32>,
    pub grabPlayer: Option<unsafe extern "C" fn(_: *mut GlobalContext,
                                                _: *mut Player) -> s32>,
    pub startPlayerCutscene: Option<unsafe extern "C" fn(_:
                                                             *mut GlobalContext,
                                                         _: *mut Actor,
                                                         _: s32) -> s32>,
    pub func_11D54: Option<unsafe extern "C" fn(_: *mut Player,
                                                _: *mut GlobalContext) -> ()>,
    pub damagePlayer: Option<unsafe extern "C" fn(_: *mut GlobalContext,
                                                  _: s32) -> s32>,
    pub talkWithPlayer: Option<unsafe extern "C" fn(_: *mut GlobalContext,
                                                    _: *mut Actor) -> ()>,
    pub viewProjectionMtxF: MtxF,
    pub billboardMtxF: MtxF,
    pub billboardMtx: *mut Mtx,
    pub gameplayFrames: u32_0,
    pub linkAgeOnLoad: u8_0,
    pub unk_11DE9: u8_0,
    pub curSpawn: u8_0,
    pub numSetupActors: u8_0,
    pub numRooms: u8_0,
    pub roomList: *mut RomFile,
    pub linkActorEntry: *mut ActorEntry,
    pub setupActorList: *mut ActorEntry,
    pub unk_11DFC: *mut libc::c_void,
    pub setupEntranceList: *mut EntranceEntry,
    pub setupExitList: *mut s16,
    pub setupPathList: *mut Path,
    pub cUpElfMsgs: *mut ElfMessage,
    pub specialEffects: *mut libc::c_void,
    pub skyboxId: u8_0,
    pub sceneLoadFlag: s8,
    pub unk_11E16: s16,
    pub unk_11E18: s16,
    pub nextEntranceIndex: s16,
    pub unk_11E1C: [libc::c_char; 64],
    pub shootingGalleryStatus: s8,
    pub bombchuBowlingStatus: s8,
    pub fadeTransition: u8_0,
    pub colChkCtx: CollisionCheckContext,
    pub envFlags: [u16_0; 20],
    pub pauseBgPreRender: PreRender,
    pub unk_12174: [libc::c_char; 83],
    pub unk_121C7: s8,
    pub transitionCtx: TransitionContext,
    pub unk_12418: [libc::c_char; 3],
    pub transitionMode: u8_0,
    pub transitionFade: TransitionFade,
    pub unk_12428: [libc::c_char; 3],
    pub unk_1242B: u8_0,
    pub loadedScene: *mut SceneTableEntry,
    pub unk_12430: [libc::c_char; 232],
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct SceneTableEntry {
    pub sceneFile: RomFile,
    pub titleFile: RomFile,
    pub unk_10: u8_0,
    pub config: u8_0,
    pub unk_12: u8_0,
    pub unk_13: u8_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct RomFile {
    pub vromStart: u32_0,
    pub vromEnd: u32_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct TransitionFade {
    pub fadeType: u8_0,
    pub isDone: u8_0,
    pub fadeDirection: u8_0,
    pub fadeColor: Color_RGBA8_u32,
    pub fadeTimer: u16_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct TransitionContext {
    pub c2rust_unnamed: C2RustUnnamed_4,
    pub transitionType: s32,
    pub init: Option<unsafe extern "C" fn(_: *mut libc::c_void)
                         -> *mut libc::c_void>,
    pub destroy: Option<unsafe extern "C" fn(_: *mut libc::c_void) -> ()>,
    pub update: Option<unsafe extern "C" fn(_: *mut libc::c_void, _: s32)
                           -> ()>,
    pub draw: Option<unsafe extern "C" fn(_: *mut libc::c_void,
                                          _: *mut *mut Gfx) -> ()>,
    pub start: Option<unsafe extern "C" fn(_: *mut libc::c_void) -> ()>,
    pub setType: Option<unsafe extern "C" fn(_: *mut libc::c_void, _: s32)
                            -> ()>,
    pub setColor: Option<unsafe extern "C" fn(_: *mut libc::c_void, _: u32_0)
                             -> ()>,
    pub setEnvColor: Option<unsafe extern "C" fn(_: *mut libc::c_void,
                                                 _: u32_0) -> ()>,
    pub isDone: Option<unsafe extern "C" fn(_: *mut libc::c_void) -> s32>,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub union C2RustUnnamed_4 {
    pub fade: TransitionFade,
    pub circle: TransitionCircle,
    pub triforce: TransitionTriforce,
    pub wipe: TransitionWipe,
    pub data: [libc::c_char; 552],
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct TransitionWipe {
    pub color: Color_RGBA8_u32,
    pub envColor: Color_RGBA8_u32,
    pub direction: u8_0,
    pub frame: u8_0,
    pub isDone: u8_0,
    pub texX: u16_0,
    pub texY: u16_0,
    pub normal: u16_0,
    pub projection: Mtx,
    pub lookAt: Mtx,
    pub modelView: [[Mtx; 3]; 2],
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct TransitionTriforce {
    pub color: Color_RGBA8_u32,
    pub transPos: f32_0,
    pub step: f32_0,
    pub state: s32,
    pub fadeDirection: s32,
    pub projection: Mtx,
    pub frame: s32,
    pub modelView: [[Mtx; 3]; 2],
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct TransitionCircle {
    pub color: Color_RGBA8_u32,
    pub envColor: Color_RGBA8_u32,
    pub texX: s32,
    pub texY: s32,
    pub step: s32,
    pub unk_14: u8_0,
    pub typeColor: u8_0,
    pub speed: u8_0,
    pub effect: u8_0,
    pub isDone: u8_0,
    pub frame: u8_0,
    pub normal: u16_0,
    pub projection: Mtx,
    pub lookAt: Mtx,
    pub texture: *mut libc::c_void,
    pub modelView: [[Mtx; 3]; 2],
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct PreRender {
    pub width: s32,
    pub height: s32,
    pub widthSave: s32,
    pub heightSave: s32,
    pub fbuf: *mut u16_0,
    pub fbufSave: *mut u16_0,
    pub cvgSave: *mut u8_0,
    pub zbuf: *mut u16_0,
    pub zbufSave: *mut u16_0,
    pub ulxSave: s32,
    pub ulySave: s32,
    pub lrxSave: s32,
    pub lrySave: s32,
    pub ulx: s32,
    pub uly: s32,
    pub lrx: s32,
    pub lry: s32,
    pub alloc: ListAlloc,
    pub unk_4C: u32_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct ListAlloc {
    pub prev: *mut ListAlloc,
    pub next: *mut ListAlloc,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct CollisionCheckContext {
    pub colATCount: s16,
    pub sacFlags: u16_0,
    pub colAT: [*mut Collider; 50],
    pub colACCount: s32,
    pub colAC: [*mut Collider; 60],
    pub colOCCount: s32,
    pub colOC: [*mut Collider; 50],
    pub colLineCount: s32,
    pub colLine: [*mut OcLine; 3],
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct OcLine {
    pub line: Linef,
    pub ocFlags: u16_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Collider {
    pub actor: *mut Actor,
    pub at: *mut Actor,
    pub ac: *mut Actor,
    pub oc: *mut Actor,
    pub atFlags: u8_0,
    pub acFlags: u8_0,
    pub ocFlags1: u8_0,
    pub ocFlags2: u8_0,
    pub colType: u8_0,
    pub shape: u8_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Actor {
    pub id: s16,
    pub category: u8_0,
    pub room: s8,
    pub flags: u32_0,
    pub home: PosRot,
    pub params: s16,
    pub objBankIndex: s8,
    pub targetMode: s8,
    pub sfx: u16_0,
    pub world: PosRot,
    pub focus: PosRot,
    pub targetArrowOffset: f32_0,
    pub scale: Vec3f,
    pub velocity: Vec3f,
    pub speedXZ: f32_0,
    pub gravity: f32_0,
    pub minVelocityY: f32_0,
    pub wallPoly: *mut CollisionPoly,
    pub floorPoly: *mut CollisionPoly,
    pub wallBgId: u8_0,
    pub floorBgId: u8_0,
    pub wallYaw: s16,
    pub floorHeight: f32_0,
    pub yDistToWater: f32_0,
    pub bgCheckFlags: u16_0,
    pub yawTowardsPlayer: s16,
    pub xyzDistToPlayerSq: f32_0,
    pub xzDistToPlayer: f32_0,
    pub yDistToPlayer: f32_0,
    pub colChkInfo: CollisionCheckInfo,
    pub shape: ActorShape,
    pub projectedPos: Vec3f,
    pub projectedW: f32_0,
    pub uncullZoneForward: f32_0,
    pub uncullZoneScale: f32_0,
    pub uncullZoneDownward: f32_0,
    pub prevPos: Vec3f,
    pub isTargeted: u8_0,
    pub targetPriority: u8_0,
    pub textId: u16_0,
    pub freezeTimer: u16_0,
    pub colorFilterParams: u16_0,
    pub colorFilterTimer: u8_0,
    pub isDrawn: u8_0,
    pub dropFlag: u8_0,
    pub naviEnemyId: u8_0,
    pub parent: *mut Actor,
    pub child: *mut Actor,
    pub prev: *mut Actor,
    pub next: *mut Actor,
    pub init: ActorFunc,
    pub destroy: ActorFunc,
    pub update: ActorFunc,
    pub draw: ActorFunc,
    pub overlayEntry: *mut ActorOverlay,
    pub dbgPad: [libc::c_char; 16],
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct ActorOverlay {
    pub vromStart: u32_0,
    pub vromEnd: u32_0,
    pub vramStart: *mut libc::c_void,
    pub vramEnd: *mut libc::c_void,
    pub loadedRamAddr: *mut libc::c_void,
    pub initInfo: *mut ActorInit,
    pub name: *mut libc::c_char,
    pub allocType: u16_0,
    pub numLoaded: s8,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct ActorInit {
    pub id: s16,
    pub category: u8_0,
    pub flags: u32_0,
    pub objectId: s16,
    pub instanceSize: u32_0,
    pub init: ActorFunc,
    pub destroy: ActorFunc,
    pub update: ActorFunc,
    pub draw: ActorFunc,
}
pub type ActorFunc
    =
    Option<unsafe extern "C" fn(_: *mut Actor, _: *mut GlobalContext) -> ()>;
#[derive(Copy, Clone)]
#[repr(C)]
pub struct ActorShape {
    pub rot: Vec3s,
    pub face: s16,
    pub yOffset: f32_0,
    pub shadowDraw: ActorShadowFunc,
    pub shadowScale: f32_0,
    pub shadowAlpha: u8_0,
    pub feetFloorFlags: u8_0,
    pub feetPos: [Vec3f; 2],
}
pub type ActorShadowFunc
    =
    Option<unsafe extern "C" fn(_: *mut Actor, _: *mut Lights,
                                _: *mut GlobalContext) -> ()>;
#[derive(Copy, Clone)]
#[repr(C)]
pub struct CollisionCheckInfo {
    pub damageTable: *mut DamageTable,
    pub displacement: Vec3f,
    pub cylRadius: s16,
    pub cylHeight: s16,
    pub cylYShift: s16,
    pub mass: u8_0,
    pub health: u8_0,
    pub damage: u8_0,
    pub damageEffect: u8_0,
    pub atHitEffect: u8_0,
    pub acHitEffect: u8_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct DamageTable {
    pub table: [u8_0; 32],
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct CollisionPoly {
    pub type_0: u16_0,
    pub c2rust_unnamed: C2RustUnnamed_5,
    pub normal: Vec3s,
    pub dist: s16,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub union C2RustUnnamed_5 {
    pub vtxData: [u16_0; 3],
    pub c2rust_unnamed: C2RustUnnamed_6,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct C2RustUnnamed_6 {
    pub flags_vIA: u16_0,
    pub flags_vIB: u16_0,
    pub vIC: u16_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct PosRot {
    pub pos: Vec3f,
    pub rot: Vec3s,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct ElfMessage {
    pub byte0: u8_0,
    pub byte1: u8_0,
    pub byte2: u8_0,
    pub byte3: u8_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Path {
    pub count: u8_0,
    pub points: *mut Vec3s,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct EntranceEntry {
    pub spawn: u8_0,
    pub room: u8_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct ActorEntry {
    pub id: s16,
    pub pos: Vec3s,
    pub rot: Vec3s,
    pub params: s16,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Player {
    pub actor: Actor,
    pub currentTunic: s8,
    pub currentSword: s8,
    pub currentShield: s8,
    pub currentBoots: s8,
    pub heldItemButton: s8,
    pub heldItemActionParam: s8,
    pub heldItemId: u8_0,
    pub prevBoots: s8,
    pub itemActionParam: s8,
    pub unk_155: [libc::c_char; 3],
    pub modelGroup: u8_0,
    pub nextModelGroup: u8_0,
    pub unk_15A: s8,
    pub modelAnimType: u8_0,
    pub leftHandType: u8_0,
    pub rightHandType: u8_0,
    pub sheathType: u8_0,
    pub currentMask: u8_0,
    pub rightHandDLists: *mut *mut Gfx,
    pub leftHandDLists: *mut *mut Gfx,
    pub sheathDLists: *mut *mut Gfx,
    pub waistDLists: *mut *mut Gfx,
    pub giObjectLoading: u8_0,
    pub giObjectDmaRequest: DmaRequest,
    pub giObjectLoadQueue: OSMesgQueue,
    pub giObjectLoadMsg: OSMesg,
    pub giObjectSegment: *mut libc::c_void,
    pub skelAnime: SkelAnime,
    pub jointTable: [Vec3s; 24],
    pub morphTable: [Vec3s; 24],
    pub blendTable: [Vec3s; 24],
    pub unk_3A8: [s16; 2],
    pub heldActor: *mut Actor,
    pub leftHandPos: Vec3f,
    pub unk_3BC: Vec3s,
    pub unk_3C4: *mut Actor,
    pub unk_3C8: Vec3f,
    pub unk_3D4: [libc::c_char; 88],
    pub doorType: s8,
    pub doorDirection: s8,
    pub doorTimer: s16,
    pub doorActor: *mut Actor,
    pub getItemId: s8,
    pub getItemDirection: u16_0,
    pub interactRangeActor: *mut Actor,
    pub mountSide: s8,
    pub unk_43D: [libc::c_char; 3],
    pub rideActor: *mut Actor,
    pub csMode: u8_0,
    pub prevCsMode: u8_0,
    pub unk_446: u8_0,
    pub unk_447: u8_0,
    pub unk_448: *mut Actor,
    pub unk_44C: [libc::c_char; 4],
    pub unk_450: Vec3f,
    pub unk_45C: Vec3f,
    pub unk_468: [libc::c_char; 2],
    pub unk_46A: s16,
    pub unk_46C: s16,
    pub unk_46E: [libc::c_char; 42],
    pub cylinder: ColliderCylinder,
    pub swordQuads: [ColliderQuad; 2],
    pub shieldQuad: ColliderQuad,
    pub unk_664: *mut Actor,
    pub unk_668: [libc::c_char; 4],
    pub unk_66C: s32,
    pub swordEffectIndex: s32,
    pub func_674: PlayerFunc674,
    pub ageProperties: *mut PlayerAgeProperties,
    pub stateFlags1: u32_0,
    pub stateFlags2: u32_0,
    pub unk_684: *mut Actor,
    pub boomerangActor: *mut Actor,
    pub naviActor: *mut Actor,
    pub naviTextId: s16,
    pub stateFlags3: u8_0,
    pub exchangeItemId: s8,
    pub targetActor: *mut Actor,
    pub targetActorDistance: f32_0,
    pub unk_69C: [libc::c_char; 4],
    pub unk_6A0: f32_0,
    pub unk_6A4: f32_0,
    pub unk_6A8: *mut Actor,
    pub unk_6AC: s8,
    pub unk_6AD: u8_0,
    pub unk_6AE: u16_0,
    pub unk_6B0: s16,
    pub unk_6B4: [libc::c_char; 4],
    pub unk_6B6: s16,
    pub unk_6B8: s16,
    pub unk_6BA: s16,
    pub unk_6BC: s16,
    pub unk_6BE: s16,
    pub unk_6C0: s16,
    pub unk_6C2: s16,
    pub unk_6C4: f32_0,
    pub skelAnime2: SkelAnime,
    pub jointTable2: [Vec3s; 24],
    pub morphTable2: [Vec3s; 24],
    pub func_82C: PlayerFunc82C,
    pub unk_830: f32_0,
    pub unk_834: s16,
    pub unk_836: s8,
    pub unk_837: u8_0,
    pub linearVelocity: f32_0,
    pub currentYaw: s16,
    pub targetYaw: s16,
    pub unk_840: u16_0,
    pub swordAnimation: s8,
    pub swordState: s8,
    pub unk_844: s8,
    pub unk_845: u8_0,
    pub unk_846: u8_0,
    pub unk_847: [s8; 4],
    pub unk_84B: [s8; 4],
    pub unk_84F: s8,
    pub unk_850: s16,
    pub unk_854: f32_0,
    pub unk_858: f32_0,
    pub unk_85C: f32_0,
    pub unk_860: s16,
    pub unk_862: s8,
    pub unk_864: f32_0,
    pub unk_868: f32_0,
    pub unk_86C: f32_0,
    pub unk_870: f32_0,
    pub unk_874: f32_0,
    pub unk_878: f32_0,
    pub unk_87C: s16,
    pub unk_87E: s16,
    pub unk_880: f32_0,
    pub wallHeight: f32_0,
    pub wallDistance: f32_0,
    pub unk_88C: u8_0,
    pub unk_88D: u8_0,
    pub unk_88E: u8_0,
    pub unk_88F: u8_0,
    pub unk_890: u8_0,
    pub shockTimer: u8_0,
    pub unk_892: u8_0,
    pub hoverBootsTimer: u8_0,
    pub fallStartHeight: s16,
    pub fallDistance: s16,
    pub unk_898: s16,
    pub unk_89A: s16,
    pub unk_89C: s16,
    pub unk_89E: u16_0,
    pub unk_8A0: u8_0,
    pub unk_8A1: u8_0,
    pub unk_8A2: s16,
    pub unk_8A4: f32_0,
    pub unk_8A8: f32_0,
    pub windSpeed: f32_0,
    pub windDirection: s16,
    pub swordInfo: [WeaponInfo; 3],
    pub bodyPartsPos: [Vec3f; 18],
    pub mf_9E0: MtxF,
    pub shieldMf: MtxF,
    pub isBurning: u8_0,
    pub flameTimers: [u8_0; 18],
    pub unk_A73: u8_0,
    pub func_A74: PlayerFuncA74,
    pub invincibilityTimer: s8,
    pub unk_A79: u8_0,
    pub unk_A7A: u8_0,
    pub unk_A7B: u8_0,
    pub unk_A7C: f32_0,
    pub unk_A80: s16,
    pub unk_A82: u16_0,
    pub unk_A84: s16,
    pub unk_A86: s8,
    pub unk_A87: u8_0,
    pub unk_A88: Vec3f,
}
pub type PlayerFuncA74
    =
    Option<unsafe extern "C" fn(_: *mut GlobalContext, _: *mut Player) -> ()>;
#[derive(Copy, Clone)]
#[repr(C)]
pub struct WeaponInfo {
    pub active: s32,
    pub tip: Vec3f,
    pub base: Vec3f,
}
pub type PlayerFunc82C
    =
    Option<unsafe extern "C" fn(_: *mut Player, _: *mut GlobalContext)
               -> s32>;
#[derive(Copy, Clone)]
#[repr(C)]
pub struct SkelAnime {
    pub limbCount: u8_0,
    pub mode: u8_0,
    pub dListCount: u8_0,
    pub taper: s8,
    pub skeleton: *mut *mut libc::c_void,
    pub animation: *mut libc::c_void,
    pub startFrame: f32_0,
    pub endFrame: f32_0,
    pub animLength: f32_0,
    pub curFrame: f32_0,
    pub playSpeed: f32_0,
    pub jointTable: *mut Vec3s,
    pub morphTable: *mut Vec3s,
    pub morphWeight: f32_0,
    pub morphRate: f32_0,
    pub update: Option<unsafe extern "C" fn() -> s32>,
    pub initFlags: s8,
    pub moveFlags: u8_0,
    pub prevRot: s16,
    pub prevTransl: Vec3s,
    pub baseTransl: Vec3s,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct PlayerAgeProperties {
    pub unk_00: f32_0,
    pub unk_04: f32_0,
    pub unk_08: f32_0,
    pub unk_0C: f32_0,
    pub unk_10: f32_0,
    pub unk_14: f32_0,
    pub unk_18: f32_0,
    pub unk_1C: f32_0,
    pub unk_20: f32_0,
    pub unk_24: f32_0,
    pub unk_28: f32_0,
    pub unk_2C: f32_0,
    pub unk_30: f32_0,
    pub unk_34: f32_0,
    pub unk_38: f32_0,
    pub unk_3C: f32_0,
    pub unk_40: f32_0,
    pub unk_44: Vec3s,
    pub unk_4A: [Vec3s; 4],
    pub unk_62: [Vec3s; 4],
    pub unk_7A: [Vec3s; 2],
    pub unk_86: [Vec3s; 2],
    pub unk_92: u16_0,
    pub unk_94: u16_0,
    pub unk_98: *mut LinkAnimationHeader,
    pub unk_9C: *mut LinkAnimationHeader,
    pub unk_A0: *mut LinkAnimationHeader,
    pub unk_A4: *mut LinkAnimationHeader,
    pub unk_A8: *mut LinkAnimationHeader,
    pub unk_AC: [*mut LinkAnimationHeader; 4],
    pub unk_BC: [*mut LinkAnimationHeader; 2],
    pub unk_C4: [*mut LinkAnimationHeader; 2],
    pub unk_CC: [*mut LinkAnimationHeader; 2],
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct LinkAnimationHeader {
    pub common: AnimationHeaderCommon,
    pub segment: *mut libc::c_void,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct AnimationHeaderCommon {
    pub frameCount: s16,
}
pub type PlayerFunc674
    =
    Option<unsafe extern "C" fn(_: *mut Player, _: *mut GlobalContext) -> ()>;
#[derive(Copy, Clone)]
#[repr(C)]
pub struct ColliderQuad {
    pub base: Collider,
    pub info: ColliderInfo,
    pub dim: ColliderQuadDim,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct ColliderQuadDim {
    pub quad: [Vec3f; 4],
    pub dcMid: Vec3s,
    pub baMid: Vec3s,
    pub acDist: f32_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct ColliderInfo {
    pub toucher: ColliderTouch,
    pub bumper: ColliderBump,
    pub elemType: u8_0,
    pub toucherFlags: u8_0,
    pub bumperFlags: u8_0,
    pub ocElemFlags: u8_0,
    pub atHit: *mut Collider,
    pub acHit: *mut Collider,
    pub atHitInfo: *mut ColliderInfo,
    pub acHitInfo: *mut ColliderInfo,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct ColliderBump {
    pub dmgFlags: u32_0,
    pub effect: u8_0,
    pub defense: u8_0,
    pub hitPos: Vec3s,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct ColliderTouch {
    pub dmgFlags: u32_0,
    pub effect: u8_0,
    pub damage: u8_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct ColliderCylinder {
    pub base: Collider,
    pub info: ColliderInfo,
    pub dim: Cylinder16,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct DmaRequest {
    pub vromAddr: u32_0,
    pub dramAddr: *mut libc::c_void,
    pub size: u32_0,
    pub filename: *const libc::c_char,
    pub line: s32,
    pub unk_14: s32,
    pub notifyQueue: *mut OSMesgQueue,
    pub notifyMsg: OSMesg,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Input {
    pub cur: OSContPad,
    pub prev: OSContPad,
    pub press: OSContPad,
    pub rel: OSContPad,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct FlexSkeletonHeader {
    pub sh: SkeletonHeader,
    pub dListCount: u8_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct SkeletonHeader {
    pub segment: *mut *mut libc::c_void,
    pub limbCount: u8_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct TransitionActorContext {
    pub numActors: u8_0,
    pub list: *mut TransitionActorEntry,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct TransitionActorEntry {
    pub sides: [C2RustUnnamed_7; 2],
    pub id: s16,
    pub pos: Vec3s,
    pub rotY: s16,
    pub params: s16,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct C2RustUnnamed_7 {
    pub room: s8,
    pub effects: s8,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct RoomContext {
    pub curRoom: Room,
    pub prevRoom: Room,
    pub bufPtrs: [*mut libc::c_void; 2],
    pub unk_30: u8_0,
    pub status: s8,
    pub unk_34: *mut libc::c_void,
    pub dmaRequest: DmaRequest,
    pub loadQueue: OSMesgQueue,
    pub loadMsg: OSMesg,
    pub unk_74: [s16; 2],
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Room {
    pub num: s8,
    pub unk_01: u8_0,
    pub unk_02: u8_0,
    pub unk_03: u8_0,
    pub echo: s8,
    pub showInvisActors: u8_0,
    pub mesh: *mut Mesh,
    pub segment: *mut libc::c_void,
    pub unk_10: [libc::c_char; 4],
}
#[derive(Copy, Clone)]
#[repr(C)]
pub union Mesh {
    pub polygon: Polygon,
    pub polygon0: PolygonType0,
    pub polygon1: PolygonType1,
    pub polygon2: PolygonType2,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct PolygonType2 {
    pub type_0: u8_0,
    pub num: u8_0,
    pub start: *mut libc::c_void,
    pub end: *mut libc::c_void,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct PolygonType1 {
    pub type_0: u8_0,
    pub format: u8_0,
    pub dlist: *mut Gfx,
    pub c2rust_unnamed: C2RustUnnamed_8,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub union C2RustUnnamed_8 {
    pub single: C2RustUnnamed_10,
    pub multi: C2RustUnnamed_9,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct C2RustUnnamed_9 {
    pub count: u8_0,
    pub list: *mut BgImage,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct BgImage {
    pub unk_00: u16_0,
    pub id: u8_0,
    pub source: u32_0,
    pub unk_0C: u32_0,
    pub tlut: u32_0,
    pub width: u16_0,
    pub height: u16_0,
    pub fmt: u8_0,
    pub siz: u8_0,
    pub mode0: u16_0,
    pub tlutCount: u16_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct C2RustUnnamed_10 {
    pub source: *mut libc::c_void,
    pub unk_0C: u32_0,
    pub tlut: *mut libc::c_void,
    pub width: u16_0,
    pub height: u16_0,
    pub fmt: u8_0,
    pub siz: u8_0,
    pub mode0: u16_0,
    pub tlutCount: u16_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct PolygonType0 {
    pub type_0: u8_0,
    pub num: u8_0,
    pub start: *mut libc::c_void,
    pub end: *mut libc::c_void,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Polygon {
    pub type_0: u8_0,
    pub num: u8_0,
    pub start: *mut libc::c_void,
    pub end: *mut libc::c_void,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct ObjectContext {
    pub spaceStart: *mut libc::c_void,
    pub spaceEnd: *mut libc::c_void,
    pub num: u8_0,
    pub unk_09: u8_0,
    pub mainKeepIndex: u8_0,
    pub subKeepIndex: u8_0,
    pub status: [ObjectStatus; 19],
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct ObjectStatus {
    pub id: s16,
    pub segment: *mut libc::c_void,
    pub dmaRequest: DmaRequest,
    pub loadQueue: OSMesgQueue,
    pub loadMsg: OSMesg,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct AnimationContext {
    pub animationCount: s16,
    pub entries: [AnimationEntry; 50],
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct AnimationEntry {
    pub type_0: u8_0,
    pub data: AnimationEntryData,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub union AnimationEntryData {
    pub load: AnimEntryLoadFrame,
    pub copy: AnimEntryCopyAll,
    pub interp: AnimEntryInterp,
    pub copy1: AnimEntryCopyTrue,
    pub copy0: AnimEntryCopyFalse,
    pub move_0: AnimEntryMoveActor,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct AnimEntryMoveActor {
    pub actor: *mut Actor,
    pub skelAnime: *mut SkelAnime,
    pub unk_08: f32_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct AnimEntryCopyFalse {
    pub queueFlag: u8_0,
    pub vecCount: u8_0,
    pub dst: *mut Vec3s,
    pub src: *mut Vec3s,
    pub copyFlag: *mut u8_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct AnimEntryCopyTrue {
    pub queueFlag: u8_0,
    pub vecCount: u8_0,
    pub dst: *mut Vec3s,
    pub src: *mut Vec3s,
    pub copyFlag: *mut u8_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct AnimEntryInterp {
    pub queueFlag: u8_0,
    pub vecCount: u8_0,
    pub base: *mut Vec3s,
    pub mod_0: *mut Vec3s,
    pub weight: f32_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct AnimEntryCopyAll {
    pub queueFlag: u8_0,
    pub vecCount: u8_0,
    pub dst: *mut Vec3s,
    pub src: *mut Vec3s,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct AnimEntryLoadFrame {
    pub req: DmaRequest,
    pub msgQueue: OSMesgQueue,
    pub msg: OSMesg,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct EnvironmentContext {
    pub unk_00: [libc::c_char; 2],
    pub timeIncrement: u16_0,
    pub sunPos: Vec3f,
    pub skybox1Index: u8_0,
    pub skybox2Index: u8_0,
    pub unk_12: [libc::c_char; 1],
    pub skyboxBlend: u8_0,
    pub unk_14: [libc::c_char; 1],
    pub skyboxDisabled: u8_0,
    pub sunMoonDisabled: u8_0,
    pub unk_17: u8_0,
    pub unk_18: u8_0,
    pub unk_19: u8_0,
    pub unk_1A: u16_0,
    pub unk_1C: [libc::c_char; 2],
    pub indoors: u8_0,
    pub unk_1F: u8_0,
    pub unk_20: u8_0,
    pub unk_21: u8_0,
    pub unk_22: u16_0,
    pub unk_24: u16_0,
    pub unk_26: [libc::c_char; 2],
    pub dirLight1: LightInfo,
    pub dirLight2: LightInfo,
    pub skyboxDmaState: s8,
    pub dmaRequest: DmaRequest,
    pub loadQueue: OSMesgQueue,
    pub loadMsg: OSMesg,
    pub unk_84: f32_0,
    pub unk_88: f32_0,
    pub adjAmbientColor: [s16; 3],
    pub adjLight1Color: [s16; 3],
    pub adjFogColor: [s16; 3],
    pub adjFogNear: s16,
    pub adjFogFar: s16,
    pub unk_A2: [libc::c_char; 6],
    pub windDirection: Vec3s,
    pub windSpeed: f32_0,
    pub numLightSettings: u8_0,
    pub lightSettingsList: *mut EnvLightSettings,
    pub blendIndoorLights: u8_0,
    pub unk_BD: u8_0,
    pub unk_BE: u8_0,
    pub unk_BF: u8_0,
    pub lightSettings: EnvLightSettings,
    pub unk_D6: u16_0,
    pub unk_D8: f32_0,
    pub unk_DC: u8_0,
    pub gloomySkyMode: u8_0,
    pub unk_DE: u8_0,
    pub lightningMode: u8_0,
    pub unk_E0: u8_0,
    pub fillScreen: u8_0,
    pub screenFillColor: [u8_0; 4],
    pub sandstormState: u8_0,
    pub sandstormPrimA: u8_0,
    pub sandstormEnvA: u8_0,
    pub customSkyboxFilter: u8_0,
    pub skyboxFilterColor: [u8_0; 4],
    pub unk_EE: [u8_0; 4],
    pub unk_F2: [u8_0; 4],
    pub unk_F6: [libc::c_char; 6],
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct EnvLightSettings {
    pub ambientColor: [u8_0; 3],
    pub light1Dir: [s8; 3],
    pub light1Color: [u8_0; 3],
    pub light2Dir: [s8; 3],
    pub light2Color: [u8_0; 3],
    pub fogColor: [u8_0; 3],
    pub fogNear: s16,
    pub fogFar: s16,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct GameOverContext {
    pub state: u16_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct PauseContext {
    pub view: View,
    pub iconItemSegment: *mut u8_0,
    pub iconItem24Segment: *mut u8_0,
    pub iconItemAltSegment: *mut u8_0,
    pub iconItemLangSegment: *mut u8_0,
    pub nameSegment: *mut u8_0,
    pub playerSegment: *mut u8_0,
    pub unk_140: [libc::c_char; 4],
    pub itemPageVtx: *mut Vtx,
    pub equipPageVtx: *mut Vtx,
    pub mapPageVtx: *mut Vtx,
    pub questPageVtx: *mut Vtx,
    pub infoPanelVtx: *mut Vtx,
    pub itemVtx: *mut Vtx,
    pub equipVtx: *mut Vtx,
    pub unk_160: [libc::c_char; 4],
    pub questVtx: *mut Vtx,
    pub cursorVtx: *mut Vtx,
    pub saveVtx: *mut Vtx,
    pub unk_170: [libc::c_char; 36],
    pub ocarinaStaff: *mut OcarinaStaff,
    pub unk_198: [libc::c_char; 32],
    pub loadQueue: OSMesgQueue,
    pub loadMsg: OSMesg,
    pub state: u16_0,
    pub debugState: u16_0,
    pub eye: Vec3f,
    pub unk_1E4: u16_0,
    pub mode: u16_0,
    pub pageIndex: u16_0,
    pub unk_1EA: u16_0,
    pub unk_1EC: u16_0,
    pub unk_1F0: f32_0,
    pub unk_1F4: f32_0,
    pub unk_1F8: f32_0,
    pub unk_1FC: f32_0,
    pub unk_200: f32_0,
    pub unk_204: f32_0,
    pub alpha: u16_0,
    pub offsetY: s16,
    pub unk_20C: [libc::c_char; 8],
    pub stickRelX: s16,
    pub stickRelY: s16,
    pub cursorPoint: [s16; 5],
    pub cursorX: [s16; 5],
    pub cursorY: [s16; 5],
    pub dungeonMapSlot: s16,
    pub cursorSpecialPos: s16,
    pub pageSwitchTimer: s16,
    pub namedItem: u16_0,
    pub cursorItem: [u16_0; 4],
    pub cursorSlot: [u16_0; 4],
    pub equipTargetItem: u16_0,
    pub equipTargetSlot: u16_0,
    pub equipTargetCBtn: u16_0,
    pub equipAnimX: s16,
    pub equipAnimY: s16,
    pub equipAnimAlpha: s16,
    pub infoPanelOffsetY: s16,
    pub nameDisplayTimer: u16_0,
    pub nameColorSet: u16_0,
    pub cursorColorSet: s16,
    pub promptChoice: s16,
    pub ocarinaSongIdx: s16,
    pub worldMapPoints: [u8_0; 20],
    pub tradeQuestLocation: u8_0,
    pub playerSkelAnime: SkelAnime,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct OcarinaStaff {
    pub noteIdx: u8_0,
    pub state: u8_0,
    pub pos: u8_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct View {
    pub magic: s32,
    pub gfxCtx: *mut GraphicsContext,
    pub viewport: Viewport,
    pub fovy: f32_0,
    pub zNear: f32_0,
    pub zFar: f32_0,
    pub scale: f32_0,
    pub eye: Vec3f,
    pub lookAt: Vec3f,
    pub up: Vec3f,
    pub vp: Vp,
    pub projection: Mtx,
    pub viewing: Mtx,
    pub projectionPtr: *mut Mtx,
    pub viewingPtr: *mut Mtx,
    pub unk_E8: Vec3f,
    pub unk_F4: Vec3f,
    pub unk_100: f32_0,
    pub unk_104: Vec3f,
    pub unk_110: Vec3f,
    pub normal: u16_0,
    pub flags: s32,
    pub unk_124: s32,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Viewport {
    pub topY: s32,
    pub bottomY: s32,
    pub leftX: s32,
    pub rightX: s32,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct GraphicsContext {
    pub polyOpaBuffer: *mut Gfx,
    pub polyXluBuffer: *mut Gfx,
    pub unk_008: [libc::c_char; 8],
    pub overlayBuffer: *mut Gfx,
    pub unk_014: u32_0,
    pub unk_018: [libc::c_char; 32],
    pub msgBuff: [OSMesg; 8],
    pub schedMsgQ: *mut OSMesgQueue,
    pub queue: OSMesgQueue,
    pub unk_074: [libc::c_char; 4],
    pub task: OSScTask,
    pub unk_0D0: [libc::c_char; 224],
    pub workBuffer: *mut Gfx,
    pub work: TwoHeadGfxArena,
    pub unk_01C4: [libc::c_char; 192],
    pub viMode: *mut OSViMode,
    pub unk_0288: [libc::c_char; 32],
    pub overlay: TwoHeadGfxArena,
    pub polyOpa: TwoHeadGfxArena,
    pub polyXlu: TwoHeadGfxArena,
    pub gfxPoolIdx: u32_0,
    pub curFrameBuffer: *mut u16_0,
    pub unk_2E0: [libc::c_char; 4],
    pub viFeatures: u32_0,
    pub fbIdx: s32,
    pub callback: Option<unsafe extern "C" fn(_: *mut GraphicsContext,
                                              _: *mut libc::c_void) -> ()>,
    pub callbackParam: *mut libc::c_void,
    pub xScale: f32_0,
    pub yScale: f32_0,
    pub unk_2FC: [libc::c_char; 4],
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct TwoHeadGfxArena {
    pub size: u32_0,
    pub bufp: *mut Gfx,
    pub p: *mut Gfx,
    pub d: *mut Gfx,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct OSScTask {
    pub next: *mut OSScTask,
    pub state: u32_0,
    pub flags: u32_0,
    pub framebuffer: *mut CfbInfo,
    pub list: OSTask,
    pub msgQ: *mut OSMesgQueue,
    pub msg: OSMesg,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct CfbInfo {
    pub fb1: *mut u16_0,
    pub swapBuffer: *mut u16_0,
    pub viMode: *mut OSViMode,
    pub features: u32_0,
    pub unk_10: u8_0,
    pub updateRate: s8,
    pub updateRate2: s8,
    pub unk_13: u8_0,
    pub xScale: f32_0,
    pub yScale: f32_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct InterfaceContext {
    pub view: View,
    pub actionVtx: *mut Vtx,
    pub beatingHeartVtx: *mut Vtx,
    pub parameterSegment: *mut u8_0,
    pub doActionSegment: *mut u8_0,
    pub iconItemSegment: *mut u8_0,
    pub mapSegment: *mut u8_0,
    pub mapPalette: [u8_0; 32],
    pub dmaRequest_160: DmaRequest,
    pub dmaRequest_180: DmaRequest,
    pub unk_1A0: [libc::c_char; 32],
    pub loadQueue: OSMesgQueue,
    pub loadMsg: OSMesg,
    pub viewport: Viewport,
    pub unk_1EC: s16,
    pub unk_1EE: u16_0,
    pub unk_1F0: u16_0,
    pub unk_1F4: f32_0,
    pub naviCalling: s16,
    pub unk_1FA: s16,
    pub unk_1FC: s16,
    pub unk_1FE: s16,
    pub unk_200: s16,
    pub beatingHeartPrim: [s16; 3],
    pub beatingHeartEnv: [s16; 3],
    pub heartsPrimR: [s16; 2],
    pub heartsPrimG: [s16; 2],
    pub heartsPrimB: [s16; 2],
    pub heartsEnvR: [s16; 2],
    pub heartsEnvG: [s16; 2],
    pub heartsEnvB: [s16; 2],
    pub unk_226: s16,
    pub unk_228: s16,
    pub unk_22A: s16,
    pub unk_22C: s16,
    pub unk_22E: s16,
    pub unk_230: s16,
    pub counterDigits: [s16; 4],
    pub numHorseBoosts: u8_0,
    pub unk_23C: u16_0,
    pub hbaAmmo: u16_0,
    pub unk_240: u16_0,
    pub unk_242: u16_0,
    pub unk_244: u16_0,
    pub aAlpha: u16_0,
    pub bAlpha: u16_0,
    pub cLeftAlpha: u16_0,
    pub cDownAlpha: u16_0,
    pub cRightAlpha: u16_0,
    pub healthAlpha: u16_0,
    pub magicAlpha: u16_0,
    pub minimapAlpha: u16_0,
    pub startAlpha: s16,
    pub unk_258: s16,
    pub unk_25A: s16,
    pub mapRoomNum: s16,
    pub mapPaletteIndex: s16,
    pub unk_260: u8_0,
    pub unk_261: u8_0,
    pub restrictions: C2RustUnnamed_11,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct C2RustUnnamed_11 {
    pub hGauge: u8_0,
    pub bButton: u8_0,
    pub aButton: u8_0,
    pub bottles: u8_0,
    pub tradeItems: u8_0,
    pub hookshot: u8_0,
    pub ocarina: u8_0,
    pub warpSongs: u8_0,
    pub sunsSong: u8_0,
    pub farores: u8_0,
    pub dinsNayrus: u8_0,
    pub all: u8_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct MessageContext {
    pub view: View,
    pub font: Font,
    pub textboxSegment: *mut libc::c_void,
    pub unk_E2B4: [libc::c_char; 4],
    pub ocarinaStaff: *mut OcarinaStaff,
    pub unk_E2BC: [libc::c_char; 60],
    pub textId: u16_0,
    pub choiceTextId: u16_0,
    pub textBoxProperties: u8_0,
    pub textBoxType: u8_0,
    pub textBoxPos: u8_0,
    pub msgLength: s32,
    pub msgMode: u8_0,
    pub unk_E305: [libc::c_char; 1],
    pub msgBufDecoded: [u8_0; 200],
    pub msgBufPos: u16_0,
    pub unk_E3D0: u16_0,
    pub textDrawPos: u16_0,
    pub decodedTextLen: u16_0,
    pub textUnskippable: u16_0,
    pub textPosX: s16,
    pub textPosY: s16,
    pub textColorR: s16,
    pub textColorG: s16,
    pub textColorB: s16,
    pub textColorAlpha: s16,
    pub textboxEndType: u8_0,
    pub choiceIndex: u8_0,
    pub choiceNum: u8_0,
    pub stateTimer: u8_0,
    pub textDelayTimer: u16_0,
    pub textDelay: u16_0,
    pub lastPlayedSong: u16_0,
    pub ocarinaMode: u16_0,
    pub ocarinaAction: u16_0,
    pub unk_E3F2: u16_0,
    pub unk_E3F4: u16_0,
    pub textboxBackgroundIdx: u16_0,
    pub textboxBackgroundForeColorIdx: u8_0,
    pub textboxBackgroundBackColorIdx: u8_0,
    pub textboxBackgroundYOffsetIdx: u8_0,
    pub textboxBackgroundUnkArg: u8_0,
    pub unk_E3FC: [libc::c_char; 2],
    pub textboxColorRed: s16,
    pub textboxColorGreen: s16,
    pub textboxColorBlue: s16,
    pub textboxColorAlphaTarget: s16,
    pub textboxColorAlphaCurrent: s16,
    pub talkActor: *mut Actor,
    pub disableWarpSongs: s16,
    pub unk_E40E: s16,
    pub lastOcaNoteIdx: u8_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Font {
    pub msgOffset: u32_0,
    pub msgLength: u32_0,
    pub charTexBuf: [u8_0; 15360],
    pub iconBuf: [u8_0; 128],
    pub fontBuf: [u8_0; 40960],
    pub c2rust_unnamed: C2RustUnnamed_12,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub union C2RustUnnamed_12 {
    pub msgBuf: [libc::c_char; 1280],
    pub msgBufWide: [u16_0; 640],
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct SkyboxContext {
    pub unk_00: [libc::c_char; 296],
    pub staticSegments: [*mut libc::c_void; 2],
    pub palettes: *mut [u16_0; 256],
    pub dListBuf: *mut [Gfx; 150],
    pub unk_138: *mut Gfx,
    pub roomVtx: *mut Vtx,
    pub unk_140: s16,
    pub rot: Vec3f,
    pub unk_150: [libc::c_char; 16],
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct SramContext {
    pub readBuff: *mut u8_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct SoundSource {
    pub countdown: u16_0,
    pub originPos: Vec3f,
    pub relativePos: Vec3f,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct CutsceneContext {
    pub unk_00: [libc::c_char; 4],
    pub segment: *mut libc::c_void,
    pub state: u8_0,
    pub unk_0C: f32_0,
    pub frames: u16_0,
    pub unk_12: u16_0,
    pub unk_14: s32,
    pub unk_18: u16_0,
    pub unk_1A: u8_0,
    pub unk_1B: u8_0,
    pub cameraFocus: *mut CutsceneCameraPoint,
    pub cameraPosition: *mut CutsceneCameraPoint,
    pub linkAction: *mut CsCmdActorAction,
    pub npcActions: [*mut CsCmdActorAction; 10],
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct CsCmdActorAction {
    pub action: u16_0,
    pub startFrame: u16_0,
    pub endFrame: u16_0,
    pub c2rust_unnamed: C2RustUnnamed_13,
    pub startPos: Vec3i,
    pub endPos: Vec3i,
    pub normal: Vec3i,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub union C2RustUnnamed_13 {
    pub rot: Vec3s,
    pub urot: Vec3us,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct CutsceneCameraPoint {
    pub continueFlag: s8,
    pub cameraRoll: s8,
    pub nextPointFrame: u16_0,
    pub viewAngle: f32_0,
    pub pos: Vec3s,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct ActorContext {
    pub freezeFlashTimer: u8_0,
    pub unk_01: [libc::c_char; 1],
    pub unk_02: u8_0,
    pub unk_03: u8_0,
    pub unk_04: [libc::c_char; 4],
    pub total: u8_0,
    pub unk_09: [libc::c_char; 3],
    pub actorLists: [ActorListEntry; 12],
    pub targetCtx: TargetContext,
    pub flags: C2RustUnnamed_14,
    pub titleCtx: TitleCardContext,
    pub unk_138: [libc::c_char; 4],
    pub absoluteSpace: *mut libc::c_void,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct TitleCardContext {
    pub texture: *mut libc::c_void,
    pub x: s16,
    pub y: s16,
    pub width: u8_0,
    pub height: u8_0,
    pub durationTimer: u8_0,
    pub delayTimer: u8_0,
    pub alpha: s16,
    pub intensity: s16,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct C2RustUnnamed_14 {
    pub swch: u32_0,
    pub tempSwch: u32_0,
    pub unk0: u32_0,
    pub unk1: u32_0,
    pub chest: u32_0,
    pub clear: u32_0,
    pub tempClear: u32_0,
    pub collect: u32_0,
    pub tempCollect: u32_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct TargetContext {
    pub naviRefPos: Vec3f,
    pub targetCenterPos: Vec3f,
    pub naviInner: Color_RGBAf,
    pub naviOuter: Color_RGBAf,
    pub arrowPointedActor: *mut Actor,
    pub targetedActor: *mut Actor,
    pub unk_40: f32_0,
    pub unk_44: f32_0,
    pub unk_48: s16,
    pub activeCategory: u8_0,
    pub unk_4B: u8_0,
    pub unk_4C: s8,
    pub unk_4D: [libc::c_char; 3],
    pub arr_50: [TargetContextEntry; 3],
    pub unk_8C: *mut Actor,
    pub bgmEnemy: *mut Actor,
    pub unk_94: *mut Actor,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct TargetContextEntry {
    pub pos: Vec3f,
    pub unk_0C: f32_0,
    pub color: Color_RGB8,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct ActorListEntry {
    pub length: s32,
    pub head: *mut Actor,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct CollisionContext {
    pub colHeader: *mut CollisionHeader,
    pub minBounds: Vec3f,
    pub maxBounds: Vec3f,
    pub subdivAmount: Vec3i,
    pub subdivLength: Vec3f,
    pub subdivLengthInv: Vec3f,
    pub lookupTbl: *mut StaticLookup,
    pub polyNodes: SSNodeList,
    pub dyna: DynaCollisionContext,
    pub memSize: u32_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct DynaCollisionContext {
    pub bitFlag: u8_0,
    pub bgActors: [BgActor; 50],
    pub bgActorFlags: [u16_0; 50],
    pub polyList: *mut CollisionPoly,
    pub vtxList: *mut Vec3s,
    pub polyNodes: DynaSSNodeList,
    pub polyNodesMax: s32,
    pub polyListMax: s32,
    pub vtxListMax: s32,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct DynaSSNodeList {
    pub tbl: *mut SSNode,
    pub count: s32,
    pub max: s32,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct SSNode {
    pub polyId: s16,
    pub next: u16_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct BgActor {
    pub actor: *mut Actor,
    pub colHeader: *mut CollisionHeader,
    pub dynaLookup: DynaLookup,
    pub vtxStartIndex: u16_0,
    pub prevTransform: ScaleRotPos,
    pub curTransform: ScaleRotPos,
    pub boundingSphere: Sphere16,
    pub minY: f32_0,
    pub maxY: f32_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct ScaleRotPos {
    pub scale: Vec3f,
    pub rot: Vec3s,
    pub pos: Vec3f,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct DynaLookup {
    pub polyStartIndex: u16_0,
    pub ceiling: SSList,
    pub wall: SSList,
    pub floor: SSList,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct SSList {
    pub head: u16_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct CollisionHeader {
    pub minBounds: Vec3s,
    pub maxBounds: Vec3s,
    pub numVertices: u16_0,
    pub vtxList: *mut Vec3s,
    pub numPolygons: u16_0,
    pub polyList: *mut CollisionPoly,
    pub surfaceTypeList: *mut SurfaceType,
    pub cameraDataList: *mut CamData,
    pub numWaterBoxes: u16_0,
    pub waterBoxes: *mut WaterBox,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct WaterBox {
    pub xMin: s16,
    pub ySurface: s16,
    pub zMin: s16,
    pub xLength: s16,
    pub zLength: s16,
    pub properties: u32_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct CamData {
    pub cameraSType: u16_0,
    pub numCameras: s16,
    pub camPosData: *mut Vec3s,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct SurfaceType {
    pub data: [u32_0; 2],
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct SSNodeList {
    pub max: u16_0,
    pub count: u16_0,
    pub tbl: *mut SSNode,
    pub polyCheckTbl: *mut u8_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct StaticLookup {
    pub floor: SSList,
    pub wall: SSList,
    pub ceiling: SSList,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct FrameAdvanceContext {
    pub enabled: s32,
    pub timer: s32,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct SequenceContext {
    pub seqId: u8_0,
    pub natureAmbienceId: u8_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Camera {
    pub paramData: [libc::c_char; 80],
    pub at: Vec3f,
    pub eye: Vec3f,
    pub up: Vec3f,
    pub eyeNext: Vec3f,
    pub skyboxOffset: Vec3f,
    pub globalCtx: *mut GlobalContext,
    pub player: *mut Player,
    pub playerPosRot: PosRot,
    pub target: *mut Actor,
    pub targetPosRot: PosRot,
    pub rUpdateRateInv: f32_0,
    pub pitchUpdateRateInv: f32_0,
    pub yawUpdateRateInv: f32_0,
    pub xzOffsetUpdateRate: f32_0,
    pub yOffsetUpdateRate: f32_0,
    pub fovUpdateRate: f32_0,
    pub xzSpeed: f32_0,
    pub dist: f32_0,
    pub speedRatio: f32_0,
    pub posOffset: Vec3f,
    pub playerPosDelta: Vec3f,
    pub fov: f32_0,
    pub atLERPStepScale: f32_0,
    pub playerGroundY: f32_0,
    pub floorNorm: Vec3f,
    pub waterYPos: f32_0,
    pub waterPrevCamIdx: s32,
    pub waterPrevCamSetting: s32,
    pub waterQuakeId: s32,
    pub data0: *mut libc::c_void,
    pub data1: *mut libc::c_void,
    pub data2: s16,
    pub data3: s16,
    pub uid: s16,
    pub unk_132: [libc::c_char; 2],
    pub inputDir: Vec3s,
    pub camDir: Vec3s,
    pub status: s16,
    pub setting: s16,
    pub mode: s16,
    pub bgCheckId: s16,
    pub camDataIdx: s16,
    pub unk_14A: s16,
    pub unk_14C: s16,
    pub childCamIdx: s16,
    pub unk_150: s16,
    pub unk_152: s16,
    pub prevSetting: s16,
    pub nextCamDataIdx: s16,
    pub nextBGCheckId: s16,
    pub roll: s16,
    pub paramFlags: s16,
    pub animState: s16,
    pub timer: s16,
    pub parentCamIdx: s16,
    pub thisIdx: s16,
    pub prevCamDataIdx: s16,
    pub csId: s16,
    pub unk_16A: s16,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct GameState {
    pub gfxCtx: *mut GraphicsContext,
    pub main: GameStateFunc,
    pub destroy: GameStateFunc,
    pub init: GameStateFunc,
    pub size: u32_0,
    pub input: [Input; 4],
    pub tha: TwoHeadArena,
    pub alloc: GameAlloc,
    pub running: u32_0,
    pub frames: u32_0,
    pub unk_A0: u32_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct GameAlloc {
    pub base: GameAllocEntry,
    pub head: *mut GameAllocEntry,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct GameAllocEntry {
    pub next: *mut GameAllocEntry,
    pub prev: *mut GameAllocEntry,
    pub size: u32_0,
    pub unk_0C: u32_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct TwoHeadArena {
    pub size: u32_0,
    pub bufp: *mut libc::c_void,
    pub head: *mut libc::c_void,
    pub tail: *mut libc::c_void,
}
pub type GameStateFunc
    =
    Option<unsafe extern "C" fn(_: *mut GameState) -> ()>;
pub type C2RustUnnamed_15 = libc::c_uint;
pub const ACTORCAT_CHEST: C2RustUnnamed_15 = 11;
pub const ACTORCAT_DOOR: C2RustUnnamed_15 = 10;
pub const ACTORCAT_BOSS: C2RustUnnamed_15 = 9;
pub const ACTORCAT_MISC: C2RustUnnamed_15 = 8;
pub const ACTORCAT_ITEMACTION: C2RustUnnamed_15 = 7;
pub const ACTORCAT_PROP: C2RustUnnamed_15 = 6;
pub const ACTORCAT_ENEMY: C2RustUnnamed_15 = 5;
pub const ACTORCAT_NPC: C2RustUnnamed_15 = 4;
pub const ACTORCAT_EXPLOSIVE: C2RustUnnamed_15 = 3;
pub const ACTORCAT_PLAYER: C2RustUnnamed_15 = 2;
pub const ACTORCAT_BG: C2RustUnnamed_15 = 1;
pub const ACTORCAT_SWITCH: C2RustUnnamed_15 = 0;
pub type C2RustUnnamed_16 = libc::c_uint;
pub const SCENE_ID_MAX: C2RustUnnamed_16 = 110;
pub const SCENE_TESTROOM: C2RustUnnamed_16 = 109;
pub const SCENE_SASATEST: C2RustUnnamed_16 = 108;
pub const SCENE_HAIRAL_NIWA2: C2RustUnnamed_16 = 107;
pub const SCENE_SUTARU: C2RustUnnamed_16 = 106;
pub const SCENE_SYOTES2: C2RustUnnamed_16 = 105;
pub const SCENE_SYOTES: C2RustUnnamed_16 = 104;
pub const SCENE_DEPTH_TEST: C2RustUnnamed_16 = 103;
pub const SCENE_BESITU: C2RustUnnamed_16 = 102;
pub const SCENE_TEST01: C2RustUnnamed_16 = 101;
pub const SCENE_GANON_TOU: C2RustUnnamed_16 = 100;
pub const SCENE_SPOT20: C2RustUnnamed_16 = 99;
pub const SCENE_SPOT18: C2RustUnnamed_16 = 98;
pub const SCENE_SPOT17: C2RustUnnamed_16 = 97;
pub const SCENE_SPOT16: C2RustUnnamed_16 = 96;
pub const SCENE_SPOT15: C2RustUnnamed_16 = 95;
pub const SCENE_SPOT13: C2RustUnnamed_16 = 94;
pub const SCENE_SPOT12: C2RustUnnamed_16 = 93;
pub const SCENE_SPOT11: C2RustUnnamed_16 = 92;
pub const SCENE_SPOT10: C2RustUnnamed_16 = 91;
pub const SCENE_SPOT09: C2RustUnnamed_16 = 90;
pub const SCENE_SPOT08: C2RustUnnamed_16 = 89;
pub const SCENE_SPOT07: C2RustUnnamed_16 = 88;
pub const SCENE_SPOT06: C2RustUnnamed_16 = 87;
pub const SCENE_SPOT05: C2RustUnnamed_16 = 86;
pub const SCENE_SPOT04: C2RustUnnamed_16 = 85;
pub const SCENE_SPOT03: C2RustUnnamed_16 = 84;
pub const SCENE_SPOT02: C2RustUnnamed_16 = 83;
pub const SCENE_SPOT01: C2RustUnnamed_16 = 82;
pub const SCENE_SPOT00: C2RustUnnamed_16 = 81;
pub const SCENE_KINSUTA: C2RustUnnamed_16 = 80;
pub const SCENE_GANON_DEMO: C2RustUnnamed_16 = 79;
pub const SCENE_MAHOUYA: C2RustUnnamed_16 = 78;
pub const SCENE_MIHARIGOYA: C2RustUnnamed_16 = 77;
pub const SCENE_SOUKO: C2RustUnnamed_16 = 76;
pub const SCENE_BOWLING: C2RustUnnamed_16 = 75;
pub const SCENE_NAKANIWA: C2RustUnnamed_16 = 74;
pub const SCENE_TURIBORI: C2RustUnnamed_16 = 73;
pub const SCENE_HAKASITARELAY: C2RustUnnamed_16 = 72;
pub const SCENE_HIRAL_DEMO: C2RustUnnamed_16 = 71;
pub const SCENE_HAIRAL_NIWA_N: C2RustUnnamed_16 = 70;
pub const SCENE_HAIRAL_NIWA: C2RustUnnamed_16 = 69;
pub const SCENE_KENJYANOMA: C2RustUnnamed_16 = 68;
pub const SCENE_TOKINOMA: C2RustUnnamed_16 = 67;
pub const SCENE_SYATEKIJYOU: C2RustUnnamed_16 = 66;
pub const SCENE_HAKAANA_OUKE: C2RustUnnamed_16 = 65;
pub const SCENE_HAKAANA2: C2RustUnnamed_16 = 64;
pub const SCENE_HAKAANA: C2RustUnnamed_16 = 63;
pub const SCENE_KAKUSIANA: C2RustUnnamed_16 = 62;
pub const SCENE_YOUSEI_IZUMI_YOKO: C2RustUnnamed_16 = 61;
pub const SCENE_YOUSEI_IZUMI_TATE: C2RustUnnamed_16 = 60;
pub const SCENE_DAIYOUSEI_IZUMI: C2RustUnnamed_16 = 59;
pub const SCENE_HUT: C2RustUnnamed_16 = 58;
pub const SCENE_TENT: C2RustUnnamed_16 = 57;
pub const SCENE_HYLIA_LABO: C2RustUnnamed_16 = 56;
pub const SCENE_LABO: C2RustUnnamed_16 = 55;
pub const SCENE_MALON_STABLE: C2RustUnnamed_16 = 54;
pub const SCENE_IMPA: C2RustUnnamed_16 = 53;
pub const SCENE_LINK_HOME: C2RustUnnamed_16 = 52;
pub const SCENE_FACE_SHOP: C2RustUnnamed_16 = 51;
pub const SCENE_NIGHT_SHOP: C2RustUnnamed_16 = 50;
pub const SCENE_ALLEY_SHOP: C2RustUnnamed_16 = 49;
pub const SCENE_DRAG: C2RustUnnamed_16 = 48;
pub const SCENE_ZOORA: C2RustUnnamed_16 = 47;
pub const SCENE_GOLON: C2RustUnnamed_16 = 46;
pub const SCENE_KOKIRI_SHOP: C2RustUnnamed_16 = 45;
pub const SCENE_SHOP1: C2RustUnnamed_16 = 44;
pub const SCENE_KAKARIKO3: C2RustUnnamed_16 = 43;
pub const SCENE_KAKARIKO: C2RustUnnamed_16 = 42;
pub const SCENE_KOKIRI_HOME5: C2RustUnnamed_16 = 41;
pub const SCENE_KOKIRI_HOME4: C2RustUnnamed_16 = 40;
pub const SCENE_KOKIRI_HOME3: C2RustUnnamed_16 = 39;
pub const SCENE_KOKIRI_HOME: C2RustUnnamed_16 = 38;
pub const SCENE_SHRINE_R: C2RustUnnamed_16 = 37;
pub const SCENE_SHRINE_N: C2RustUnnamed_16 = 36;
pub const SCENE_SHRINE: C2RustUnnamed_16 = 35;
pub const SCENE_MARKET_RUINS: C2RustUnnamed_16 = 34;
pub const SCENE_MARKET_NIGHT: C2RustUnnamed_16 = 33;
pub const SCENE_MARKET_DAY: C2RustUnnamed_16 = 32;
pub const SCENE_MARKET_ALLEY_N: C2RustUnnamed_16 = 31;
pub const SCENE_MARKET_ALLEY: C2RustUnnamed_16 = 30;
pub const SCENE_ENRUI: C2RustUnnamed_16 = 29;
pub const SCENE_ENTRA_N: C2RustUnnamed_16 = 28;
pub const SCENE_ENTRA: C2RustUnnamed_16 = 27;
pub const SCENE_GANON_FINAL: C2RustUnnamed_16 = 26;
pub const SCENE_GANON_BOSS: C2RustUnnamed_16 = 25;
pub const SCENE_HAKADAN_BS: C2RustUnnamed_16 = 24;
pub const SCENE_JYASINBOSS: C2RustUnnamed_16 = 23;
pub const SCENE_MIZUSIN_BS: C2RustUnnamed_16 = 22;
pub const SCENE_FIRE_BS: C2RustUnnamed_16 = 21;
pub const SCENE_MORIBOSSROOM: C2RustUnnamed_16 = 20;
pub const SCENE_BDAN_BOSS: C2RustUnnamed_16 = 19;
pub const SCENE_DDAN_BOSS: C2RustUnnamed_16 = 18;
pub const SCENE_YDAN_BOSS: C2RustUnnamed_16 = 17;
pub const SCENE_TAKARAYA: C2RustUnnamed_16 = 16;
pub const SCENE_GANONTIKA_SONOGO: C2RustUnnamed_16 = 15;
pub const SCENE_GANON_SONOGO: C2RustUnnamed_16 = 14;
pub const SCENE_GANONTIKA: C2RustUnnamed_16 = 13;
pub const SCENE_GERUDOWAY: C2RustUnnamed_16 = 12;
pub const SCENE_MEN: C2RustUnnamed_16 = 11;
pub const SCENE_GANON: C2RustUnnamed_16 = 10;
pub const SCENE_ICE_DOUKUTO: C2RustUnnamed_16 = 9;
pub const SCENE_HAKADANCH: C2RustUnnamed_16 = 8;
pub const SCENE_HAKADAN: C2RustUnnamed_16 = 7;
pub const SCENE_JYASINZOU: C2RustUnnamed_16 = 6;
pub const SCENE_MIZUSIN: C2RustUnnamed_16 = 5;
pub const SCENE_HIDAN: C2RustUnnamed_16 = 4;
pub const SCENE_BMORI1: C2RustUnnamed_16 = 3;
pub const SCENE_BDAN: C2RustUnnamed_16 = 2;
pub const SCENE_DDAN: C2RustUnnamed_16 = 1;
pub const SCENE_YDAN: C2RustUnnamed_16 = 0;
pub type C2RustUnnamed_17 = libc::c_uint;
pub const EQUIP_BOOTS: C2RustUnnamed_17 = 3;
pub const EQUIP_TUNIC: C2RustUnnamed_17 = 2;
pub const EQUIP_SHIELD: C2RustUnnamed_17 = 1;
pub const EQUIP_SWORD: C2RustUnnamed_17 = 0;
pub type C2RustUnnamed_18 = libc::c_uint;
pub const UPG_NUTS: C2RustUnnamed_18 = 7;
pub const UPG_STICKS: C2RustUnnamed_18 = 6;
pub const UPG_BULLET_BAG: C2RustUnnamed_18 = 5;
pub const UPG_WALLET: C2RustUnnamed_18 = 4;
pub const UPG_SCALE: C2RustUnnamed_18 = 3;
pub const UPG_STRENGTH: C2RustUnnamed_18 = 2;
pub const UPG_BOMB_BAG: C2RustUnnamed_18 = 1;
pub const UPG_QUIVER: C2RustUnnamed_18 = 0;
pub type C2RustUnnamed_19 = libc::c_uint;
pub const QUEST_HEART_PIECE: C2RustUnnamed_19 = 24;
pub const QUEST_SKULL_TOKEN: C2RustUnnamed_19 = 23;
pub const QUEST_GERUDO_CARD: C2RustUnnamed_19 = 22;
pub const QUEST_STONE_OF_AGONY: C2RustUnnamed_19 = 21;
pub const QUEST_ZORA_SAPPHIRE: C2RustUnnamed_19 = 20;
pub const QUEST_GORON_RUBY: C2RustUnnamed_19 = 19;
pub const QUEST_KOKIRI_EMERALD: C2RustUnnamed_19 = 18;
pub const QUEST_SONG_STORMS: C2RustUnnamed_19 = 17;
pub const QUEST_SONG_TIME: C2RustUnnamed_19 = 16;
pub const QUEST_SONG_SUN: C2RustUnnamed_19 = 15;
pub const QUEST_SONG_SARIA: C2RustUnnamed_19 = 14;
pub const QUEST_SONG_EPONA: C2RustUnnamed_19 = 13;
pub const QUEST_SONG_LULLABY: C2RustUnnamed_19 = 12;
pub const QUEST_SONG_PRELUDE: C2RustUnnamed_19 = 11;
pub const QUEST_SONG_NOCTURNE: C2RustUnnamed_19 = 10;
pub const QUEST_SONG_REQUIEM: C2RustUnnamed_19 = 9;
pub const QUEST_SONG_SERENADE: C2RustUnnamed_19 = 8;
pub const QUEST_SONG_BOLERO: C2RustUnnamed_19 = 7;
pub const QUEST_SONG_MINUET: C2RustUnnamed_19 = 6;
pub const QUEST_MEDALLION_LIGHT: C2RustUnnamed_19 = 5;
pub const QUEST_MEDALLION_SHADOW: C2RustUnnamed_19 = 4;
pub const QUEST_MEDALLION_SPIRIT: C2RustUnnamed_19 = 3;
pub const QUEST_MEDALLION_WATER: C2RustUnnamed_19 = 2;
pub const QUEST_MEDALLION_FIRE: C2RustUnnamed_19 = 1;
pub const QUEST_MEDALLION_FOREST: C2RustUnnamed_19 = 0;
pub type C2RustUnnamed_20 = libc::c_uint;
pub const DUNGEON_MAP: C2RustUnnamed_20 = 2;
pub const DUNGEON_COMPASS: C2RustUnnamed_20 = 1;
pub const DUNGEON_KEY_BOSS: C2RustUnnamed_20 = 0;
pub type C2RustUnnamed_21 = libc::c_uint;
pub const ITEM_NONE: C2RustUnnamed_21 = 255;
pub const ITEM_NONE_FE: C2RustUnnamed_21 = 254;
pub const ITEM_LAST_USED: C2RustUnnamed_21 = 252;
pub const ITEM_NUT_UPGRADE_40: C2RustUnnamed_21 = 155;
pub const ITEM_NUT_UPGRADE_30: C2RustUnnamed_21 = 154;
pub const ITEM_STICK_UPGRADE_30: C2RustUnnamed_21 = 153;
pub const ITEM_STICK_UPGRADE_20: C2RustUnnamed_21 = 152;
pub const ITEM_BOMBCHUS_20: C2RustUnnamed_21 = 151;
pub const ITEM_BOMBCHUS_5: C2RustUnnamed_21 = 150;
pub const ITEM_SEEDS_30: C2RustUnnamed_21 = 149;
pub const ITEM_ARROWS_LARGE: C2RustUnnamed_21 = 148;
pub const ITEM_ARROWS_MEDIUM: C2RustUnnamed_21 = 147;
pub const ITEM_ARROWS_SMALL: C2RustUnnamed_21 = 146;
pub const ITEM_BOMBS_30: C2RustUnnamed_21 = 145;
pub const ITEM_BOMBS_20: C2RustUnnamed_21 = 144;
pub const ITEM_BOMBS_10: C2RustUnnamed_21 = 143;
pub const ITEM_BOMBS_5: C2RustUnnamed_21 = 142;
pub const ITEM_NUTS_10: C2RustUnnamed_21 = 141;
pub const ITEM_NUTS_5: C2RustUnnamed_21 = 140;
pub const ITEM_STICKS_10: C2RustUnnamed_21 = 139;
pub const ITEM_STICKS_5: C2RustUnnamed_21 = 138;
pub const ITEM_INVALID_8: C2RustUnnamed_21 = 137;
pub const ITEM_RUPEE_GOLD: C2RustUnnamed_21 = 136;
pub const ITEM_RUPEE_PURPLE: C2RustUnnamed_21 = 135;
pub const ITEM_RUPEE_RED: C2RustUnnamed_21 = 134;
pub const ITEM_RUPEE_BLUE: C2RustUnnamed_21 = 133;
pub const ITEM_RUPEE_GREEN: C2RustUnnamed_21 = 132;
pub const ITEM_HEART: C2RustUnnamed_21 = 131;
pub const ITEM_MILK: C2RustUnnamed_21 = 130;
pub const ITEM_INVALID_7: C2RustUnnamed_21 = 129;
pub const ITEM_INVALID_6: C2RustUnnamed_21 = 128;
pub const ITEM_INVALID_5: C2RustUnnamed_21 = 127;
pub const ITEM_INVALID_4: C2RustUnnamed_21 = 126;
pub const ITEM_INVALID_3: C2RustUnnamed_21 = 125;
pub const ITEM_INVALID_2: C2RustUnnamed_21 = 124;
pub const ITEM_INVALID_1: C2RustUnnamed_21 = 123;
pub const ITEM_HEART_PIECE_2: C2RustUnnamed_21 = 122;
pub const ITEM_MAGIC_LARGE: C2RustUnnamed_21 = 121;
pub const ITEM_MAGIC_SMALL: C2RustUnnamed_21 = 120;
pub const ITEM_KEY_SMALL: C2RustUnnamed_21 = 119;
pub const ITEM_DUNGEON_MAP: C2RustUnnamed_21 = 118;
pub const ITEM_COMPASS: C2RustUnnamed_21 = 117;
pub const ITEM_KEY_BOSS: C2RustUnnamed_21 = 116;
pub const ITEM_HEART_PIECE: C2RustUnnamed_21 = 115;
pub const ITEM_HEART_CONTAINER: C2RustUnnamed_21 = 114;
pub const ITEM_SKULL_TOKEN: C2RustUnnamed_21 = 113;
pub const ITEM_GERUDO_CARD: C2RustUnnamed_21 = 112;
pub const ITEM_STONE_OF_AGONY: C2RustUnnamed_21 = 111;
pub const ITEM_ZORA_SAPPHIRE: C2RustUnnamed_21 = 110;
pub const ITEM_GORON_RUBY: C2RustUnnamed_21 = 109;
pub const ITEM_KOKIRI_EMERALD: C2RustUnnamed_21 = 108;
pub const ITEM_MEDALLION_LIGHT: C2RustUnnamed_21 = 107;
pub const ITEM_MEDALLION_SHADOW: C2RustUnnamed_21 = 106;
pub const ITEM_MEDALLION_SPIRIT: C2RustUnnamed_21 = 105;
pub const ITEM_MEDALLION_WATER: C2RustUnnamed_21 = 104;
pub const ITEM_MEDALLION_FIRE: C2RustUnnamed_21 = 103;
pub const ITEM_MEDALLION_FOREST: C2RustUnnamed_21 = 102;
pub const ITEM_SONG_STORMS: C2RustUnnamed_21 = 101;
pub const ITEM_SONG_TIME: C2RustUnnamed_21 = 100;
pub const ITEM_SONG_SUN: C2RustUnnamed_21 = 99;
pub const ITEM_SONG_SARIA: C2RustUnnamed_21 = 98;
pub const ITEM_SONG_EPONA: C2RustUnnamed_21 = 97;
pub const ITEM_SONG_LULLABY: C2RustUnnamed_21 = 96;
pub const ITEM_SONG_PRELUDE: C2RustUnnamed_21 = 95;
pub const ITEM_SONG_NOCTURNE: C2RustUnnamed_21 = 94;
pub const ITEM_SONG_REQUIEM: C2RustUnnamed_21 = 93;
pub const ITEM_SONG_SERENADE: C2RustUnnamed_21 = 92;
pub const ITEM_SONG_BOLERO: C2RustUnnamed_21 = 91;
pub const ITEM_SONG_MINUET: C2RustUnnamed_21 = 90;
pub const ITEM_FISHING_POLE: C2RustUnnamed_21 = 89;
pub const ITEM_SEEDS: C2RustUnnamed_21 = 88;
pub const ITEM_WALLET_GIANT: C2RustUnnamed_21 = 87;
pub const ITEM_WALLET_ADULT: C2RustUnnamed_21 = 86;
pub const ITEM_SWORD_KNIFE: C2RustUnnamed_21 = 85;
pub const ITEM_SCALE_GOLDEN: C2RustUnnamed_21 = 84;
pub const ITEM_SCALE_SILVER: C2RustUnnamed_21 = 83;
pub const ITEM_GAUNTLETS_GOLD: C2RustUnnamed_21 = 82;
pub const ITEM_GAUNTLETS_SILVER: C2RustUnnamed_21 = 81;
pub const ITEM_BRACELET: C2RustUnnamed_21 = 80;
pub const ITEM_BOMB_BAG_40: C2RustUnnamed_21 = 79;
pub const ITEM_BOMB_BAG_30: C2RustUnnamed_21 = 78;
pub const ITEM_BOMB_BAG_20: C2RustUnnamed_21 = 77;
pub const ITEM_QUIVER_50: C2RustUnnamed_21 = 76;
pub const ITEM_QUIVER_40: C2RustUnnamed_21 = 75;
pub const ITEM_QUIVER_30: C2RustUnnamed_21 = 74;
pub const ITEM_BULLET_BAG_50: C2RustUnnamed_21 = 73;
pub const ITEM_BULLET_BAG_40: C2RustUnnamed_21 = 72;
pub const ITEM_BULLET_BAG_30: C2RustUnnamed_21 = 71;
pub const ITEM_BOOTS_HOVER: C2RustUnnamed_21 = 70;
pub const ITEM_BOOTS_IRON: C2RustUnnamed_21 = 69;
pub const ITEM_BOOTS_KOKIRI: C2RustUnnamed_21 = 68;
pub const ITEM_TUNIC_ZORA: C2RustUnnamed_21 = 67;
pub const ITEM_TUNIC_GORON: C2RustUnnamed_21 = 66;
pub const ITEM_TUNIC_KOKIRI: C2RustUnnamed_21 = 65;
pub const ITEM_SHIELD_MIRROR: C2RustUnnamed_21 = 64;
pub const ITEM_SHIELD_HYLIAN: C2RustUnnamed_21 = 63;
pub const ITEM_SHIELD_DEKU: C2RustUnnamed_21 = 62;
pub const ITEM_SWORD_BGS: C2RustUnnamed_21 = 61;
pub const ITEM_SWORD_MASTER: C2RustUnnamed_21 = 60;
pub const ITEM_SWORD_KOKIRI: C2RustUnnamed_21 = 59;
pub const ITEM_BOW_ARROW_LIGHT: C2RustUnnamed_21 = 58;
pub const ITEM_BOW_ARROW_ICE: C2RustUnnamed_21 = 57;
pub const ITEM_BOW_ARROW_FIRE: C2RustUnnamed_21 = 56;
pub const ITEM_CLAIM_CHECK: C2RustUnnamed_21 = 55;
pub const ITEM_EYEDROPS: C2RustUnnamed_21 = 54;
pub const ITEM_FROG: C2RustUnnamed_21 = 53;
pub const ITEM_PRESCRIPTION: C2RustUnnamed_21 = 52;
pub const ITEM_SWORD_BROKEN: C2RustUnnamed_21 = 51;
pub const ITEM_SAW: C2RustUnnamed_21 = 50;
pub const ITEM_ODD_POTION: C2RustUnnamed_21 = 49;
pub const ITEM_ODD_MUSHROOM: C2RustUnnamed_21 = 48;
pub const ITEM_COJIRO: C2RustUnnamed_21 = 47;
pub const ITEM_POCKET_CUCCO: C2RustUnnamed_21 = 46;
pub const ITEM_POCKET_EGG: C2RustUnnamed_21 = 45;
pub const ITEM_SOLD_OUT: C2RustUnnamed_21 = 44;
pub const ITEM_MASK_TRUTH: C2RustUnnamed_21 = 43;
pub const ITEM_MASK_GERUDO: C2RustUnnamed_21 = 42;
pub const ITEM_MASK_ZORA: C2RustUnnamed_21 = 41;
pub const ITEM_MASK_GORON: C2RustUnnamed_21 = 40;
pub const ITEM_MASK_BUNNY: C2RustUnnamed_21 = 39;
pub const ITEM_MASK_SPOOKY: C2RustUnnamed_21 = 38;
pub const ITEM_MASK_SKULL: C2RustUnnamed_21 = 37;
pub const ITEM_MASK_KEATON: C2RustUnnamed_21 = 36;
pub const ITEM_LETTER_ZELDA: C2RustUnnamed_21 = 35;
pub const ITEM_CHICKEN: C2RustUnnamed_21 = 34;
pub const ITEM_WEIRD_EGG: C2RustUnnamed_21 = 33;
pub const ITEM_POE: C2RustUnnamed_21 = 32;
pub const ITEM_MILK_HALF: C2RustUnnamed_21 = 31;
pub const ITEM_BIG_POE: C2RustUnnamed_21 = 30;
pub const ITEM_BUG: C2RustUnnamed_21 = 29;
pub const ITEM_BLUE_FIRE: C2RustUnnamed_21 = 28;
pub const ITEM_LETTER_RUTO: C2RustUnnamed_21 = 27;
pub const ITEM_MILK_BOTTLE: C2RustUnnamed_21 = 26;
pub const ITEM_FISH: C2RustUnnamed_21 = 25;
pub const ITEM_FAIRY: C2RustUnnamed_21 = 24;
pub const ITEM_POTION_BLUE: C2RustUnnamed_21 = 23;
pub const ITEM_POTION_GREEN: C2RustUnnamed_21 = 22;
pub const ITEM_POTION_RED: C2RustUnnamed_21 = 21;
pub const ITEM_BOTTLE: C2RustUnnamed_21 = 20;
pub const ITEM_NAYRUS_LOVE: C2RustUnnamed_21 = 19;
pub const ITEM_ARROW_LIGHT: C2RustUnnamed_21 = 18;
pub const ITEM_HAMMER: C2RustUnnamed_21 = 17;
pub const ITEM_BEAN: C2RustUnnamed_21 = 16;
pub const ITEM_LENS: C2RustUnnamed_21 = 15;
pub const ITEM_BOOMERANG: C2RustUnnamed_21 = 14;
pub const ITEM_FARORES_WIND: C2RustUnnamed_21 = 13;
pub const ITEM_ARROW_ICE: C2RustUnnamed_21 = 12;
pub const ITEM_LONGSHOT: C2RustUnnamed_21 = 11;
pub const ITEM_HOOKSHOT: C2RustUnnamed_21 = 10;
pub const ITEM_BOMBCHU: C2RustUnnamed_21 = 9;
pub const ITEM_OCARINA_TIME: C2RustUnnamed_21 = 8;
pub const ITEM_OCARINA_FAIRY: C2RustUnnamed_21 = 7;
pub const ITEM_SLINGSHOT: C2RustUnnamed_21 = 6;
pub const ITEM_DINS_FIRE: C2RustUnnamed_21 = 5;
pub const ITEM_ARROW_FIRE: C2RustUnnamed_21 = 4;
pub const ITEM_BOW: C2RustUnnamed_21 = 3;
pub const ITEM_BOMB: C2RustUnnamed_21 = 2;
pub const ITEM_NUT: C2RustUnnamed_21 = 1;
pub const ITEM_STICK: C2RustUnnamed_21 = 0;
pub type C2RustUnnamed_22 = libc::c_uint;
pub const SEQ_PLAYER_BGM_SUB: C2RustUnnamed_22 = 3;
pub const SEQ_PLAYER_SFX: C2RustUnnamed_22 = 2;
pub const SEQ_PLAYER_FANFARE: C2RustUnnamed_22 = 1;
pub const SEQ_PLAYER_BGM_MAIN: C2RustUnnamed_22 = 0;
#[derive(Copy, Clone)]
#[repr(C)]
pub struct GameInfo {
    pub regPage: s32,
    pub regGroup: s32,
    pub regCur: s32,
    pub dpadLast: s32,
    pub repeat: s32,
    pub data: [s16; 2784],
}
pub type C2RustUnnamed_23 = libc::c_uint;
pub const LANGUAGE_MAX: C2RustUnnamed_23 = 3;
pub const LANGUAGE_FRA: C2RustUnnamed_23 = 2;
pub const LANGUAGE_GER: C2RustUnnamed_23 = 1;
pub const LANGUAGE_ENG: C2RustUnnamed_23 = 0;
pub type C2RustUnnamed_24 = libc::c_uint;
pub const DO_ACTION_MAX: C2RustUnnamed_24 = 29;
pub const DO_ACTION_8: C2RustUnnamed_24 = 28;
pub const DO_ACTION_7: C2RustUnnamed_24 = 27;
pub const DO_ACTION_6: C2RustUnnamed_24 = 26;
pub const DO_ACTION_5: C2RustUnnamed_24 = 25;
pub const DO_ACTION_4: C2RustUnnamed_24 = 24;
pub const DO_ACTION_3: C2RustUnnamed_24 = 23;
pub const DO_ACTION_2: C2RustUnnamed_24 = 22;
pub const DO_ACTION_1: C2RustUnnamed_24 = 21;
pub const DO_ACTION_REEL: C2RustUnnamed_24 = 20;
pub const DO_ACTION_PUTAWAY: C2RustUnnamed_24 = 19;
pub const DO_ACTION_STOP: C2RustUnnamed_24 = 18;
pub const DO_ACTION_GRAB: C2RustUnnamed_24 = 17;
pub const DO_ACTION_NEXT: C2RustUnnamed_24 = 16;
pub const DO_ACTION_SPEAK: C2RustUnnamed_24 = 15;
pub const DO_ACTION_SAVE: C2RustUnnamed_24 = 14;
pub const DO_ACTION_DOWN: C2RustUnnamed_24 = 13;
pub const DO_ACTION_DROP: C2RustUnnamed_24 = 12;
pub const DO_ACTION_CLIMB: C2RustUnnamed_24 = 11;
pub const DO_ACTION_NONE: C2RustUnnamed_24 = 10;
pub const DO_ACTION_THROW: C2RustUnnamed_24 = 9;
pub const DO_ACTION_FASTER: C2RustUnnamed_24 = 8;
pub const DO_ACTION_DIVE: C2RustUnnamed_24 = 7;
pub const DO_ACTION_DECIDE: C2RustUnnamed_24 = 6;
pub const DO_ACTION_JUMP: C2RustUnnamed_24 = 5;
pub const DO_ACTION_OPEN: C2RustUnnamed_24 = 4;
pub const DO_ACTION_RETURN: C2RustUnnamed_24 = 3;
pub const DO_ACTION_ENTER: C2RustUnnamed_24 = 2;
pub const DO_ACTION_CHECK: C2RustUnnamed_24 = 1;
pub const DO_ACTION_ATTACK: C2RustUnnamed_24 = 0;
pub type C2RustUnnamed_25 = libc::c_uint;
pub const PAUSE_WORLD_MAP: C2RustUnnamed_25 = 4;
pub const PAUSE_EQUIP: C2RustUnnamed_25 = 3;
pub const PAUSE_QUEST: C2RustUnnamed_25 = 2;
pub const PAUSE_MAP: C2RustUnnamed_25 = 1;
pub const PAUSE_ITEM: C2RustUnnamed_25 = 0;
#[derive(Copy, Clone)]
#[repr(C)]
pub struct OpeningContext {
    pub state: GameState,
    pub view: View,
}
pub type C2RustUnnamed_26 = libc::c_uint;
pub const MTXMODE_APPLY: C2RustUnnamed_26 = 1;
pub const MTXMODE_NEW: C2RustUnnamed_26 = 0;
static mut sEquipmentFRATexs: [*mut libc::c_void; 15] =
    unsafe {
        [gPauseEquipment00FRATex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseEquipment01Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseEquipment02Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseEquipment03Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseEquipment04Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseEquipment10FRATex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseEquipment11Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseEquipment12Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseEquipment13Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseEquipment14Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseEquipment20FRATex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseEquipment21Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseEquipment22Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseEquipment23Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseEquipment24Tex.as_ptr() as *mut _ as *mut libc::c_void]
    };
static mut sSelectItemFRATexs: [*mut libc::c_void; 15] =
    unsafe {
        [gPauseSelectItem00FRATex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSelectItem01Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSelectItem02Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSelectItem03Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSelectItem04Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSelectItem10FRATex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSelectItem11Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSelectItem12Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSelectItem13Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSelectItem14Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSelectItem20FRATex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSelectItem21Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSelectItem22Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSelectItem23Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSelectItem24Tex.as_ptr() as *mut _ as *mut libc::c_void]
    };
static mut sMapFRATexs: [*mut libc::c_void; 15] =
    unsafe {
        [gPauseMap00Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseMap01Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseMap02Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseMap03Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseMap04Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseMap10FRATex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseMap11Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseMap12Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseMap13Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseMap14Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseMap20Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseMap21Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseMap22Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseMap23Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseMap24Tex.as_ptr() as *mut _ as *mut libc::c_void]
    };
static mut sQuestStatusFRATexs: [*mut libc::c_void; 15] =
    unsafe {
        [gPauseQuestStatus00Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseQuestStatus01Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseQuestStatus02Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseQuestStatus03Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseQuestStatus04Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseQuestStatus10FRATex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseQuestStatus11Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseQuestStatus12Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseQuestStatus13Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseQuestStatus14Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseQuestStatus20Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseQuestStatus21Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseQuestStatus22Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseQuestStatus23Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseQuestStatus24Tex.as_ptr() as *mut _ as *mut libc::c_void]
    };
static mut sSaveFRATexs: [*mut libc::c_void; 15] =
    unsafe {
        [gPauseSave00FRATex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSave01Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSave02Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSave03Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSave04Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSave10FRATex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSave11Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSave12Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSave13Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSave14Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSave20FRATex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSave21Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSave22Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSave23Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSave24Tex.as_ptr() as *mut _ as *mut libc::c_void]
    };
static mut sEquipmentGERTexs: [*mut libc::c_void; 15] =
    unsafe {
        [gPauseEquipment00GERTex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseEquipment01Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseEquipment02Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseEquipment03Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseEquipment04Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseEquipment10GERTex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseEquipment11Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseEquipment12Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseEquipment13Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseEquipment14Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseEquipment20GERTex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseEquipment21Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseEquipment22Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseEquipment23Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseEquipment24Tex.as_ptr() as *mut _ as *mut libc::c_void]
    };
static mut sSelectItemGERTexs: [*mut libc::c_void; 15] =
    unsafe {
        [gPauseSelectItem00GERTex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSelectItem01Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSelectItem02Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSelectItem03Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSelectItem04Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSelectItem10GERTex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSelectItem11Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSelectItem12Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSelectItem13Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSelectItem14Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSelectItem20GERTex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSelectItem21Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSelectItem22Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSelectItem23Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSelectItem24Tex.as_ptr() as *mut _ as *mut libc::c_void]
    };
static mut sMapGERTexs: [*mut libc::c_void; 15] =
    unsafe {
        [gPauseMap00Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseMap01Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseMap02Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseMap03Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseMap04Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseMap10GERTex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseMap11Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseMap12Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseMap13Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseMap14Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseMap20Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseMap21Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseMap22Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseMap23Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseMap24Tex.as_ptr() as *mut _ as *mut libc::c_void]
    };
static mut sQuestStatusGERTexs: [*mut libc::c_void; 15] =
    unsafe {
        [gPauseQuestStatus00Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseQuestStatus01Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseQuestStatus02Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseQuestStatus03Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseQuestStatus04Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseQuestStatus10GERTex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseQuestStatus11Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseQuestStatus12Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseQuestStatus13Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseQuestStatus14Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseQuestStatus20Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseQuestStatus21Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseQuestStatus22Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseQuestStatus23Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseQuestStatus24Tex.as_ptr() as *mut _ as *mut libc::c_void]
    };
static mut sSaveGERTexs: [*mut libc::c_void; 15] =
    unsafe {
        [gPauseSave00Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSave01Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSave02Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSave03Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSave04Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSave10GERTex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSave11Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSave12Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSave13Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSave14Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSave20GERTex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSave21Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSave22Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSave23Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSave24Tex.as_ptr() as *mut _ as *mut libc::c_void]
    };
static mut sEquipmentENGTexs: [*mut libc::c_void; 15] =
    unsafe {
        [gPauseEquipment00Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseEquipment01Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseEquipment02Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseEquipment03Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseEquipment04Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseEquipment10ENGTex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseEquipment11Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseEquipment12Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseEquipment13Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseEquipment14Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseEquipment20Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseEquipment21Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseEquipment22Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseEquipment23Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseEquipment24Tex.as_ptr() as *mut _ as *mut libc::c_void]
    };
static mut sSelectItemENGTexs: [*mut libc::c_void; 15] =
    unsafe {
        [gPauseSelectItem00ENGTex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSelectItem01Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSelectItem02Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSelectItem03Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSelectItem04Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSelectItem10ENGTex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSelectItem11Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSelectItem12Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSelectItem13Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSelectItem14Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSelectItem20ENGTex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSelectItem21Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSelectItem22Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSelectItem23Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSelectItem24Tex.as_ptr() as *mut _ as *mut libc::c_void]
    };
static mut sMapENGTexs: [*mut libc::c_void; 15] =
    unsafe {
        [gPauseMap00Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseMap01Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseMap02Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseMap03Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseMap04Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseMap10ENGTex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseMap11Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseMap12Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseMap13Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseMap14Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseMap20Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseMap21Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseMap22Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseMap23Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseMap24Tex.as_ptr() as *mut _ as *mut libc::c_void]
    };
static mut sQuestStatusENGTexs: [*mut libc::c_void; 15] =
    unsafe {
        [gPauseQuestStatus00ENGTex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseQuestStatus01Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseQuestStatus02Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseQuestStatus03Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseQuestStatus04Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseQuestStatus10ENGTex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseQuestStatus11Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseQuestStatus12Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseQuestStatus13Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseQuestStatus14Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseQuestStatus20ENGTex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseQuestStatus21Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseQuestStatus22Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseQuestStatus23Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseQuestStatus24Tex.as_ptr() as *mut _ as *mut libc::c_void]
    };
static mut sSaveENGTexs: [*mut libc::c_void; 15] =
    unsafe {
        [gPauseSave00Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSave01Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSave02Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSave03Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSave04Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSave10ENGTex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSave11Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSave12Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSave13Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSave14Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSave20Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSave21Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSave22Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSave23Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSave24Tex.as_ptr() as *mut _ as *mut libc::c_void]
    };
static mut sGameOverTexs: [*mut libc::c_void; 15] =
    unsafe {
        [gPauseSave00Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSave01Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSave02Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSave03Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSave04Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseGameOver10Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSave11Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSave12Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSave13Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSave14Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSave20Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSave21Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSave22Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSave23Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSave24Tex.as_ptr() as *mut _ as *mut libc::c_void]
    };
static mut sEquipmentTexs: [*mut libc::c_void; 3] =
    unsafe {
        [sEquipmentENGTexs.as_ptr() as *mut _ as *mut libc::c_void,
         sEquipmentGERTexs.as_ptr() as *mut _ as *mut libc::c_void,
         sEquipmentFRATexs.as_ptr() as *mut _ as *mut libc::c_void]
    };
static mut sSelectItemTexs: [*mut libc::c_void; 3] =
    unsafe {
        [sSelectItemENGTexs.as_ptr() as *mut _ as *mut libc::c_void,
         sSelectItemGERTexs.as_ptr() as *mut _ as *mut libc::c_void,
         sSelectItemFRATexs.as_ptr() as *mut _ as *mut libc::c_void]
    };
static mut sMapTexs: [*mut libc::c_void; 3] =
    unsafe {
        [sMapENGTexs.as_ptr() as *mut _ as *mut libc::c_void,
         sMapGERTexs.as_ptr() as *mut _ as *mut libc::c_void,
         sMapFRATexs.as_ptr() as *mut _ as *mut libc::c_void]
    };
static mut sQuestStatusTexs: [*mut libc::c_void; 3] =
    unsafe {
        [sQuestStatusENGTexs.as_ptr() as *mut _ as *mut libc::c_void,
         sQuestStatusGERTexs.as_ptr() as *mut _ as *mut libc::c_void,
         sQuestStatusFRATexs.as_ptr() as *mut _ as *mut libc::c_void]
    };
static mut sSaveTexs: [*mut libc::c_void; 3] =
    unsafe {
        [sSaveENGTexs.as_ptr() as *mut _ as *mut libc::c_void,
         sSaveGERTexs.as_ptr() as *mut _ as *mut libc::c_void,
         sSaveFRATexs.as_ptr() as *mut _ as *mut libc::c_void]
    };
#[no_mangle]
pub static mut D_8082AAEC: [s16; 32] =
    [32 as libc::c_int as s16, 112 as libc::c_int as s16,
     32 as libc::c_int as s16, 48 as libc::c_int as s16,
     32 as libc::c_int as s16, 32 as libc::c_int as s16,
     32 as libc::c_int as s16, 48 as libc::c_int as s16,
     32 as libc::c_int as s16, 64 as libc::c_int as s16,
     32 as libc::c_int as s16, 48 as libc::c_int as s16,
     48 as libc::c_int as s16, 48 as libc::c_int as s16,
     48 as libc::c_int as s16, 64 as libc::c_int as s16,
     8 as libc::c_int as s16, 8 as libc::c_int as s16,
     8 as libc::c_int as s16, 8 as libc::c_int as s16,
     8 as libc::c_int as s16, 8 as libc::c_int as s16,
     8 as libc::c_int as s16, 8 as libc::c_int as s16,
     8 as libc::c_int as s16, 8 as libc::c_int as s16,
     8 as libc::c_int as s16, 8 as libc::c_int as s16,
     8 as libc::c_int as s16, 8 as libc::c_int as s16,
     80 as libc::c_int as s16, 64 as libc::c_int as s16];
#[no_mangle]
pub static mut D_8082AB2C: [s16; 32] =
    [24 as libc::c_int as s16, 72 as libc::c_int as s16,
     13 as libc::c_int as s16, 22 as libc::c_int as s16,
     19 as libc::c_int as s16, 20 as libc::c_int as s16,
     19 as libc::c_int as s16, 27 as libc::c_int as s16,
     14 as libc::c_int as s16, 26 as libc::c_int as s16,
     22 as libc::c_int as s16, 21 as libc::c_int as s16,
     49 as libc::c_int as s16, 32 as libc::c_int as s16,
     45 as libc::c_int as s16, 60 as libc::c_int as s16,
     8 as libc::c_int as s16, 8 as libc::c_int as s16,
     8 as libc::c_int as s16, 8 as libc::c_int as s16,
     8 as libc::c_int as s16, 8 as libc::c_int as s16,
     8 as libc::c_int as s16, 8 as libc::c_int as s16,
     8 as libc::c_int as s16, 8 as libc::c_int as s16,
     8 as libc::c_int as s16, 8 as libc::c_int as s16,
     8 as libc::c_int as s16, 16 as libc::c_int as s16,
     32 as libc::c_int as s16, 8 as libc::c_int as s16];
static mut D_8082AB6C: [[u8_0; 5]; 6] =
    [[BTN_ENABLED as libc::c_int as u8_0, BTN_DISABLED as libc::c_int as u8_0,
      BTN_DISABLED as libc::c_int as u8_0,
      BTN_DISABLED as libc::c_int as u8_0,
      BTN_ENABLED as libc::c_int as u8_0],
     [BTN_ENABLED as libc::c_int as u8_0, BTN_ENABLED as libc::c_int as u8_0,
      BTN_ENABLED as libc::c_int as u8_0, BTN_ENABLED as libc::c_int as u8_0,
      BTN_DISABLED as libc::c_int as u8_0],
     [BTN_ENABLED as libc::c_int as u8_0, BTN_DISABLED as libc::c_int as u8_0,
      BTN_DISABLED as libc::c_int as u8_0,
      BTN_DISABLED as libc::c_int as u8_0,
      BTN_DISABLED as libc::c_int as u8_0],
     [BTN_ENABLED as libc::c_int as u8_0, BTN_DISABLED as libc::c_int as u8_0,
      BTN_DISABLED as libc::c_int as u8_0,
      BTN_DISABLED as libc::c_int as u8_0,
      BTN_ENABLED as libc::c_int as u8_0],
     [BTN_ENABLED as libc::c_int as u8_0, BTN_DISABLED as libc::c_int as u8_0,
      BTN_DISABLED as libc::c_int as u8_0,
      BTN_DISABLED as libc::c_int as u8_0,
      BTN_ENABLED as libc::c_int as u8_0],
     [BTN_ENABLED as libc::c_int as u8_0, BTN_ENABLED as libc::c_int as u8_0,
      BTN_ENABLED as libc::c_int as u8_0, BTN_ENABLED as libc::c_int as u8_0,
      BTN_DISABLED as libc::c_int as u8_0]];
static mut D_8082AB8C: s16 = 0 as libc::c_int as s16;
static mut D_8082AB90: s16 = 0 as libc::c_int as s16;
static mut D_8082AB94: s16 = 0 as libc::c_int as s16;
static mut D_8082AB98: s16 = 255 as libc::c_int as s16;
static mut D_8082AB9C: s16 = 255 as libc::c_int as s16;
static mut D_8082ABA0: s16 = 0 as libc::c_int as s16;
static mut D_8082ABA4: s16 = 0 as libc::c_int as s16;
static mut sInDungeonScene: s16 = 0 as libc::c_int as s16;
static mut D_8082ABAC: [f32_0; 8] =
    [-4.0f32, 4.0f32, 4.0f32, 4.0f32, 4.0f32, -4.0f32, -4.0f32, -4.0f32];
static mut D_8082ABCC: [f32_0; 8] =
    [-4.0f32, -4.0f32, -4.0f32, 4.0f32, 4.0f32, 4.0f32, 4.0f32, -4.0f32];
static mut D_8082ABEC: [u16_0; 8] =
    [PAUSE_MAP as libc::c_int as u16_0, PAUSE_EQUIP as libc::c_int as u16_0,
     PAUSE_QUEST as libc::c_int as u16_0, PAUSE_ITEM as libc::c_int as u16_0,
     PAUSE_EQUIP as libc::c_int as u16_0, PAUSE_MAP as libc::c_int as u16_0,
     PAUSE_ITEM as libc::c_int as u16_0, PAUSE_QUEST as libc::c_int as u16_0];
#[no_mangle]
pub static mut gSlotAgeReqs: [u8_0; 24] =
    [1 as libc::c_int as u8_0, 9 as libc::c_int as u8_0,
     9 as libc::c_int as u8_0, 0 as libc::c_int as u8_0,
     0 as libc::c_int as u8_0, 9 as libc::c_int as u8_0,
     1 as libc::c_int as u8_0, 9 as libc::c_int as u8_0,
     9 as libc::c_int as u8_0, 0 as libc::c_int as u8_0,
     0 as libc::c_int as u8_0, 9 as libc::c_int as u8_0,
     1 as libc::c_int as u8_0, 9 as libc::c_int as u8_0,
     1 as libc::c_int as u8_0, 0 as libc::c_int as u8_0,
     0 as libc::c_int as u8_0, 9 as libc::c_int as u8_0,
     9 as libc::c_int as u8_0, 9 as libc::c_int as u8_0,
     9 as libc::c_int as u8_0, 9 as libc::c_int as u8_0,
     0 as libc::c_int as u8_0, 1 as libc::c_int as u8_0];
#[no_mangle]
pub static mut gEquipAgeReqs: [[u8_0; 4]; 4] =
    [[0 as libc::c_int as u8_0, 1 as libc::c_int as u8_0,
      0 as libc::c_int as u8_0, 0 as libc::c_int as u8_0],
     [9 as libc::c_int as u8_0, 1 as libc::c_int as u8_0,
      9 as libc::c_int as u8_0, 0 as libc::c_int as u8_0],
     [0 as libc::c_int as u8_0, 9 as libc::c_int as u8_0,
      0 as libc::c_int as u8_0, 0 as libc::c_int as u8_0],
     [9 as libc::c_int as u8_0, 9 as libc::c_int as u8_0,
      0 as libc::c_int as u8_0, 0 as libc::c_int as u8_0]];
#[no_mangle]
pub static mut gItemAgeReqs: [u8_0; 86] =
    [1 as libc::c_int as u8_0, 9 as libc::c_int as u8_0,
     9 as libc::c_int as u8_0, 0 as libc::c_int as u8_0,
     0 as libc::c_int as u8_0, 9 as libc::c_int as u8_0,
     1 as libc::c_int as u8_0, 9 as libc::c_int as u8_0,
     9 as libc::c_int as u8_0, 9 as libc::c_int as u8_0,
     0 as libc::c_int as u8_0, 0 as libc::c_int as u8_0,
     0 as libc::c_int as u8_0, 9 as libc::c_int as u8_0,
     1 as libc::c_int as u8_0, 9 as libc::c_int as u8_0,
     1 as libc::c_int as u8_0, 0 as libc::c_int as u8_0,
     0 as libc::c_int as u8_0, 9 as libc::c_int as u8_0,
     9 as libc::c_int as u8_0, 9 as libc::c_int as u8_0,
     9 as libc::c_int as u8_0, 9 as libc::c_int as u8_0,
     9 as libc::c_int as u8_0, 9 as libc::c_int as u8_0,
     9 as libc::c_int as u8_0, 9 as libc::c_int as u8_0,
     9 as libc::c_int as u8_0, 9 as libc::c_int as u8_0,
     9 as libc::c_int as u8_0, 9 as libc::c_int as u8_0,
     9 as libc::c_int as u8_0, 1 as libc::c_int as u8_0,
     1 as libc::c_int as u8_0, 1 as libc::c_int as u8_0,
     1 as libc::c_int as u8_0, 1 as libc::c_int as u8_0,
     1 as libc::c_int as u8_0, 1 as libc::c_int as u8_0,
     1 as libc::c_int as u8_0, 1 as libc::c_int as u8_0,
     1 as libc::c_int as u8_0, 1 as libc::c_int as u8_0,
     1 as libc::c_int as u8_0, 0 as libc::c_int as u8_0,
     0 as libc::c_int as u8_0, 0 as libc::c_int as u8_0,
     0 as libc::c_int as u8_0, 0 as libc::c_int as u8_0,
     0 as libc::c_int as u8_0, 0 as libc::c_int as u8_0,
     0 as libc::c_int as u8_0, 0 as libc::c_int as u8_0,
     0 as libc::c_int as u8_0, 0 as libc::c_int as u8_0,
     0 as libc::c_int as u8_0, 0 as libc::c_int as u8_0,
     0 as libc::c_int as u8_0, 1 as libc::c_int as u8_0,
     0 as libc::c_int as u8_0, 0 as libc::c_int as u8_0,
     1 as libc::c_int as u8_0, 9 as libc::c_int as u8_0,
     0 as libc::c_int as u8_0, 9 as libc::c_int as u8_0,
     0 as libc::c_int as u8_0, 0 as libc::c_int as u8_0,
     9 as libc::c_int as u8_0, 0 as libc::c_int as u8_0,
     0 as libc::c_int as u8_0, 1 as libc::c_int as u8_0,
     1 as libc::c_int as u8_0, 1 as libc::c_int as u8_0,
     0 as libc::c_int as u8_0, 0 as libc::c_int as u8_0,
     0 as libc::c_int as u8_0, 9 as libc::c_int as u8_0,
     9 as libc::c_int as u8_0, 9 as libc::c_int as u8_0,
     1 as libc::c_int as u8_0, 0 as libc::c_int as u8_0,
     0 as libc::c_int as u8_0, 9 as libc::c_int as u8_0,
     9 as libc::c_int as u8_0, 0 as libc::c_int as u8_0];
#[no_mangle]
pub static mut gAreaGsFlags: [u8_0; 22] =
    [0xf as libc::c_int as u8_0, 0x1f as libc::c_int as u8_0,
     0xf as libc::c_int as u8_0, 0x1f as libc::c_int as u8_0,
     0x1f as libc::c_int as u8_0, 0x1f as libc::c_int as u8_0,
     0x1f as libc::c_int as u8_0, 0x1f as libc::c_int as u8_0,
     0x7 as libc::c_int as u8_0, 0x7 as libc::c_int as u8_0,
     0x3 as libc::c_int as u8_0, 0xf as libc::c_int as u8_0,
     0x7 as libc::c_int as u8_0, 0xf as libc::c_int as u8_0,
     0xf as libc::c_int as u8_0, 0xff as libc::c_int as u8_0,
     0xff as libc::c_int as u8_0, 0xff as libc::c_int as u8_0,
     0x1f as libc::c_int as u8_0, 0xf as libc::c_int as u8_0,
     0x3 as libc::c_int as u8_0, 0xf as libc::c_int as u8_0];
static mut sCursorTexs: [*mut libc::c_void; 4] =
    unsafe {
        [gPauseMenuCursorTopLeftTex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseMenuCursorTopRightTex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseMenuCursorBottomLeftTex.as_ptr() as *mut _ as
             *mut libc::c_void,
         gPauseMenuCursorBottomRightTex.as_ptr() as *mut _ as
             *mut libc::c_void]
    };
static mut sCursorColors: [[s16; 3]; 3] =
    [[255 as libc::c_int as s16, 255 as libc::c_int as s16,
      255 as libc::c_int as s16],
     [255 as libc::c_int as s16, 255 as libc::c_int as s16,
      0 as libc::c_int as s16],
     [0 as libc::c_int as s16, 255 as libc::c_int as s16,
      50 as libc::c_int as s16]];
static mut sSavePromptTexs: [*mut libc::c_void; 3] =
    unsafe {
        [gPauseSavePromptENGTex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSavePromptGERTex.as_ptr() as *mut _ as *mut libc::c_void,
         gPauseSavePromptFRATex.as_ptr() as *mut _ as *mut libc::c_void]
    };
static mut sContinuePromptTexs: [*mut libc::c_void; 3] =
    unsafe {
        [gContinuePlayingENGTex.as_ptr() as *mut _ as *mut libc::c_void,
         gContinuePlayingGERTex.as_ptr() as *mut _ as *mut libc::c_void,
         gContinuePlayingFRATex.as_ptr() as *mut _ as *mut libc::c_void]
    };
static mut sPromptChoiceTexs: [[*mut libc::c_void; 2]; 3] =
    unsafe {
        [[gPauseYesENGTex.as_ptr() as *mut _ as *mut libc::c_void,
          gPauseNoENGTex.as_ptr() as *mut _ as *mut libc::c_void],
         [gPauseYesGERTex.as_ptr() as *mut _ as *mut libc::c_void,
          gPauseNoGERTex.as_ptr() as *mut _ as *mut libc::c_void],
         [gPauseYesFRATex.as_ptr() as *mut _ as *mut libc::c_void,
          gPauseNoFRATex.as_ptr() as *mut _ as *mut libc::c_void]]
    };
static mut D_808321A8: [u8_0; 5] = [0; 5];
static mut sPlayerPreRender: PreRender =
    PreRender{width: 0,
              height: 0,
              widthSave: 0,
              heightSave: 0,
              fbuf: 0 as *const u16_0 as *mut u16_0,
              fbufSave: 0 as *const u16_0 as *mut u16_0,
              cvgSave: 0 as *const u8_0 as *mut u8_0,
              zbuf: 0 as *const u16_0 as *mut u16_0,
              zbufSave: 0 as *const u16_0 as *mut u16_0,
              ulxSave: 0,
              ulySave: 0,
              lrxSave: 0,
              lrySave: 0,
              ulx: 0,
              uly: 0,
              lrx: 0,
              lry: 0,
              alloc:
                  ListAlloc{prev: 0 as *const ListAlloc as *mut ListAlloc,
                            next: 0 as *const ListAlloc as *mut ListAlloc,},
              unk_4C: 0,};
static mut sPreRenderCvg: *mut libc::c_void =
    0 as *const libc::c_void as *mut libc::c_void;
#[no_mangle]
pub unsafe extern "C" fn KaleidoScope_SetupPlayerPreRender(mut globalCtx:
                                                               *mut GlobalContext) {
    let mut gfx: *mut Gfx = 0 as *mut Gfx;
    let mut gfxRef: *mut Gfx = 0 as *mut Gfx;
    let mut fbuf: *mut libc::c_void = 0 as *mut libc::c_void;
    fbuf = (*(*globalCtx).state.gfxCtx).curFrameBuffer as *mut libc::c_void;
    let mut __gfxCtx: *mut GraphicsContext = 0 as *mut GraphicsContext;
    let mut dispRefs: [*mut Gfx; 4] = [0 as *mut Gfx; 4];
    __gfxCtx = (*globalCtx).state.gfxCtx;
    Graph_OpenDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                    b"../z_kaleido_scope_PAL.c\x00" as *const u8 as
                        *const libc::c_char, 496 as libc::c_int);
    gfxRef = (*__gfxCtx).polyOpa.p;
    gfx = Graph_GfxPlusOne(gfxRef);
    let fresh0 = (*__gfxCtx).work.p;
    (*__gfxCtx).work.p = (*__gfxCtx).work.p.offset(1);
    let mut _g: *mut Gfx = fresh0;
    (*_g).words.w0 =
        (0xde as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g).words.w1 = gfx as libc::c_uint;
    PreRender_SetValues(&mut sPlayerPreRender, 64 as libc::c_int as u32_0,
                        112 as libc::c_int as u32_0, fbuf,
                        0 as *mut libc::c_void);
    func_800C1F20(&mut sPlayerPreRender, &mut gfx);
    func_800C20B4(&mut sPlayerPreRender, &mut gfx);
    let fresh1 = gfx;
    gfx = gfx.offset(1);
    let mut _g_0: *mut Gfx = fresh1;
    (*_g_0).words.w0 =
        (0xdf as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_0).words.w1 = 0 as libc::c_int as libc::c_uint;
    Graph_BranchDlist(gfxRef, gfx);
    (*__gfxCtx).polyOpa.p = gfx;
    (*gGameInfo).data[(1 as libc::c_int * 6 as libc::c_int * 16 as libc::c_int
                           + 33 as libc::c_int) as usize] =
        ((*gGameInfo).data[(1 as libc::c_int * 6 as libc::c_int *
                                16 as libc::c_int + 33 as libc::c_int) as
                               usize] as libc::c_int | 1 as libc::c_int) as
            s16;
    Graph_CloseDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                     b"../z_kaleido_scope_PAL.c\x00" as *const u8 as
                         *const libc::c_char, 509 as libc::c_int);
}
#[no_mangle]
pub unsafe extern "C" fn KaleidoScope_ProcessPlayerPreRender() {
    Sleep_Msec(50 as libc::c_int as u32_0);
    PreRender_Calc(&mut sPlayerPreRender);
    PreRender_Destroy(&mut sPlayerPreRender);
}
#[no_mangle]
pub unsafe extern "C" fn KaleidoScope_QuadTextureIA4(mut gfx: *mut Gfx,
                                                     mut texture:
                                                         *mut libc::c_void,
                                                     mut width: s16,
                                                     mut height: s16,
                                                     mut point: u16_0)
 -> *mut Gfx {
    let fresh2 = gfx;
    gfx = gfx.offset(1);
    let mut _g: *mut Gfx = fresh2;
    (*_g).words.w0 =
        (0xfd as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (3 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 3 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 21 as libc::c_int
            |
            (2 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 2 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 19 as libc::c_int
            |
            ((1 as libc::c_int - 1 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g).words.w1 = texture as libc::c_uint;
    let fresh3 = gfx;
    gfx = gfx.offset(1);
    let mut _g_0: *mut Gfx = fresh3;
    (*_g_0).words.w0 =
        (0xf5 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (3 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 3 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 21 as libc::c_int
            |
            (2 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 2 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 19 as libc::c_int
            |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 9 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 9 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 9 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_0).words.w1 =
        (7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 3 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 20 as libc::c_int
            |
            ((0 as libc::c_int | 0 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 2 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 18 as libc::c_int
            |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 14 as libc::c_int
            |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 10 as libc::c_int
            |
            ((0 as libc::c_int | 0 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 2 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 4 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh4 = gfx;
    gfx = gfx.offset(1);
    let mut _g_1: *mut Gfx = fresh4;
    (*_g_1).words.w0 =
        (0xe6 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_1).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh5 = gfx;
    gfx = gfx.offset(1);
    let mut _g_2: *mut Gfx = fresh5;
    (*_g_2).words.w0 =
        (0xf3 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 12 as libc::c_int
            |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_2).words.w1 =
        (7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 3 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            ((if ((width as libc::c_int * height as libc::c_int +
                       3 as libc::c_int >> 2 as libc::c_int) -
                      1 as libc::c_int) < 2047 as libc::c_int {
                  (width as libc::c_int * height as libc::c_int +
                       3 as libc::c_int >> 2 as libc::c_int) -
                      1 as libc::c_int
              } else { 2047 as libc::c_int }) as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 12 as libc::c_int
            |
            (((((1 as libc::c_int) << 11 as libc::c_int) +
                   (if 1 as libc::c_int >
                           width as libc::c_int / 16 as libc::c_int {
                        1 as libc::c_int
                    } else { (width as libc::c_int) / 16 as libc::c_int }) -
                   1 as libc::c_int) /
                  (if 1 as libc::c_int >
                          width as libc::c_int / 16 as libc::c_int {
                       1 as libc::c_int
                   } else { (width as libc::c_int) / 16 as libc::c_int })) as
                 u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh6 = gfx;
    gfx = gfx.offset(1);
    let mut _g_3: *mut Gfx = fresh6;
    (*_g_3).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_3).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh7 = gfx;
    gfx = gfx.offset(1);
    let mut _g_4: *mut Gfx = fresh7;
    (*_g_4).words.w0 =
        (0xf5 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (3 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 3 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 21 as libc::c_int
            |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 2 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 19 as libc::c_int
            |
            (((width as libc::c_int >> 1 as libc::c_int) + 7 as libc::c_int >>
                  3 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 9 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 9 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 9 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_4).words.w1 =
        (0 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 3 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 20 as libc::c_int
            |
            ((0 as libc::c_int | 0 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 2 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 18 as libc::c_int
            |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 14 as libc::c_int
            |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 10 as libc::c_int
            |
            ((0 as libc::c_int | 0 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 2 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 4 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh8 = gfx;
    gfx = gfx.offset(1);
    let mut _g_5: *mut Gfx = fresh8;
    (*_g_5).words.w0 =
        (0xf2 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 12 as libc::c_int
            |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_5).words.w1 =
        (0 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 3 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (((width as libc::c_int - 1 as libc::c_int) << 2 as libc::c_int)
                 as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 12 as libc::c_int
            |
            (((height as libc::c_int - 1 as libc::c_int) << 2 as libc::c_int)
                 as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh9 = gfx;
    gfx = gfx.offset(1);
    let mut _g_6: *mut Gfx = fresh9;
    (*_g_6).words.w0 =
        (0x7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (if 0 as libc::c_int == 0 as libc::c_int {
                 (((point as libc::c_int * 2 as libc::c_int) as u32_0 &
                       (((0x1 as libc::c_int) << 8 as libc::c_int) -
                            1 as libc::c_int) as libc::c_uint) <<
                      16 as libc::c_int |
                      (((point as libc::c_int + 2 as libc::c_int) *
                            2 as libc::c_int) as u32_0 &
                           (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                1 as libc::c_int) as libc::c_uint) <<
                          8 as libc::c_int) |
                     (((point as libc::c_int + 3 as libc::c_int) *
                           2 as libc::c_int) as u32_0 &
                          (((0x1 as libc::c_int) << 8 as libc::c_int) -
                               1 as libc::c_int) as libc::c_uint) <<
                         0 as libc::c_int
             } else {
                 (if 0 as libc::c_int == 1 as libc::c_int {
                      ((((point as libc::c_int + 2 as libc::c_int) *
                             2 as libc::c_int) as u32_0 &
                            (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                 1 as libc::c_int) as libc::c_uint) <<
                           16 as libc::c_int |
                           (((point as libc::c_int + 3 as libc::c_int) *
                                 2 as libc::c_int) as u32_0 &
                                (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                     1 as libc::c_int) as libc::c_uint) <<
                               8 as libc::c_int) |
                          (((point as libc::c_int + 1 as libc::c_int) *
                                2 as libc::c_int) as u32_0 &
                               (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                    1 as libc::c_int) as libc::c_uint) <<
                              0 as libc::c_int
                  } else {
                      (if 0 as libc::c_int == 2 as libc::c_int {
                           ((((point as libc::c_int + 3 as libc::c_int) *
                                  2 as libc::c_int) as u32_0 &
                                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                      1 as libc::c_int) as libc::c_uint) <<
                                16 as libc::c_int |
                                (((point as libc::c_int + 1 as libc::c_int) *
                                      2 as libc::c_int) as u32_0 &
                                     (((0x1 as libc::c_int) <<
                                           8 as libc::c_int) -
                                          1 as libc::c_int) as libc::c_uint)
                                    << 8 as libc::c_int) |
                               ((point as libc::c_int * 2 as libc::c_int) as
                                    u32_0 &
                                    (((0x1 as libc::c_int) <<
                                          8 as libc::c_int) -
                                         1 as libc::c_int) as libc::c_uint) <<
                                   0 as libc::c_int
                       } else {
                           ((((point as libc::c_int + 1 as libc::c_int) *
                                  2 as libc::c_int) as u32_0 &
                                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                      1 as libc::c_int) as libc::c_uint) <<
                                16 as libc::c_int |
                                ((point as libc::c_int * 2 as libc::c_int) as
                                     u32_0 &
                                     (((0x1 as libc::c_int) <<
                                           8 as libc::c_int) -
                                          1 as libc::c_int) as libc::c_uint)
                                    << 8 as libc::c_int) |
                               (((point as libc::c_int + 2 as libc::c_int) *
                                     2 as libc::c_int) as u32_0 &
                                    (((0x1 as libc::c_int) <<
                                          8 as libc::c_int) -
                                         1 as libc::c_int) as libc::c_uint) <<
                                   0 as libc::c_int
                       })
                  })
             });
    (*_g_6).words.w1 =
        if 0 as libc::c_int == 0 as libc::c_int {
            (((point as libc::c_int * 2 as libc::c_int) as u32_0 &
                  (((0x1 as libc::c_int) << 8 as libc::c_int) -
                       1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
                 |
                 (((point as libc::c_int + 3 as libc::c_int) *
                       2 as libc::c_int) as u32_0 &
                      (((0x1 as libc::c_int) << 8 as libc::c_int) -
                           1 as libc::c_int) as libc::c_uint) <<
                     8 as libc::c_int) |
                (((point as libc::c_int + 1 as libc::c_int) *
                      2 as libc::c_int) as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int
        } else if 0 as libc::c_int == 1 as libc::c_int {
            ((((point as libc::c_int + 2 as libc::c_int) * 2 as libc::c_int)
                  as u32_0 &
                  (((0x1 as libc::c_int) << 8 as libc::c_int) -
                       1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
                 |
                 (((point as libc::c_int + 1 as libc::c_int) *
                       2 as libc::c_int) as u32_0 &
                      (((0x1 as libc::c_int) << 8 as libc::c_int) -
                           1 as libc::c_int) as libc::c_uint) <<
                     8 as libc::c_int) |
                ((point as libc::c_int * 2 as libc::c_int) as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int
        } else if 0 as libc::c_int == 2 as libc::c_int {
            ((((point as libc::c_int + 3 as libc::c_int) * 2 as libc::c_int)
                  as u32_0 &
                  (((0x1 as libc::c_int) << 8 as libc::c_int) -
                       1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
                 |
                 ((point as libc::c_int * 2 as libc::c_int) as u32_0 &
                      (((0x1 as libc::c_int) << 8 as libc::c_int) -
                           1 as libc::c_int) as libc::c_uint) <<
                     8 as libc::c_int) |
                (((point as libc::c_int + 2 as libc::c_int) *
                      2 as libc::c_int) as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int
        } else {
            ((((point as libc::c_int + 1 as libc::c_int) * 2 as libc::c_int)
                  as u32_0 &
                  (((0x1 as libc::c_int) << 8 as libc::c_int) -
                       1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
                 |
                 (((point as libc::c_int + 2 as libc::c_int) *
                       2 as libc::c_int) as u32_0 &
                      (((0x1 as libc::c_int) << 8 as libc::c_int) -
                           1 as libc::c_int) as libc::c_uint) <<
                     8 as libc::c_int) |
                (((point as libc::c_int + 3 as libc::c_int) *
                      2 as libc::c_int) as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int
        };
    return gfx;
}
#[no_mangle]
pub unsafe extern "C" fn KaleidoScope_QuadTextureIA8(mut gfx: *mut Gfx,
                                                     mut texture:
                                                         *mut libc::c_void,
                                                     mut width: s16,
                                                     mut height: s16,
                                                     mut point: u16_0)
 -> *mut Gfx {
    let fresh10 = gfx;
    gfx = gfx.offset(1);
    let mut _g: *mut Gfx = fresh10;
    (*_g).words.w0 =
        (0xfd as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (3 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 3 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 21 as libc::c_int
            |
            (2 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 2 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 19 as libc::c_int
            |
            ((1 as libc::c_int - 1 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g).words.w1 = texture as libc::c_uint;
    let fresh11 = gfx;
    gfx = gfx.offset(1);
    let mut _g_0: *mut Gfx = fresh11;
    (*_g_0).words.w0 =
        (0xf5 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (3 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 3 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 21 as libc::c_int
            |
            (2 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 2 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 19 as libc::c_int
            |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 9 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 9 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 9 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_0).words.w1 =
        (7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 3 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 20 as libc::c_int
            |
            ((0 as libc::c_int | 0 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 2 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 18 as libc::c_int
            |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 14 as libc::c_int
            |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 10 as libc::c_int
            |
            ((0 as libc::c_int | 0 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 2 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 4 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh12 = gfx;
    gfx = gfx.offset(1);
    let mut _g_1: *mut Gfx = fresh12;
    (*_g_1).words.w0 =
        (0xe6 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_1).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh13 = gfx;
    gfx = gfx.offset(1);
    let mut _g_2: *mut Gfx = fresh13;
    (*_g_2).words.w0 =
        (0xf3 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 12 as libc::c_int
            |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_2).words.w1 =
        (7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 3 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            ((if ((width as libc::c_int * height as libc::c_int +
                       1 as libc::c_int >> 1 as libc::c_int) -
                      1 as libc::c_int) < 2047 as libc::c_int {
                  (width as libc::c_int * height as libc::c_int +
                       1 as libc::c_int >> 1 as libc::c_int) -
                      1 as libc::c_int
              } else { 2047 as libc::c_int }) as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 12 as libc::c_int
            |
            (((((1 as libc::c_int) << 11 as libc::c_int) +
                   (if 1 as libc::c_int >
                           width as libc::c_int * 1 as libc::c_int /
                               8 as libc::c_int {
                        1 as libc::c_int
                    } else {
                        (width as libc::c_int * 1 as libc::c_int) /
                            8 as libc::c_int
                    }) - 1 as libc::c_int) /
                  (if 1 as libc::c_int >
                          width as libc::c_int * 1 as libc::c_int /
                              8 as libc::c_int {
                       1 as libc::c_int
                   } else {
                       (width as libc::c_int * 1 as libc::c_int) /
                           8 as libc::c_int
                   })) as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh14 = gfx;
    gfx = gfx.offset(1);
    let mut _g_3: *mut Gfx = fresh14;
    (*_g_3).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_3).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh15 = gfx;
    gfx = gfx.offset(1);
    let mut _g_4: *mut Gfx = fresh15;
    (*_g_4).words.w0 =
        (0xf5 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (3 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 3 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 21 as libc::c_int
            |
            (1 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 2 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 19 as libc::c_int
            |
            ((width as libc::c_int * 1 as libc::c_int + 7 as libc::c_int >>
                  3 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 9 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 9 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 9 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_4).words.w1 =
        (0 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 3 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 20 as libc::c_int
            |
            ((0 as libc::c_int | 0 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 2 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 18 as libc::c_int
            |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 14 as libc::c_int
            |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 10 as libc::c_int
            |
            ((0 as libc::c_int | 0 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 2 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 4 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh16 = gfx;
    gfx = gfx.offset(1);
    let mut _g_5: *mut Gfx = fresh16;
    (*_g_5).words.w0 =
        (0xf2 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 12 as libc::c_int
            |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_5).words.w1 =
        (0 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 3 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (((width as libc::c_int - 1 as libc::c_int) << 2 as libc::c_int)
                 as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 12 as libc::c_int
            |
            (((height as libc::c_int - 1 as libc::c_int) << 2 as libc::c_int)
                 as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh17 = gfx;
    gfx = gfx.offset(1);
    let mut _g_6: *mut Gfx = fresh17;
    (*_g_6).words.w0 =
        (0x7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (if 0 as libc::c_int == 0 as libc::c_int {
                 (((point as libc::c_int * 2 as libc::c_int) as u32_0 &
                       (((0x1 as libc::c_int) << 8 as libc::c_int) -
                            1 as libc::c_int) as libc::c_uint) <<
                      16 as libc::c_int |
                      (((point as libc::c_int + 2 as libc::c_int) *
                            2 as libc::c_int) as u32_0 &
                           (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                1 as libc::c_int) as libc::c_uint) <<
                          8 as libc::c_int) |
                     (((point as libc::c_int + 3 as libc::c_int) *
                           2 as libc::c_int) as u32_0 &
                          (((0x1 as libc::c_int) << 8 as libc::c_int) -
                               1 as libc::c_int) as libc::c_uint) <<
                         0 as libc::c_int
             } else {
                 (if 0 as libc::c_int == 1 as libc::c_int {
                      ((((point as libc::c_int + 2 as libc::c_int) *
                             2 as libc::c_int) as u32_0 &
                            (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                 1 as libc::c_int) as libc::c_uint) <<
                           16 as libc::c_int |
                           (((point as libc::c_int + 3 as libc::c_int) *
                                 2 as libc::c_int) as u32_0 &
                                (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                     1 as libc::c_int) as libc::c_uint) <<
                               8 as libc::c_int) |
                          (((point as libc::c_int + 1 as libc::c_int) *
                                2 as libc::c_int) as u32_0 &
                               (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                    1 as libc::c_int) as libc::c_uint) <<
                              0 as libc::c_int
                  } else {
                      (if 0 as libc::c_int == 2 as libc::c_int {
                           ((((point as libc::c_int + 3 as libc::c_int) *
                                  2 as libc::c_int) as u32_0 &
                                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                      1 as libc::c_int) as libc::c_uint) <<
                                16 as libc::c_int |
                                (((point as libc::c_int + 1 as libc::c_int) *
                                      2 as libc::c_int) as u32_0 &
                                     (((0x1 as libc::c_int) <<
                                           8 as libc::c_int) -
                                          1 as libc::c_int) as libc::c_uint)
                                    << 8 as libc::c_int) |
                               ((point as libc::c_int * 2 as libc::c_int) as
                                    u32_0 &
                                    (((0x1 as libc::c_int) <<
                                          8 as libc::c_int) -
                                         1 as libc::c_int) as libc::c_uint) <<
                                   0 as libc::c_int
                       } else {
                           ((((point as libc::c_int + 1 as libc::c_int) *
                                  2 as libc::c_int) as u32_0 &
                                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                      1 as libc::c_int) as libc::c_uint) <<
                                16 as libc::c_int |
                                ((point as libc::c_int * 2 as libc::c_int) as
                                     u32_0 &
                                     (((0x1 as libc::c_int) <<
                                           8 as libc::c_int) -
                                          1 as libc::c_int) as libc::c_uint)
                                    << 8 as libc::c_int) |
                               (((point as libc::c_int + 2 as libc::c_int) *
                                     2 as libc::c_int) as u32_0 &
                                    (((0x1 as libc::c_int) <<
                                          8 as libc::c_int) -
                                         1 as libc::c_int) as libc::c_uint) <<
                                   0 as libc::c_int
                       })
                  })
             });
    (*_g_6).words.w1 =
        if 0 as libc::c_int == 0 as libc::c_int {
            (((point as libc::c_int * 2 as libc::c_int) as u32_0 &
                  (((0x1 as libc::c_int) << 8 as libc::c_int) -
                       1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
                 |
                 (((point as libc::c_int + 3 as libc::c_int) *
                       2 as libc::c_int) as u32_0 &
                      (((0x1 as libc::c_int) << 8 as libc::c_int) -
                           1 as libc::c_int) as libc::c_uint) <<
                     8 as libc::c_int) |
                (((point as libc::c_int + 1 as libc::c_int) *
                      2 as libc::c_int) as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int
        } else if 0 as libc::c_int == 1 as libc::c_int {
            ((((point as libc::c_int + 2 as libc::c_int) * 2 as libc::c_int)
                  as u32_0 &
                  (((0x1 as libc::c_int) << 8 as libc::c_int) -
                       1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
                 |
                 (((point as libc::c_int + 1 as libc::c_int) *
                       2 as libc::c_int) as u32_0 &
                      (((0x1 as libc::c_int) << 8 as libc::c_int) -
                           1 as libc::c_int) as libc::c_uint) <<
                     8 as libc::c_int) |
                ((point as libc::c_int * 2 as libc::c_int) as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int
        } else if 0 as libc::c_int == 2 as libc::c_int {
            ((((point as libc::c_int + 3 as libc::c_int) * 2 as libc::c_int)
                  as u32_0 &
                  (((0x1 as libc::c_int) << 8 as libc::c_int) -
                       1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
                 |
                 ((point as libc::c_int * 2 as libc::c_int) as u32_0 &
                      (((0x1 as libc::c_int) << 8 as libc::c_int) -
                           1 as libc::c_int) as libc::c_uint) <<
                     8 as libc::c_int) |
                (((point as libc::c_int + 2 as libc::c_int) *
                      2 as libc::c_int) as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int
        } else {
            ((((point as libc::c_int + 1 as libc::c_int) * 2 as libc::c_int)
                  as u32_0 &
                  (((0x1 as libc::c_int) << 8 as libc::c_int) -
                       1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
                 |
                 (((point as libc::c_int + 2 as libc::c_int) *
                       2 as libc::c_int) as u32_0 &
                      (((0x1 as libc::c_int) << 8 as libc::c_int) -
                           1 as libc::c_int) as libc::c_uint) <<
                     8 as libc::c_int) |
                (((point as libc::c_int + 3 as libc::c_int) *
                      2 as libc::c_int) as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int
        };
    return gfx;
}
#[no_mangle]
pub unsafe extern "C" fn KaleidoScope_OverridePalIndexCI4(mut texture:
                                                              *mut u8_0,
                                                          mut size: s32,
                                                          mut targetIndex:
                                                              s32,
                                                          mut newIndex: s32) {
    let mut i: s32 = 0;
    targetIndex &= 0xf as libc::c_int;
    newIndex &= 0xf as libc::c_int;
    if size == 0 as libc::c_int || targetIndex == newIndex ||
           texture.is_null() {
        return
    }
    i = 0 as libc::c_int;
    while i < size {
        let mut index1: s32 = 0;
        let mut index2: s32 = 0;
        index2 = *texture.offset(i as isize) as s32;
        index1 = index2;
        index1 = index1 >> 4 as libc::c_int & 0xf as libc::c_int;
        index2 = index2 & 0xf as libc::c_int;
        if index1 == targetIndex { index1 = newIndex }
        if index2 == targetIndex { index2 = newIndex }
        *texture.offset(i as isize) =
            (index1 << 4 as libc::c_int | index2) as u8_0;
        i += 1
    };
}
#[no_mangle]
pub unsafe extern "C" fn KaleidoScope_MoveCursorToSpecialPos(mut globalCtx:
                                                                 *mut GlobalContext,
                                                             mut specialPos:
                                                                 u16_0) {
    let mut pauseCtx: *mut PauseContext = &mut (*globalCtx).pauseCtx;
    (*pauseCtx).cursorSpecialPos = specialPos as s16;
    (*pauseCtx).pageSwitchTimer = 0 as libc::c_int as s16;
    Audio_PlaySoundGeneral(0x4808 as libc::c_int as u16_0, &mut D_801333D4,
                           4 as libc::c_int as u8_0, &mut D_801333E0,
                           &mut D_801333E0, &mut D_801333E8);
}
#[no_mangle]
pub unsafe extern "C" fn KaleidoScope_DrawQuadTextureRGBA32(mut gfxCtx:
                                                                *mut GraphicsContext,
                                                            mut texture:
                                                                *mut libc::c_void,
                                                            mut width: u16_0,
                                                            mut height: u16_0,
                                                            mut point:
                                                                u16_0) {
    let mut __gfxCtx: *mut GraphicsContext = 0 as *mut GraphicsContext;
    let mut dispRefs: [*mut Gfx; 4] = [0 as *mut Gfx; 4];
    __gfxCtx = gfxCtx;
    Graph_OpenDisps(dispRefs.as_mut_ptr(), gfxCtx,
                    b"../z_kaleido_scope_PAL.c\x00" as *const u8 as
                        *const libc::c_char, 748 as libc::c_int);
    let fresh18 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g: *mut Gfx = fresh18;
    (*_g).words.w0 =
        (0xfd as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 3 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 21 as libc::c_int
            |
            (3 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 2 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 19 as libc::c_int
            |
            ((1 as libc::c_int - 1 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g).words.w1 = texture as libc::c_uint;
    let fresh19 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_0: *mut Gfx = fresh19;
    (*_g_0).words.w0 =
        (0xf5 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 3 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 21 as libc::c_int
            |
            (3 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 2 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 19 as libc::c_int
            |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 9 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 9 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 9 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_0).words.w1 =
        (7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 3 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 20 as libc::c_int
            |
            ((0 as libc::c_int | 0 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 2 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 18 as libc::c_int
            |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 14 as libc::c_int
            |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 10 as libc::c_int
            |
            ((0 as libc::c_int | 0 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 2 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 4 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh20 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_1: *mut Gfx = fresh20;
    (*_g_1).words.w0 =
        (0xe6 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_1).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh21 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_2: *mut Gfx = fresh21;
    (*_g_2).words.w0 =
        (0xf3 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 12 as libc::c_int
            |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_2).words.w1 =
        (7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 3 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            ((if ((width as libc::c_int * height as libc::c_int +
                       0 as libc::c_int >> 0 as libc::c_int) -
                      1 as libc::c_int) < 2047 as libc::c_int {
                  (width as libc::c_int * height as libc::c_int +
                       0 as libc::c_int >> 0 as libc::c_int) -
                      1 as libc::c_int
              } else { 2047 as libc::c_int }) as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 12 as libc::c_int
            |
            (((((1 as libc::c_int) << 11 as libc::c_int) +
                   (if 1 as libc::c_int >
                           width as libc::c_int * 4 as libc::c_int /
                               8 as libc::c_int {
                        1 as libc::c_int
                    } else {
                        (width as libc::c_int * 4 as libc::c_int) /
                            8 as libc::c_int
                    }) - 1 as libc::c_int) /
                  (if 1 as libc::c_int >
                          width as libc::c_int * 4 as libc::c_int /
                              8 as libc::c_int {
                       1 as libc::c_int
                   } else {
                       (width as libc::c_int * 4 as libc::c_int) /
                           8 as libc::c_int
                   })) as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh22 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_3: *mut Gfx = fresh22;
    (*_g_3).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_3).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh23 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_4: *mut Gfx = fresh23;
    (*_g_4).words.w0 =
        (0xf5 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 3 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 21 as libc::c_int
            |
            (3 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 2 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 19 as libc::c_int
            |
            ((width as libc::c_int * 2 as libc::c_int + 7 as libc::c_int >>
                  3 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 9 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 9 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 9 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_4).words.w1 =
        (0 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 3 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 20 as libc::c_int
            |
            ((0 as libc::c_int | 0 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 2 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 18 as libc::c_int
            |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 14 as libc::c_int
            |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 10 as libc::c_int
            |
            ((0 as libc::c_int | 0 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 2 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 4 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh24 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_5: *mut Gfx = fresh24;
    (*_g_5).words.w0 =
        (0xf2 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 12 as libc::c_int
            |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_5).words.w1 =
        (0 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 3 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (((width as libc::c_int - 1 as libc::c_int) << 2 as libc::c_int)
                 as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 12 as libc::c_int
            |
            (((height as libc::c_int - 1 as libc::c_int) << 2 as libc::c_int)
                 as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh25 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_6: *mut Gfx = fresh25;
    (*_g_6).words.w0 =
        (0x7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (if 0 as libc::c_int == 0 as libc::c_int {
                 (((point as libc::c_int * 2 as libc::c_int) as u32_0 &
                       (((0x1 as libc::c_int) << 8 as libc::c_int) -
                            1 as libc::c_int) as libc::c_uint) <<
                      16 as libc::c_int |
                      (((point as libc::c_int + 2 as libc::c_int) *
                            2 as libc::c_int) as u32_0 &
                           (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                1 as libc::c_int) as libc::c_uint) <<
                          8 as libc::c_int) |
                     (((point as libc::c_int + 3 as libc::c_int) *
                           2 as libc::c_int) as u32_0 &
                          (((0x1 as libc::c_int) << 8 as libc::c_int) -
                               1 as libc::c_int) as libc::c_uint) <<
                         0 as libc::c_int
             } else {
                 (if 0 as libc::c_int == 1 as libc::c_int {
                      ((((point as libc::c_int + 2 as libc::c_int) *
                             2 as libc::c_int) as u32_0 &
                            (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                 1 as libc::c_int) as libc::c_uint) <<
                           16 as libc::c_int |
                           (((point as libc::c_int + 3 as libc::c_int) *
                                 2 as libc::c_int) as u32_0 &
                                (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                     1 as libc::c_int) as libc::c_uint) <<
                               8 as libc::c_int) |
                          (((point as libc::c_int + 1 as libc::c_int) *
                                2 as libc::c_int) as u32_0 &
                               (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                    1 as libc::c_int) as libc::c_uint) <<
                              0 as libc::c_int
                  } else {
                      (if 0 as libc::c_int == 2 as libc::c_int {
                           ((((point as libc::c_int + 3 as libc::c_int) *
                                  2 as libc::c_int) as u32_0 &
                                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                      1 as libc::c_int) as libc::c_uint) <<
                                16 as libc::c_int |
                                (((point as libc::c_int + 1 as libc::c_int) *
                                      2 as libc::c_int) as u32_0 &
                                     (((0x1 as libc::c_int) <<
                                           8 as libc::c_int) -
                                          1 as libc::c_int) as libc::c_uint)
                                    << 8 as libc::c_int) |
                               ((point as libc::c_int * 2 as libc::c_int) as
                                    u32_0 &
                                    (((0x1 as libc::c_int) <<
                                          8 as libc::c_int) -
                                         1 as libc::c_int) as libc::c_uint) <<
                                   0 as libc::c_int
                       } else {
                           ((((point as libc::c_int + 1 as libc::c_int) *
                                  2 as libc::c_int) as u32_0 &
                                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                      1 as libc::c_int) as libc::c_uint) <<
                                16 as libc::c_int |
                                ((point as libc::c_int * 2 as libc::c_int) as
                                     u32_0 &
                                     (((0x1 as libc::c_int) <<
                                           8 as libc::c_int) -
                                          1 as libc::c_int) as libc::c_uint)
                                    << 8 as libc::c_int) |
                               (((point as libc::c_int + 2 as libc::c_int) *
                                     2 as libc::c_int) as u32_0 &
                                    (((0x1 as libc::c_int) <<
                                          8 as libc::c_int) -
                                         1 as libc::c_int) as libc::c_uint) <<
                                   0 as libc::c_int
                       })
                  })
             });
    (*_g_6).words.w1 =
        if 0 as libc::c_int == 0 as libc::c_int {
            (((point as libc::c_int * 2 as libc::c_int) as u32_0 &
                  (((0x1 as libc::c_int) << 8 as libc::c_int) -
                       1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
                 |
                 (((point as libc::c_int + 3 as libc::c_int) *
                       2 as libc::c_int) as u32_0 &
                      (((0x1 as libc::c_int) << 8 as libc::c_int) -
                           1 as libc::c_int) as libc::c_uint) <<
                     8 as libc::c_int) |
                (((point as libc::c_int + 1 as libc::c_int) *
                      2 as libc::c_int) as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int
        } else if 0 as libc::c_int == 1 as libc::c_int {
            ((((point as libc::c_int + 2 as libc::c_int) * 2 as libc::c_int)
                  as u32_0 &
                  (((0x1 as libc::c_int) << 8 as libc::c_int) -
                       1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
                 |
                 (((point as libc::c_int + 1 as libc::c_int) *
                       2 as libc::c_int) as u32_0 &
                      (((0x1 as libc::c_int) << 8 as libc::c_int) -
                           1 as libc::c_int) as libc::c_uint) <<
                     8 as libc::c_int) |
                ((point as libc::c_int * 2 as libc::c_int) as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int
        } else if 0 as libc::c_int == 2 as libc::c_int {
            ((((point as libc::c_int + 3 as libc::c_int) * 2 as libc::c_int)
                  as u32_0 &
                  (((0x1 as libc::c_int) << 8 as libc::c_int) -
                       1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
                 |
                 ((point as libc::c_int * 2 as libc::c_int) as u32_0 &
                      (((0x1 as libc::c_int) << 8 as libc::c_int) -
                           1 as libc::c_int) as libc::c_uint) <<
                     8 as libc::c_int) |
                (((point as libc::c_int + 2 as libc::c_int) *
                      2 as libc::c_int) as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int
        } else {
            ((((point as libc::c_int + 1 as libc::c_int) * 2 as libc::c_int)
                  as u32_0 &
                  (((0x1 as libc::c_int) << 8 as libc::c_int) -
                       1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
                 |
                 (((point as libc::c_int + 2 as libc::c_int) *
                       2 as libc::c_int) as u32_0 &
                      (((0x1 as libc::c_int) << 8 as libc::c_int) -
                           1 as libc::c_int) as libc::c_uint) <<
                     8 as libc::c_int) |
                (((point as libc::c_int + 3 as libc::c_int) *
                      2 as libc::c_int) as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int
        };
    Graph_CloseDisps(dispRefs.as_mut_ptr(), gfxCtx,
                     b"../z_kaleido_scope_PAL.c\x00" as *const u8 as
                         *const libc::c_char, 758 as libc::c_int);
}
#[no_mangle]
pub unsafe extern "C" fn KaleidoScope_SetDefaultCursor(mut globalCtx:
                                                           *mut GlobalContext) {
    let mut pauseCtx: *mut PauseContext = &mut (*globalCtx).pauseCtx;
    let mut s: s16 = 0;
    let mut i: s16 = 0;
    match (*pauseCtx).pageIndex as libc::c_int {
        0 => {
            s =
                (*pauseCtx).cursorSlot[PAUSE_ITEM as libc::c_int as usize] as
                    s16;
            if gSaveContext.inventory.items[s as usize] as libc::c_int ==
                   ITEM_NONE as libc::c_int {
                i = (s as libc::c_int + 1 as libc::c_int) as s16;
                while !(gSaveContext.inventory.items[i as usize] as
                            libc::c_int != ITEM_NONE as libc::c_int) {
                    i += 1;
                    if i as libc::c_int >= 24 as libc::c_int {
                        i = 0 as libc::c_int as s16
                    }
                    if i as libc::c_int == s as libc::c_int {
                        (*pauseCtx).namedItem = 999 as libc::c_int as u16_0;
                        (*pauseCtx).cursorItem[PAUSE_ITEM as libc::c_int as
                                                   usize] =
                            (*pauseCtx).namedItem;
                        return
                    }
                }
                (*pauseCtx).cursorItem[PAUSE_ITEM as libc::c_int as usize] =
                    gSaveContext.inventory.items[i as usize] as u16_0;
                (*pauseCtx).cursorSlot[PAUSE_ITEM as libc::c_int as usize] =
                    i as u16_0
            }
        }
        1 | 2 | 3 | _ => { }
    };
}
#[no_mangle]
pub unsafe extern "C" fn KaleidoScope_SwitchPage(mut pauseCtx:
                                                     *mut PauseContext,
                                                 mut pt: u8_0) {
    (*pauseCtx).unk_1E4 = 1 as libc::c_int as u16_0;
    (*pauseCtx).unk_1EA = 0 as libc::c_int as u16_0;
    if pt == 0 {
        (*pauseCtx).mode =
            ((*pauseCtx).pageIndex as libc::c_int * 2 as libc::c_int +
                 1 as libc::c_int) as u16_0;
        Audio_PlaySoundGeneral(0x4825 as libc::c_int as u16_0,
                               &mut D_801333D4, 4 as libc::c_int as u8_0,
                               &mut D_801333E0, &mut D_801333E0,
                               &mut D_801333E8);
        (*pauseCtx).cursorSpecialPos = 11 as libc::c_int as s16
    } else {
        (*pauseCtx).mode =
            ((*pauseCtx).pageIndex as libc::c_int * 2 as libc::c_int) as
                u16_0;
        Audio_PlaySoundGeneral(0x4826 as libc::c_int as u16_0,
                               &mut D_801333D4, 4 as libc::c_int as u8_0,
                               &mut D_801333E0, &mut D_801333E0,
                               &mut D_801333E8);
        (*pauseCtx).cursorSpecialPos = 10 as libc::c_int as s16
    }
    gSaveContext.buttonStatus[1 as libc::c_int as usize] =
        D_8082AB6C[((*pauseCtx).pageIndex as libc::c_int + pt as libc::c_int)
                       as usize][1 as libc::c_int as usize];
    gSaveContext.buttonStatus[2 as libc::c_int as usize] =
        D_8082AB6C[((*pauseCtx).pageIndex as libc::c_int + pt as libc::c_int)
                       as usize][2 as libc::c_int as usize];
    gSaveContext.buttonStatus[3 as libc::c_int as usize] =
        D_8082AB6C[((*pauseCtx).pageIndex as libc::c_int + pt as libc::c_int)
                       as usize][3 as libc::c_int as usize];
    gSaveContext.buttonStatus[4 as libc::c_int as usize] =
        D_8082AB6C[((*pauseCtx).pageIndex as libc::c_int + pt as libc::c_int)
                       as usize][4 as libc::c_int as usize];
    osSyncPrintf(b"kscope->kscp_pos+pt = %d\n\x00" as *const u8 as
                     *const libc::c_char,
                 (*pauseCtx).pageIndex as libc::c_int + pt as libc::c_int);
    gSaveContext.unk_13EA = 0 as libc::c_int as u16_0;
    Interface_ChangeAlpha(50 as libc::c_int as u16_0);
}
#[no_mangle]
pub unsafe extern "C" fn KaleidoScope_HandlePageToggles(mut pauseCtx:
                                                            *mut PauseContext,
                                                        mut input:
                                                            *mut Input) {
    if (*pauseCtx).debugState as libc::c_int == 0 as libc::c_int &&
           !((*input).press.button as libc::c_int | !(0x20 as libc::c_int)) ==
               0 as libc::c_int {
        (*pauseCtx).debugState = 1 as libc::c_int as u16_0;
        return
    }
    if !((*input).press.button as libc::c_int | !(0x10 as libc::c_int)) ==
           0 as libc::c_int {
        KaleidoScope_SwitchPage(pauseCtx, 2 as libc::c_int as u8_0);
        return
    }
    if !((*input).press.button as libc::c_int | !(0x2000 as libc::c_int)) ==
           0 as libc::c_int {
        KaleidoScope_SwitchPage(pauseCtx, 0 as libc::c_int as u8_0);
        return
    }
    if (*pauseCtx).cursorSpecialPos as libc::c_int == 10 as libc::c_int {
        if ((*pauseCtx).stickRelX as libc::c_int) < -(30 as libc::c_int) {
            (*pauseCtx).pageSwitchTimer += 1;
            if (*pauseCtx).pageSwitchTimer as libc::c_int >= 10 as libc::c_int
                   ||
                   (*pauseCtx).pageSwitchTimer as libc::c_int ==
                       0 as libc::c_int {
                KaleidoScope_SwitchPage(pauseCtx, 0 as libc::c_int as u8_0);
            }
        } else { (*pauseCtx).pageSwitchTimer = -(1 as libc::c_int) as s16 }
    } else if (*pauseCtx).cursorSpecialPos as libc::c_int == 11 as libc::c_int
     {
        if (*pauseCtx).stickRelX as libc::c_int > 30 as libc::c_int {
            (*pauseCtx).pageSwitchTimer += 1;
            if (*pauseCtx).pageSwitchTimer as libc::c_int >= 10 as libc::c_int
                   ||
                   (*pauseCtx).pageSwitchTimer as libc::c_int ==
                       0 as libc::c_int {
                KaleidoScope_SwitchPage(pauseCtx, 2 as libc::c_int as u8_0);
            }
        } else { (*pauseCtx).pageSwitchTimer = -(1 as libc::c_int) as s16 }
    };
}
#[no_mangle]
pub unsafe extern "C" fn KaleidoScope_DrawCursor(mut globalCtx:
                                                     *mut GlobalContext,
                                                 mut pageIndex: u16_0) {
    let mut pauseCtx: *mut PauseContext = &mut (*globalCtx).pauseCtx;
    let mut temp: u16_0 = 0;
    let mut __gfxCtx: *mut GraphicsContext = 0 as *mut GraphicsContext;
    let mut dispRefs: [*mut Gfx; 4] = [0 as *mut Gfx; 4];
    __gfxCtx = (*globalCtx).state.gfxCtx;
    Graph_OpenDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                    b"../z_kaleido_scope_PAL.c\x00" as *const u8 as
                        *const libc::c_char, 955 as libc::c_int);
    temp = (*pauseCtx).unk_1E4;
    if ((*pauseCtx).unk_1E4 as libc::c_int == 0 as libc::c_int ||
            temp as libc::c_int == 8 as libc::c_int) &&
           (*pauseCtx).state as libc::c_int == 6 as libc::c_int ||
           (*pauseCtx).pageIndex as libc::c_int == PAUSE_QUEST as libc::c_int
               &&
               ((temp as libc::c_int) < 3 as libc::c_int ||
                    temp as libc::c_int == 5 as libc::c_int ||
                    temp as libc::c_int == 8 as libc::c_int) {
        if (*pauseCtx).pageIndex as libc::c_int == pageIndex as libc::c_int {
            let mut i: s16 = 0;
            let mut j: s16 = 0;
            let fresh26 = (*__gfxCtx).polyOpa.p;
            (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
            let mut _g: *mut Gfx = fresh26;
            (*_g).words.w0 =
                (0xe7 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    24 as libc::c_int;
            (*_g).words.w1 = 0 as libc::c_int as libc::c_uint;
            let fresh27 = (*__gfxCtx).polyOpa.p;
            (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
            let mut _g_0: *mut Gfx = fresh27;
            (*_g_0).words.w0 =
                (0xfc as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    24 as libc::c_int |
                    (((3 as libc::c_int as u32_0 &
                           (((0x1 as libc::c_int) << 4 as libc::c_int) -
                                1 as libc::c_int) as libc::c_uint) <<
                          20 as libc::c_int |
                          (1 as libc::c_int as u32_0 &
                               (((0x1 as libc::c_int) << 5 as libc::c_int) -
                                    1 as libc::c_int) as libc::c_uint) <<
                              15 as libc::c_int |
                          (1 as libc::c_int as u32_0 &
                               (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                    1 as libc::c_int) as libc::c_uint) <<
                              12 as libc::c_int |
                          (3 as libc::c_int as u32_0 &
                               (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                    1 as libc::c_int) as libc::c_uint) <<
                              9 as libc::c_int |
                          ((3 as libc::c_int as u32_0 &
                                (((0x1 as libc::c_int) << 4 as libc::c_int) -
                                     1 as libc::c_int) as libc::c_uint) <<
                               5 as libc::c_int |
                               (1 as libc::c_int as u32_0 &
                                    (((0x1 as libc::c_int) <<
                                          5 as libc::c_int) -
                                         1 as libc::c_int) as libc::c_uint) <<
                                   0 as libc::c_int)) &
                         (((0x1 as libc::c_int) << 24 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        0 as libc::c_int;
            (*_g_0).words.w1 =
                (5 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 4 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    28 as libc::c_int |
                    (5 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 3 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        15 as libc::c_int |
                    (7 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 3 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        12 as libc::c_int |
                    (7 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 3 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        9 as libc::c_int |
                    ((5 as libc::c_int as u32_0 &
                          (((0x1 as libc::c_int) << 4 as libc::c_int) -
                               1 as libc::c_int) as libc::c_uint) <<
                         24 as libc::c_int |
                         (1 as libc::c_int as u32_0 &
                              (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                   1 as libc::c_int) as libc::c_uint) <<
                             21 as libc::c_int |
                         (3 as libc::c_int as u32_0 &
                              (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                   1 as libc::c_int) as libc::c_uint) <<
                             18 as libc::c_int |
                         (5 as libc::c_int as u32_0 &
                              (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                   1 as libc::c_int) as libc::c_uint) <<
                             6 as libc::c_int |
                         (7 as libc::c_int as u32_0 &
                              (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                   1 as libc::c_int) as libc::c_uint) <<
                             3 as libc::c_int |
                         (7 as libc::c_int as u32_0 &
                              (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                   1 as libc::c_int) as libc::c_uint) <<
                             0 as libc::c_int);
            let fresh28 = (*__gfxCtx).polyOpa.p;
            (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
            let mut _g_1: *mut Gfx = fresh28;
            (*_g_1).words.w0 =
                (0xfa as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    24 as libc::c_int |
                    (0 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        8 as libc::c_int |
                    (0 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        0 as libc::c_int;
            (*_g_1).words.w1 =
                (sCursorColors[((*pauseCtx).cursorColorSet as libc::c_int >>
                                    2 as libc::c_int) as
                                   usize][0 as libc::c_int as usize] as u32_0
                     &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    24 as libc::c_int |
                    (sCursorColors[((*pauseCtx).cursorColorSet as libc::c_int
                                        >> 2 as libc::c_int) as
                                       usize][1 as libc::c_int as usize] as
                         u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        16 as libc::c_int |
                    (sCursorColors[((*pauseCtx).cursorColorSet as libc::c_int
                                        >> 2 as libc::c_int) as
                                       usize][2 as libc::c_int as usize] as
                         u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        8 as libc::c_int |
                    (255 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        0 as libc::c_int;
            let fresh29 = (*__gfxCtx).polyOpa.p;
            (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
            let mut _g_2: *mut Gfx = fresh29;
            (*_g_2).words.w0 =
                (0xfb as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    24 as libc::c_int;
            (*_g_2).words.w1 =
                (D_8082AB8C as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    24 as libc::c_int |
                    (D_8082AB90 as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        16 as libc::c_int |
                    (D_8082AB94 as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        8 as libc::c_int |
                    (255 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        0 as libc::c_int;
            let fresh30 = (*__gfxCtx).polyOpa.p;
            (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
            let mut _g_3: *mut Gfx = fresh30;
            (*_g_3).words.w0 =
                (0x1 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    24 as libc::c_int |
                    (16 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        12 as libc::c_int |
                    ((0 as libc::c_int + 16 as libc::c_int) as u32_0 &
                         (((0x1 as libc::c_int) << 7 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        1 as libc::c_int;
            (*_g_3).words.w1 = (*pauseCtx).cursorVtx as libc::c_uint;
            j = 0 as libc::c_int as s16;
            i = j;
            while (i as libc::c_int) < 4 as libc::c_int {
                let fresh31 = (*__gfxCtx).polyOpa.p;
                (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
                let mut _g_4: *mut Gfx = fresh31;
                (*_g_4).words.w0 =
                    (0xfd as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        24 as libc::c_int |
                        (3 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            21 as libc::c_int |
                        (2 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 2 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            19 as libc::c_int |
                        ((1 as libc::c_int - 1 as libc::c_int) as u32_0 &
                             (((0x1 as libc::c_int) << 12 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            0 as libc::c_int;
                (*_g_4).words.w1 = sCursorTexs[i as usize] as libc::c_uint;
                let fresh32 = (*__gfxCtx).polyOpa.p;
                (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
                let mut _g_5: *mut Gfx = fresh32;
                (*_g_5).words.w0 =
                    (0xf5 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        24 as libc::c_int |
                        (3 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            21 as libc::c_int |
                        (2 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 2 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            19 as libc::c_int |
                        (0 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 9 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            9 as libc::c_int |
                        (0 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 9 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            0 as libc::c_int;
                (*_g_5).words.w1 =
                    (7 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 3 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        24 as libc::c_int |
                        (0 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 4 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            20 as libc::c_int |
                        ((0 as libc::c_int | 0 as libc::c_int) as u32_0 &
                             (((0x1 as libc::c_int) << 2 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            18 as libc::c_int |
                        (0 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 4 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            14 as libc::c_int |
                        (0 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 4 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            10 as libc::c_int |
                        ((0 as libc::c_int | 0 as libc::c_int) as u32_0 &
                             (((0x1 as libc::c_int) << 2 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            8 as libc::c_int |
                        (0 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 4 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            4 as libc::c_int |
                        (0 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 4 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            0 as libc::c_int;
                let fresh33 = (*__gfxCtx).polyOpa.p;
                (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
                let mut _g_6: *mut Gfx = fresh33;
                (*_g_6).words.w0 =
                    (0xe6 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        24 as libc::c_int;
                (*_g_6).words.w1 = 0 as libc::c_int as libc::c_uint;
                let fresh34 = (*__gfxCtx).polyOpa.p;
                (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
                let mut _g_7: *mut Gfx = fresh34;
                (*_g_7).words.w0 =
                    (0xf3 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        24 as libc::c_int |
                        (0 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 12 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            12 as libc::c_int |
                        (0 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 12 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            0 as libc::c_int;
                (*_g_7).words.w1 =
                    (7 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 3 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        24 as libc::c_int |
                        ((if ((16 as libc::c_int * 16 as libc::c_int +
                                   3 as libc::c_int >> 2 as libc::c_int) -
                                  1 as libc::c_int) < 2047 as libc::c_int {
                              (16 as libc::c_int * 16 as libc::c_int +
                                   3 as libc::c_int >> 2 as libc::c_int) -
                                  1 as libc::c_int
                          } else { 2047 as libc::c_int }) as u32_0 &
                             (((0x1 as libc::c_int) << 12 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            12 as libc::c_int |
                        (((((1 as libc::c_int) << 11 as libc::c_int) +
                               (if 1 as libc::c_int >
                                       16 as libc::c_int / 16 as libc::c_int {
                                    1 as libc::c_int
                                } else {
                                    (16 as libc::c_int) / 16 as libc::c_int
                                }) - 1 as libc::c_int) /
                              (if 1 as libc::c_int >
                                      16 as libc::c_int / 16 as libc::c_int {
                                   1 as libc::c_int
                               } else {
                                   (16 as libc::c_int) / 16 as libc::c_int
                               })) as u32_0 &
                             (((0x1 as libc::c_int) << 12 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            0 as libc::c_int;
                let fresh35 = (*__gfxCtx).polyOpa.p;
                (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
                let mut _g_8: *mut Gfx = fresh35;
                (*_g_8).words.w0 =
                    (0xe7 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        24 as libc::c_int;
                (*_g_8).words.w1 = 0 as libc::c_int as libc::c_uint;
                let fresh36 = (*__gfxCtx).polyOpa.p;
                (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
                let mut _g_9: *mut Gfx = fresh36;
                (*_g_9).words.w0 =
                    (0xf5 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        24 as libc::c_int |
                        (3 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            21 as libc::c_int |
                        (0 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 2 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            19 as libc::c_int |
                        (((16 as libc::c_int >> 1 as libc::c_int) +
                              7 as libc::c_int >> 3 as libc::c_int) as u32_0 &
                             (((0x1 as libc::c_int) << 9 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            9 as libc::c_int |
                        (0 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 9 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            0 as libc::c_int;
                (*_g_9).words.w1 =
                    (0 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 3 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        24 as libc::c_int |
                        (0 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 4 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            20 as libc::c_int |
                        ((0 as libc::c_int | 0 as libc::c_int) as u32_0 &
                             (((0x1 as libc::c_int) << 2 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            18 as libc::c_int |
                        (0 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 4 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            14 as libc::c_int |
                        (0 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 4 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            10 as libc::c_int |
                        ((0 as libc::c_int | 0 as libc::c_int) as u32_0 &
                             (((0x1 as libc::c_int) << 2 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            8 as libc::c_int |
                        (0 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 4 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            4 as libc::c_int |
                        (0 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 4 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            0 as libc::c_int;
                let fresh37 = (*__gfxCtx).polyOpa.p;
                (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
                let mut _g_10: *mut Gfx = fresh37;
                (*_g_10).words.w0 =
                    (0xf2 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        24 as libc::c_int |
                        (0 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 12 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            12 as libc::c_int |
                        (0 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 12 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            0 as libc::c_int;
                (*_g_10).words.w1 =
                    (0 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 3 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        24 as libc::c_int |
                        (((16 as libc::c_int - 1 as libc::c_int) <<
                              2 as libc::c_int) as u32_0 &
                             (((0x1 as libc::c_int) << 12 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            12 as libc::c_int |
                        (((16 as libc::c_int - 1 as libc::c_int) <<
                              2 as libc::c_int) as u32_0 &
                             (((0x1 as libc::c_int) << 12 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            0 as libc::c_int;
                let fresh38 = (*__gfxCtx).polyOpa.p;
                (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
                let mut _g_11: *mut Gfx = fresh38;
                (*_g_11).words.w0 =
                    (0x7 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        24 as libc::c_int |
                        (if 0 as libc::c_int == 0 as libc::c_int {
                             (((j as libc::c_int * 2 as libc::c_int) as u32_0
                                   &
                                   (((0x1 as libc::c_int) << 8 as libc::c_int)
                                        - 1 as libc::c_int) as libc::c_uint)
                                  << 16 as libc::c_int |
                                  (((j as libc::c_int + 2 as libc::c_int) *
                                        2 as libc::c_int) as u32_0 &
                                       (((0x1 as libc::c_int) <<
                                             8 as libc::c_int) -
                                            1 as libc::c_int) as libc::c_uint)
                                      << 8 as libc::c_int) |
                                 (((j as libc::c_int + 3 as libc::c_int) *
                                       2 as libc::c_int) as u32_0 &
                                      (((0x1 as libc::c_int) <<
                                            8 as libc::c_int) -
                                           1 as libc::c_int) as libc::c_uint)
                                     << 0 as libc::c_int
                         } else {
                             (if 0 as libc::c_int == 1 as libc::c_int {
                                  ((((j as libc::c_int + 2 as libc::c_int) *
                                         2 as libc::c_int) as u32_0 &
                                        (((0x1 as libc::c_int) <<
                                              8 as libc::c_int) -
                                             1 as libc::c_int) as
                                            libc::c_uint) << 16 as libc::c_int
                                       |
                                       (((j as libc::c_int + 3 as libc::c_int)
                                             * 2 as libc::c_int) as u32_0 &
                                            (((0x1 as libc::c_int) <<
                                                  8 as libc::c_int) -
                                                 1 as libc::c_int) as
                                                libc::c_uint) <<
                                           8 as libc::c_int) |
                                      (((j as libc::c_int + 1 as libc::c_int)
                                            * 2 as libc::c_int) as u32_0 &
                                           (((0x1 as libc::c_int) <<
                                                 8 as libc::c_int) -
                                                1 as libc::c_int) as
                                               libc::c_uint) <<
                                          0 as libc::c_int
                              } else {
                                  (if 0 as libc::c_int == 2 as libc::c_int {
                                       ((((j as libc::c_int +
                                               3 as libc::c_int) *
                                              2 as libc::c_int) as u32_0 &
                                             (((0x1 as libc::c_int) <<
                                                   8 as libc::c_int) -
                                                  1 as libc::c_int) as
                                                 libc::c_uint) <<
                                            16 as libc::c_int |
                                            (((j as libc::c_int +
                                                   1 as libc::c_int) *
                                                  2 as libc::c_int) as u32_0 &
                                                 (((0x1 as libc::c_int) <<
                                                       8 as libc::c_int) -
                                                      1 as libc::c_int) as
                                                     libc::c_uint) <<
                                                8 as libc::c_int) |
                                           ((j as libc::c_int *
                                                 2 as libc::c_int) as u32_0 &
                                                (((0x1 as libc::c_int) <<
                                                      8 as libc::c_int) -
                                                     1 as libc::c_int) as
                                                    libc::c_uint) <<
                                               0 as libc::c_int
                                   } else {
                                       ((((j as libc::c_int +
                                               1 as libc::c_int) *
                                              2 as libc::c_int) as u32_0 &
                                             (((0x1 as libc::c_int) <<
                                                   8 as libc::c_int) -
                                                  1 as libc::c_int) as
                                                 libc::c_uint) <<
                                            16 as libc::c_int |
                                            ((j as libc::c_int *
                                                  2 as libc::c_int) as u32_0 &
                                                 (((0x1 as libc::c_int) <<
                                                       8 as libc::c_int) -
                                                      1 as libc::c_int) as
                                                     libc::c_uint) <<
                                                8 as libc::c_int) |
                                           (((j as libc::c_int +
                                                  2 as libc::c_int) *
                                                 2 as libc::c_int) as u32_0 &
                                                (((0x1 as libc::c_int) <<
                                                      8 as libc::c_int) -
                                                     1 as libc::c_int) as
                                                    libc::c_uint) <<
                                               0 as libc::c_int
                                   })
                              })
                         });
                (*_g_11).words.w1 =
                    if 0 as libc::c_int == 0 as libc::c_int {
                        (((j as libc::c_int * 2 as libc::c_int) as u32_0 &
                              (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                   1 as libc::c_int) as libc::c_uint) <<
                             16 as libc::c_int |
                             (((j as libc::c_int + 3 as libc::c_int) *
                                   2 as libc::c_int) as u32_0 &
                                  (((0x1 as libc::c_int) << 8 as libc::c_int)
                                       - 1 as libc::c_int) as libc::c_uint) <<
                                 8 as libc::c_int) |
                            (((j as libc::c_int + 1 as libc::c_int) *
                                  2 as libc::c_int) as u32_0 &
                                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                      1 as libc::c_int) as libc::c_uint) <<
                                0 as libc::c_int
                    } else if 0 as libc::c_int == 1 as libc::c_int {
                        ((((j as libc::c_int + 2 as libc::c_int) *
                               2 as libc::c_int) as u32_0 &
                              (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                   1 as libc::c_int) as libc::c_uint) <<
                             16 as libc::c_int |
                             (((j as libc::c_int + 1 as libc::c_int) *
                                   2 as libc::c_int) as u32_0 &
                                  (((0x1 as libc::c_int) << 8 as libc::c_int)
                                       - 1 as libc::c_int) as libc::c_uint) <<
                                 8 as libc::c_int) |
                            ((j as libc::c_int * 2 as libc::c_int) as u32_0 &
                                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                      1 as libc::c_int) as libc::c_uint) <<
                                0 as libc::c_int
                    } else if 0 as libc::c_int == 2 as libc::c_int {
                        ((((j as libc::c_int + 3 as libc::c_int) *
                               2 as libc::c_int) as u32_0 &
                              (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                   1 as libc::c_int) as libc::c_uint) <<
                             16 as libc::c_int |
                             ((j as libc::c_int * 2 as libc::c_int) as u32_0 &
                                  (((0x1 as libc::c_int) << 8 as libc::c_int)
                                       - 1 as libc::c_int) as libc::c_uint) <<
                                 8 as libc::c_int) |
                            (((j as libc::c_int + 2 as libc::c_int) *
                                  2 as libc::c_int) as u32_0 &
                                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                      1 as libc::c_int) as libc::c_uint) <<
                                0 as libc::c_int
                    } else {
                        ((((j as libc::c_int + 1 as libc::c_int) *
                               2 as libc::c_int) as u32_0 &
                              (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                   1 as libc::c_int) as libc::c_uint) <<
                             16 as libc::c_int |
                             (((j as libc::c_int + 2 as libc::c_int) *
                                   2 as libc::c_int) as u32_0 &
                                  (((0x1 as libc::c_int) << 8 as libc::c_int)
                                       - 1 as libc::c_int) as libc::c_uint) <<
                                 8 as libc::c_int) |
                            (((j as libc::c_int + 3 as libc::c_int) *
                                  2 as libc::c_int) as u32_0 &
                                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                      1 as libc::c_int) as libc::c_uint) <<
                                0 as libc::c_int
                    };
                i += 1;
                j = (j as libc::c_int + 4 as libc::c_int) as s16
            }
        }
        let fresh39 = (*__gfxCtx).polyOpa.p;
        (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
        let mut _g_12: *mut Gfx = fresh39;
        (*_g_12).words.w0 =
            (0xe7 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int;
        (*_g_12).words.w1 = 0 as libc::c_int as libc::c_uint;
        let fresh40 = (*__gfxCtx).polyOpa.p;
        (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
        let mut _g_13: *mut Gfx = fresh40;
        (*_g_13).words.w0 =
            (0xfb as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int;
        (*_g_13).words.w1 =
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int
                |
                (0 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    16 as libc::c_int |
                (0 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    8 as libc::c_int |
                (255 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int
    }
    Graph_CloseDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                     b"../z_kaleido_scope_PAL.c\x00" as *const u8 as
                         *const libc::c_char, 985 as libc::c_int);
}
#[no_mangle]
pub unsafe extern "C" fn KaleidoScope_DrawPageSections(mut gfx: *mut Gfx,
                                                       mut vertices: *mut Vtx,
                                                       mut textures:
                                                           *mut *mut libc::c_void)
 -> *mut Gfx {
    let mut i: s32 = 0;
    let mut j: s32 = 0;
    let fresh41 = gfx;
    gfx = gfx.offset(1);
    let mut _g: *mut Gfx = fresh41;
    (*_g).words.w0 =
        (0x1 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (32 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 12 as libc::c_int
            |
            ((0 as libc::c_int + 32 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 7 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 1 as libc::c_int;
    (*_g).words.w1 = vertices as libc::c_uint;
    i = 0 as libc::c_int;
    j = 0 as libc::c_int;
    while j < 32 as libc::c_int {
        let fresh42 = gfx;
        gfx = gfx.offset(1);
        let mut _g_0: *mut Gfx = fresh42;
        (*_g_0).words.w0 =
            (0xe7 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int;
        (*_g_0).words.w1 = 0 as libc::c_int as libc::c_uint;
        let fresh43 = gfx;
        gfx = gfx.offset(1);
        let mut _g_1: *mut Gfx = fresh43;
        (*_g_1).words.w0 =
            (0xfd as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int
                |
                (3 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 3 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    21 as libc::c_int |
                (2 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 2 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    19 as libc::c_int |
                ((1 as libc::c_int - 1 as libc::c_int) as u32_0 &
                     (((0x1 as libc::c_int) << 12 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int;
        (*_g_1).words.w1 = *textures.offset(i as isize) as libc::c_uint;
        let fresh44 = gfx;
        gfx = gfx.offset(1);
        let mut _g_2: *mut Gfx = fresh44;
        (*_g_2).words.w0 =
            (0xf5 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int
                |
                (3 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 3 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    21 as libc::c_int |
                (2 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 2 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    19 as libc::c_int |
                (0 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 9 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    9 as libc::c_int |
                (0 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 9 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int;
        (*_g_2).words.w1 =
            (7 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 3 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int
                |
                (0 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 4 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    20 as libc::c_int |
                ((0 as libc::c_int | 0 as libc::c_int) as u32_0 &
                     (((0x1 as libc::c_int) << 2 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    18 as libc::c_int |
                (0 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 4 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    14 as libc::c_int |
                (0 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 4 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    10 as libc::c_int |
                ((0 as libc::c_int | 0 as libc::c_int) as u32_0 &
                     (((0x1 as libc::c_int) << 2 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    8 as libc::c_int |
                (0 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 4 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    4 as libc::c_int |
                (0 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 4 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int;
        let fresh45 = gfx;
        gfx = gfx.offset(1);
        let mut _g_3: *mut Gfx = fresh45;
        (*_g_3).words.w0 =
            (0xe6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int;
        (*_g_3).words.w1 = 0 as libc::c_int as libc::c_uint;
        let fresh46 = gfx;
        gfx = gfx.offset(1);
        let mut _g_4: *mut Gfx = fresh46;
        (*_g_4).words.w0 =
            (0xf3 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int
                |
                (0 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 12 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    12 as libc::c_int |
                (0 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 12 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int;
        (*_g_4).words.w1 =
            (7 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 3 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int
                |
                ((if ((80 as libc::c_int * 32 as libc::c_int +
                           1 as libc::c_int >> 1 as libc::c_int) -
                          1 as libc::c_int) < 2047 as libc::c_int {
                      (80 as libc::c_int * 32 as libc::c_int +
                           1 as libc::c_int >> 1 as libc::c_int) -
                          1 as libc::c_int
                  } else { 2047 as libc::c_int }) as u32_0 &
                     (((0x1 as libc::c_int) << 12 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    12 as libc::c_int |
                (((((1 as libc::c_int) << 11 as libc::c_int) +
                       (if 1 as libc::c_int >
                               80 as libc::c_int * 1 as libc::c_int /
                                   8 as libc::c_int {
                            1 as libc::c_int
                        } else {
                            (80 as libc::c_int * 1 as libc::c_int) /
                                8 as libc::c_int
                        }) - 1 as libc::c_int) /
                      (if 1 as libc::c_int >
                              80 as libc::c_int * 1 as libc::c_int /
                                  8 as libc::c_int {
                           1 as libc::c_int
                       } else {
                           (80 as libc::c_int * 1 as libc::c_int) /
                               8 as libc::c_int
                       })) as u32_0 &
                     (((0x1 as libc::c_int) << 12 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int;
        let fresh47 = gfx;
        gfx = gfx.offset(1);
        let mut _g_5: *mut Gfx = fresh47;
        (*_g_5).words.w0 =
            (0xe7 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int;
        (*_g_5).words.w1 = 0 as libc::c_int as libc::c_uint;
        let fresh48 = gfx;
        gfx = gfx.offset(1);
        let mut _g_6: *mut Gfx = fresh48;
        (*_g_6).words.w0 =
            (0xf5 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int
                |
                (3 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 3 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    21 as libc::c_int |
                (1 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 2 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    19 as libc::c_int |
                ((80 as libc::c_int * 1 as libc::c_int + 7 as libc::c_int >>
                      3 as libc::c_int) as u32_0 &
                     (((0x1 as libc::c_int) << 9 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    9 as libc::c_int |
                (0 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 9 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int;
        (*_g_6).words.w1 =
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 3 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int
                |
                (0 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 4 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    20 as libc::c_int |
                ((0 as libc::c_int | 0 as libc::c_int) as u32_0 &
                     (((0x1 as libc::c_int) << 2 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    18 as libc::c_int |
                (0 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 4 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    14 as libc::c_int |
                (0 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 4 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    10 as libc::c_int |
                ((0 as libc::c_int | 0 as libc::c_int) as u32_0 &
                     (((0x1 as libc::c_int) << 2 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    8 as libc::c_int |
                (0 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 4 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    4 as libc::c_int |
                (0 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 4 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int;
        let fresh49 = gfx;
        gfx = gfx.offset(1);
        let mut _g_7: *mut Gfx = fresh49;
        (*_g_7).words.w0 =
            (0xf2 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int
                |
                (0 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 12 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    12 as libc::c_int |
                (0 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 12 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int;
        (*_g_7).words.w1 =
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 3 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int
                |
                (((80 as libc::c_int - 1 as libc::c_int) << 2 as libc::c_int)
                     as u32_0 &
                     (((0x1 as libc::c_int) << 12 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    12 as libc::c_int |
                (((32 as libc::c_int - 1 as libc::c_int) << 2 as libc::c_int)
                     as u32_0 &
                     (((0x1 as libc::c_int) << 12 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int;
        let fresh50 = gfx;
        gfx = gfx.offset(1);
        let mut _g_8: *mut Gfx = fresh50;
        (*_g_8).words.w0 =
            (0x7 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int
                |
                (if 0 as libc::c_int == 0 as libc::c_int {
                     (((j * 2 as libc::c_int) as u32_0 &
                           (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                1 as libc::c_int) as libc::c_uint) <<
                          16 as libc::c_int |
                          (((j + 2 as libc::c_int) * 2 as libc::c_int) as
                               u32_0 &
                               (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                    1 as libc::c_int) as libc::c_uint) <<
                              8 as libc::c_int) |
                         (((j + 3 as libc::c_int) * 2 as libc::c_int) as u32_0
                              &
                              (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                   1 as libc::c_int) as libc::c_uint) <<
                             0 as libc::c_int
                 } else {
                     (if 0 as libc::c_int == 1 as libc::c_int {
                          ((((j + 2 as libc::c_int) * 2 as libc::c_int) as
                                u32_0 &
                                (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                     1 as libc::c_int) as libc::c_uint) <<
                               16 as libc::c_int |
                               (((j + 3 as libc::c_int) * 2 as libc::c_int) as
                                    u32_0 &
                                    (((0x1 as libc::c_int) <<
                                          8 as libc::c_int) -
                                         1 as libc::c_int) as libc::c_uint) <<
                                   8 as libc::c_int) |
                              (((j + 1 as libc::c_int) * 2 as libc::c_int) as
                                   u32_0 &
                                   (((0x1 as libc::c_int) << 8 as libc::c_int)
                                        - 1 as libc::c_int) as libc::c_uint)
                                  << 0 as libc::c_int
                      } else {
                          (if 0 as libc::c_int == 2 as libc::c_int {
                               ((((j + 3 as libc::c_int) * 2 as libc::c_int)
                                     as u32_0 &
                                     (((0x1 as libc::c_int) <<
                                           8 as libc::c_int) -
                                          1 as libc::c_int) as libc::c_uint)
                                    << 16 as libc::c_int |
                                    (((j + 1 as libc::c_int) *
                                          2 as libc::c_int) as u32_0 &
                                         (((0x1 as libc::c_int) <<
                                               8 as libc::c_int) -
                                              1 as libc::c_int) as
                                             libc::c_uint) <<
                                        8 as libc::c_int) |
                                   ((j * 2 as libc::c_int) as u32_0 &
                                        (((0x1 as libc::c_int) <<
                                              8 as libc::c_int) -
                                             1 as libc::c_int) as
                                            libc::c_uint) << 0 as libc::c_int
                           } else {
                               ((((j + 1 as libc::c_int) * 2 as libc::c_int)
                                     as u32_0 &
                                     (((0x1 as libc::c_int) <<
                                           8 as libc::c_int) -
                                          1 as libc::c_int) as libc::c_uint)
                                    << 16 as libc::c_int |
                                    ((j * 2 as libc::c_int) as u32_0 &
                                         (((0x1 as libc::c_int) <<
                                               8 as libc::c_int) -
                                              1 as libc::c_int) as
                                             libc::c_uint) <<
                                        8 as libc::c_int) |
                                   (((j + 2 as libc::c_int) *
                                         2 as libc::c_int) as u32_0 &
                                        (((0x1 as libc::c_int) <<
                                              8 as libc::c_int) -
                                             1 as libc::c_int) as
                                            libc::c_uint) << 0 as libc::c_int
                           })
                      })
                 });
        (*_g_8).words.w1 =
            if 0 as libc::c_int == 0 as libc::c_int {
                (((j * 2 as libc::c_int) as u32_0 &
                      (((0x1 as libc::c_int) << 8 as libc::c_int) -
                           1 as libc::c_int) as libc::c_uint) <<
                     16 as libc::c_int |
                     (((j + 3 as libc::c_int) * 2 as libc::c_int) as u32_0 &
                          (((0x1 as libc::c_int) << 8 as libc::c_int) -
                               1 as libc::c_int) as libc::c_uint) <<
                         8 as libc::c_int) |
                    (((j + 1 as libc::c_int) * 2 as libc::c_int) as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        0 as libc::c_int
            } else if 0 as libc::c_int == 1 as libc::c_int {
                ((((j + 2 as libc::c_int) * 2 as libc::c_int) as u32_0 &
                      (((0x1 as libc::c_int) << 8 as libc::c_int) -
                           1 as libc::c_int) as libc::c_uint) <<
                     16 as libc::c_int |
                     (((j + 1 as libc::c_int) * 2 as libc::c_int) as u32_0 &
                          (((0x1 as libc::c_int) << 8 as libc::c_int) -
                               1 as libc::c_int) as libc::c_uint) <<
                         8 as libc::c_int) |
                    ((j * 2 as libc::c_int) as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        0 as libc::c_int
            } else if 0 as libc::c_int == 2 as libc::c_int {
                ((((j + 3 as libc::c_int) * 2 as libc::c_int) as u32_0 &
                      (((0x1 as libc::c_int) << 8 as libc::c_int) -
                           1 as libc::c_int) as libc::c_uint) <<
                     16 as libc::c_int |
                     ((j * 2 as libc::c_int) as u32_0 &
                          (((0x1 as libc::c_int) << 8 as libc::c_int) -
                               1 as libc::c_int) as libc::c_uint) <<
                         8 as libc::c_int) |
                    (((j + 2 as libc::c_int) * 2 as libc::c_int) as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        0 as libc::c_int
            } else {
                ((((j + 1 as libc::c_int) * 2 as libc::c_int) as u32_0 &
                      (((0x1 as libc::c_int) << 8 as libc::c_int) -
                           1 as libc::c_int) as libc::c_uint) <<
                     16 as libc::c_int |
                     (((j + 2 as libc::c_int) * 2 as libc::c_int) as u32_0 &
                          (((0x1 as libc::c_int) << 8 as libc::c_int) -
                               1 as libc::c_int) as libc::c_uint) <<
                         8 as libc::c_int) |
                    (((j + 3 as libc::c_int) * 2 as libc::c_int) as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        0 as libc::c_int
            };
        j += 4 as libc::c_int;
        i += 1
    }
    let fresh51 = gfx;
    gfx = gfx.offset(1);
    let mut _g_9: *mut Gfx = fresh51;
    (*_g_9).words.w0 =
        (0x1 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (28 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 12 as libc::c_int
            |
            ((0 as libc::c_int + 28 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 7 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 1 as libc::c_int;
    (*_g_9).words.w1 =
        vertices.offset(32 as libc::c_int as isize) as libc::c_uint;
    j = 0 as libc::c_int;
    while j < 28 as libc::c_int {
        let fresh52 = gfx;
        gfx = gfx.offset(1);
        let mut _g_10: *mut Gfx = fresh52;
        (*_g_10).words.w0 =
            (0xe7 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int;
        (*_g_10).words.w1 = 0 as libc::c_int as libc::c_uint;
        let fresh53 = gfx;
        gfx = gfx.offset(1);
        let mut _g_11: *mut Gfx = fresh53;
        (*_g_11).words.w0 =
            (0xfd as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int
                |
                (3 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 3 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    21 as libc::c_int |
                (2 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 2 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    19 as libc::c_int |
                ((1 as libc::c_int - 1 as libc::c_int) as u32_0 &
                     (((0x1 as libc::c_int) << 12 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int;
        (*_g_11).words.w1 = *textures.offset(i as isize) as libc::c_uint;
        let fresh54 = gfx;
        gfx = gfx.offset(1);
        let mut _g_12: *mut Gfx = fresh54;
        (*_g_12).words.w0 =
            (0xf5 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int
                |
                (3 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 3 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    21 as libc::c_int |
                (2 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 2 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    19 as libc::c_int |
                (0 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 9 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    9 as libc::c_int |
                (0 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 9 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int;
        (*_g_12).words.w1 =
            (7 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 3 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int
                |
                (0 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 4 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    20 as libc::c_int |
                ((0 as libc::c_int | 0 as libc::c_int) as u32_0 &
                     (((0x1 as libc::c_int) << 2 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    18 as libc::c_int |
                (0 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 4 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    14 as libc::c_int |
                (0 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 4 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    10 as libc::c_int |
                ((0 as libc::c_int | 0 as libc::c_int) as u32_0 &
                     (((0x1 as libc::c_int) << 2 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    8 as libc::c_int |
                (0 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 4 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    4 as libc::c_int |
                (0 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 4 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int;
        let fresh55 = gfx;
        gfx = gfx.offset(1);
        let mut _g_13: *mut Gfx = fresh55;
        (*_g_13).words.w0 =
            (0xe6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int;
        (*_g_13).words.w1 = 0 as libc::c_int as libc::c_uint;
        let fresh56 = gfx;
        gfx = gfx.offset(1);
        let mut _g_14: *mut Gfx = fresh56;
        (*_g_14).words.w0 =
            (0xf3 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int
                |
                (0 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 12 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    12 as libc::c_int |
                (0 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 12 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int;
        (*_g_14).words.w1 =
            (7 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 3 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int
                |
                ((if ((80 as libc::c_int * 32 as libc::c_int +
                           1 as libc::c_int >> 1 as libc::c_int) -
                          1 as libc::c_int) < 2047 as libc::c_int {
                      (80 as libc::c_int * 32 as libc::c_int +
                           1 as libc::c_int >> 1 as libc::c_int) -
                          1 as libc::c_int
                  } else { 2047 as libc::c_int }) as u32_0 &
                     (((0x1 as libc::c_int) << 12 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    12 as libc::c_int |
                (((((1 as libc::c_int) << 11 as libc::c_int) +
                       (if 1 as libc::c_int >
                               80 as libc::c_int * 1 as libc::c_int /
                                   8 as libc::c_int {
                            1 as libc::c_int
                        } else {
                            (80 as libc::c_int * 1 as libc::c_int) /
                                8 as libc::c_int
                        }) - 1 as libc::c_int) /
                      (if 1 as libc::c_int >
                              80 as libc::c_int * 1 as libc::c_int /
                                  8 as libc::c_int {
                           1 as libc::c_int
                       } else {
                           (80 as libc::c_int * 1 as libc::c_int) /
                               8 as libc::c_int
                       })) as u32_0 &
                     (((0x1 as libc::c_int) << 12 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int;
        let fresh57 = gfx;
        gfx = gfx.offset(1);
        let mut _g_15: *mut Gfx = fresh57;
        (*_g_15).words.w0 =
            (0xe7 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int;
        (*_g_15).words.w1 = 0 as libc::c_int as libc::c_uint;
        let fresh58 = gfx;
        gfx = gfx.offset(1);
        let mut _g_16: *mut Gfx = fresh58;
        (*_g_16).words.w0 =
            (0xf5 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int
                |
                (3 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 3 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    21 as libc::c_int |
                (1 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 2 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    19 as libc::c_int |
                ((80 as libc::c_int * 1 as libc::c_int + 7 as libc::c_int >>
                      3 as libc::c_int) as u32_0 &
                     (((0x1 as libc::c_int) << 9 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    9 as libc::c_int |
                (0 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 9 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int;
        (*_g_16).words.w1 =
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 3 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int
                |
                (0 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 4 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    20 as libc::c_int |
                ((0 as libc::c_int | 0 as libc::c_int) as u32_0 &
                     (((0x1 as libc::c_int) << 2 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    18 as libc::c_int |
                (0 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 4 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    14 as libc::c_int |
                (0 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 4 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    10 as libc::c_int |
                ((0 as libc::c_int | 0 as libc::c_int) as u32_0 &
                     (((0x1 as libc::c_int) << 2 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    8 as libc::c_int |
                (0 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 4 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    4 as libc::c_int |
                (0 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 4 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int;
        let fresh59 = gfx;
        gfx = gfx.offset(1);
        let mut _g_17: *mut Gfx = fresh59;
        (*_g_17).words.w0 =
            (0xf2 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int
                |
                (0 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 12 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    12 as libc::c_int |
                (0 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 12 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int;
        (*_g_17).words.w1 =
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 3 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int
                |
                (((80 as libc::c_int - 1 as libc::c_int) << 2 as libc::c_int)
                     as u32_0 &
                     (((0x1 as libc::c_int) << 12 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    12 as libc::c_int |
                (((32 as libc::c_int - 1 as libc::c_int) << 2 as libc::c_int)
                     as u32_0 &
                     (((0x1 as libc::c_int) << 12 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int;
        let fresh60 = gfx;
        gfx = gfx.offset(1);
        let mut _g_18: *mut Gfx = fresh60;
        (*_g_18).words.w0 =
            (0x7 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int
                |
                (if 0 as libc::c_int == 0 as libc::c_int {
                     (((j * 2 as libc::c_int) as u32_0 &
                           (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                1 as libc::c_int) as libc::c_uint) <<
                          16 as libc::c_int |
                          (((j + 2 as libc::c_int) * 2 as libc::c_int) as
                               u32_0 &
                               (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                    1 as libc::c_int) as libc::c_uint) <<
                              8 as libc::c_int) |
                         (((j + 3 as libc::c_int) * 2 as libc::c_int) as u32_0
                              &
                              (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                   1 as libc::c_int) as libc::c_uint) <<
                             0 as libc::c_int
                 } else {
                     (if 0 as libc::c_int == 1 as libc::c_int {
                          ((((j + 2 as libc::c_int) * 2 as libc::c_int) as
                                u32_0 &
                                (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                     1 as libc::c_int) as libc::c_uint) <<
                               16 as libc::c_int |
                               (((j + 3 as libc::c_int) * 2 as libc::c_int) as
                                    u32_0 &
                                    (((0x1 as libc::c_int) <<
                                          8 as libc::c_int) -
                                         1 as libc::c_int) as libc::c_uint) <<
                                   8 as libc::c_int) |
                              (((j + 1 as libc::c_int) * 2 as libc::c_int) as
                                   u32_0 &
                                   (((0x1 as libc::c_int) << 8 as libc::c_int)
                                        - 1 as libc::c_int) as libc::c_uint)
                                  << 0 as libc::c_int
                      } else {
                          (if 0 as libc::c_int == 2 as libc::c_int {
                               ((((j + 3 as libc::c_int) * 2 as libc::c_int)
                                     as u32_0 &
                                     (((0x1 as libc::c_int) <<
                                           8 as libc::c_int) -
                                          1 as libc::c_int) as libc::c_uint)
                                    << 16 as libc::c_int |
                                    (((j + 1 as libc::c_int) *
                                          2 as libc::c_int) as u32_0 &
                                         (((0x1 as libc::c_int) <<
                                               8 as libc::c_int) -
                                              1 as libc::c_int) as
                                             libc::c_uint) <<
                                        8 as libc::c_int) |
                                   ((j * 2 as libc::c_int) as u32_0 &
                                        (((0x1 as libc::c_int) <<
                                              8 as libc::c_int) -
                                             1 as libc::c_int) as
                                            libc::c_uint) << 0 as libc::c_int
                           } else {
                               ((((j + 1 as libc::c_int) * 2 as libc::c_int)
                                     as u32_0 &
                                     (((0x1 as libc::c_int) <<
                                           8 as libc::c_int) -
                                          1 as libc::c_int) as libc::c_uint)
                                    << 16 as libc::c_int |
                                    ((j * 2 as libc::c_int) as u32_0 &
                                         (((0x1 as libc::c_int) <<
                                               8 as libc::c_int) -
                                              1 as libc::c_int) as
                                             libc::c_uint) <<
                                        8 as libc::c_int) |
                                   (((j + 2 as libc::c_int) *
                                         2 as libc::c_int) as u32_0 &
                                        (((0x1 as libc::c_int) <<
                                              8 as libc::c_int) -
                                             1 as libc::c_int) as
                                            libc::c_uint) << 0 as libc::c_int
                           })
                      })
                 });
        (*_g_18).words.w1 =
            if 0 as libc::c_int == 0 as libc::c_int {
                (((j * 2 as libc::c_int) as u32_0 &
                      (((0x1 as libc::c_int) << 8 as libc::c_int) -
                           1 as libc::c_int) as libc::c_uint) <<
                     16 as libc::c_int |
                     (((j + 3 as libc::c_int) * 2 as libc::c_int) as u32_0 &
                          (((0x1 as libc::c_int) << 8 as libc::c_int) -
                               1 as libc::c_int) as libc::c_uint) <<
                         8 as libc::c_int) |
                    (((j + 1 as libc::c_int) * 2 as libc::c_int) as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        0 as libc::c_int
            } else if 0 as libc::c_int == 1 as libc::c_int {
                ((((j + 2 as libc::c_int) * 2 as libc::c_int) as u32_0 &
                      (((0x1 as libc::c_int) << 8 as libc::c_int) -
                           1 as libc::c_int) as libc::c_uint) <<
                     16 as libc::c_int |
                     (((j + 1 as libc::c_int) * 2 as libc::c_int) as u32_0 &
                          (((0x1 as libc::c_int) << 8 as libc::c_int) -
                               1 as libc::c_int) as libc::c_uint) <<
                         8 as libc::c_int) |
                    ((j * 2 as libc::c_int) as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        0 as libc::c_int
            } else if 0 as libc::c_int == 2 as libc::c_int {
                ((((j + 3 as libc::c_int) * 2 as libc::c_int) as u32_0 &
                      (((0x1 as libc::c_int) << 8 as libc::c_int) -
                           1 as libc::c_int) as libc::c_uint) <<
                     16 as libc::c_int |
                     ((j * 2 as libc::c_int) as u32_0 &
                          (((0x1 as libc::c_int) << 8 as libc::c_int) -
                               1 as libc::c_int) as libc::c_uint) <<
                         8 as libc::c_int) |
                    (((j + 2 as libc::c_int) * 2 as libc::c_int) as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        0 as libc::c_int
            } else {
                ((((j + 1 as libc::c_int) * 2 as libc::c_int) as u32_0 &
                      (((0x1 as libc::c_int) << 8 as libc::c_int) -
                           1 as libc::c_int) as libc::c_uint) <<
                     16 as libc::c_int |
                     (((j + 2 as libc::c_int) * 2 as libc::c_int) as u32_0 &
                          (((0x1 as libc::c_int) << 8 as libc::c_int) -
                               1 as libc::c_int) as libc::c_uint) <<
                         8 as libc::c_int) |
                    (((j + 3 as libc::c_int) * 2 as libc::c_int) as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        0 as libc::c_int
            };
        j += 4 as libc::c_int;
        i += 1
    }
    return gfx;
}
#[no_mangle]
pub unsafe extern "C" fn KaleidoScope_DrawPages(mut globalCtx:
                                                    *mut GlobalContext,
                                                mut gfxCtx:
                                                    *mut GraphicsContext) {
    static mut D_8082ACF4: [[s16; 3]; 12] =
        [[0 as libc::c_int as s16, 0 as libc::c_int as s16,
          0 as libc::c_int as s16],
         [0 as libc::c_int as s16, 0 as libc::c_int as s16,
          0 as libc::c_int as s16],
         [0 as libc::c_int as s16, 0 as libc::c_int as s16,
          0 as libc::c_int as s16],
         [0 as libc::c_int as s16, 0 as libc::c_int as s16,
          0 as libc::c_int as s16],
         [255 as libc::c_int as s16, 255 as libc::c_int as s16,
          0 as libc::c_int as s16],
         [0 as libc::c_int as s16, 0 as libc::c_int as s16,
          0 as libc::c_int as s16],
         [0 as libc::c_int as s16, 0 as libc::c_int as s16,
          0 as libc::c_int as s16],
         [255 as libc::c_int as s16, 255 as libc::c_int as s16,
          0 as libc::c_int as s16],
         [0 as libc::c_int as s16, 255 as libc::c_int as s16,
          50 as libc::c_int as s16],
         [0 as libc::c_int as s16, 0 as libc::c_int as s16,
          0 as libc::c_int as s16],
         [0 as libc::c_int as s16, 0 as libc::c_int as s16,
          0 as libc::c_int as s16],
         [0 as libc::c_int as s16, 255 as libc::c_int as s16,
          50 as libc::c_int as s16]];
    static mut D_8082AD3C: s16 = 20 as libc::c_int as s16;
    static mut D_8082AD40: s16 = 0 as libc::c_int as s16;
    static mut D_8082AD44: s16 = 0 as libc::c_int as s16;
    static mut D_8082AD48: s16 = 0 as libc::c_int as s16;
    static mut D_8082AD4C: s16 = 0 as libc::c_int as s16;
    static mut D_8082AD50: s16 = 0 as libc::c_int as s16;
    let mut pauseCtx: *mut PauseContext = &mut (*globalCtx).pauseCtx;
    let mut stepR: s16 = 0;
    let mut stepG: s16 = 0;
    let mut stepB: s16 = 0;
    let mut __gfxCtx: *mut GraphicsContext = 0 as *mut GraphicsContext;
    let mut dispRefs: [*mut Gfx; 4] = [0 as *mut Gfx; 4];
    __gfxCtx = gfxCtx;
    Graph_OpenDisps(dispRefs.as_mut_ptr(), gfxCtx,
                    b"../z_kaleido_scope_PAL.c\x00" as *const u8 as
                        *const libc::c_char, 1100 as libc::c_int);
    if ((*pauseCtx).state as libc::c_int) < 8 as libc::c_int ||
           (*pauseCtx).state as libc::c_int > 0x11 as libc::c_int {
        if (*pauseCtx).state as libc::c_int != 7 as libc::c_int {
            stepR =
                ((if D_8082AB8C as libc::c_int -
                         D_8082ACF4[((*pauseCtx).cursorColorSet as libc::c_int
                                         + D_8082AD40 as libc::c_int) as
                                        usize][0 as libc::c_int as usize] as
                             libc::c_int >= 0 as libc::c_int {
                      (D_8082AB8C as libc::c_int) -
                          D_8082ACF4[((*pauseCtx).cursorColorSet as
                                          libc::c_int +
                                          D_8082AD40 as libc::c_int) as
                                         usize][0 as libc::c_int as usize] as
                              libc::c_int
                  } else {
                      -(D_8082AB8C as libc::c_int -
                            D_8082ACF4[((*pauseCtx).cursorColorSet as
                                            libc::c_int +
                                            D_8082AD40 as libc::c_int) as
                                           usize][0 as libc::c_int as usize]
                                as libc::c_int)
                  }) / D_8082AD3C as libc::c_int) as s16;
            stepG =
                ((if D_8082AB90 as libc::c_int -
                         D_8082ACF4[((*pauseCtx).cursorColorSet as libc::c_int
                                         + D_8082AD40 as libc::c_int) as
                                        usize][1 as libc::c_int as usize] as
                             libc::c_int >= 0 as libc::c_int {
                      (D_8082AB90 as libc::c_int) -
                          D_8082ACF4[((*pauseCtx).cursorColorSet as
                                          libc::c_int +
                                          D_8082AD40 as libc::c_int) as
                                         usize][1 as libc::c_int as usize] as
                              libc::c_int
                  } else {
                      -(D_8082AB90 as libc::c_int -
                            D_8082ACF4[((*pauseCtx).cursorColorSet as
                                            libc::c_int +
                                            D_8082AD40 as libc::c_int) as
                                           usize][1 as libc::c_int as usize]
                                as libc::c_int)
                  }) / D_8082AD3C as libc::c_int) as s16;
            stepB =
                ((if D_8082AB94 as libc::c_int -
                         D_8082ACF4[((*pauseCtx).cursorColorSet as libc::c_int
                                         + D_8082AD40 as libc::c_int) as
                                        usize][2 as libc::c_int as usize] as
                             libc::c_int >= 0 as libc::c_int {
                      (D_8082AB94 as libc::c_int) -
                          D_8082ACF4[((*pauseCtx).cursorColorSet as
                                          libc::c_int +
                                          D_8082AD40 as libc::c_int) as
                                         usize][2 as libc::c_int as usize] as
                              libc::c_int
                  } else {
                      -(D_8082AB94 as libc::c_int -
                            D_8082ACF4[((*pauseCtx).cursorColorSet as
                                            libc::c_int +
                                            D_8082AD40 as libc::c_int) as
                                           usize][2 as libc::c_int as usize]
                                as libc::c_int)
                  }) / D_8082AD3C as libc::c_int) as s16;
            if D_8082AB8C as libc::c_int >=
                   D_8082ACF4[((*pauseCtx).cursorColorSet as libc::c_int +
                                   D_8082AD40 as libc::c_int) as
                                  usize][0 as libc::c_int as usize] as
                       libc::c_int {
                D_8082AB8C =
                    (D_8082AB8C as libc::c_int - stepR as libc::c_int) as s16
            } else {
                D_8082AB8C =
                    (D_8082AB8C as libc::c_int + stepR as libc::c_int) as s16
            }
            if D_8082AB90 as libc::c_int >=
                   D_8082ACF4[((*pauseCtx).cursorColorSet as libc::c_int +
                                   D_8082AD40 as libc::c_int) as
                                  usize][1 as libc::c_int as usize] as
                       libc::c_int {
                D_8082AB90 =
                    (D_8082AB90 as libc::c_int - stepG as libc::c_int) as s16
            } else {
                D_8082AB90 =
                    (D_8082AB90 as libc::c_int + stepG as libc::c_int) as s16
            }
            if D_8082AB94 as libc::c_int >=
                   D_8082ACF4[((*pauseCtx).cursorColorSet as libc::c_int +
                                   D_8082AD40 as libc::c_int) as
                                  usize][2 as libc::c_int as usize] as
                       libc::c_int {
                D_8082AB94 =
                    (D_8082AB94 as libc::c_int - stepB as libc::c_int) as s16
            } else {
                D_8082AB94 =
                    (D_8082AB94 as libc::c_int + stepB as libc::c_int) as s16
            }
            D_8082AD3C -= 1;
            if D_8082AD3C as libc::c_int == 0 as libc::c_int {
                D_8082AB8C =
                    D_8082ACF4[((*pauseCtx).cursorColorSet as libc::c_int +
                                    D_8082AD40 as libc::c_int) as
                                   usize][0 as libc::c_int as usize];
                D_8082AB90 =
                    D_8082ACF4[((*pauseCtx).cursorColorSet as libc::c_int +
                                    D_8082AD40 as libc::c_int) as
                                   usize][1 as libc::c_int as usize];
                D_8082AB94 =
                    D_8082ACF4[((*pauseCtx).cursorColorSet as libc::c_int +
                                    D_8082AD40 as libc::c_int) as
                                   usize][2 as libc::c_int as usize];
                D_8082AD3C =
                    (*gGameInfo).data[(10 as libc::c_int * 6 as libc::c_int *
                                           16 as libc::c_int +
                                           28 as libc::c_int +
                                           D_8082AD40 as libc::c_int) as
                                          usize];
                D_8082AD40 += 1;
                if D_8082AD40 as libc::c_int >= 4 as libc::c_int {
                    D_8082AD40 = 0 as libc::c_int as s16
                }
            }
            if ((*pauseCtx).stickRelX as libc::c_int) < -(30 as libc::c_int) {
                if D_8082AD4C as libc::c_int == -(1 as libc::c_int) {
                    D_8082AD44 -= 1;
                    if (D_8082AD44 as libc::c_int) < 0 as libc::c_int {
                        D_8082AD44 =
                            (*gGameInfo).data[(14 as libc::c_int *
                                                   6 as libc::c_int *
                                                   16 as libc::c_int +
                                                   6 as libc::c_int) as usize]
                    } else { (*pauseCtx).stickRelX = 0 as libc::c_int as s16 }
                } else {
                    D_8082AD44 =
                        (*gGameInfo).data[(14 as libc::c_int *
                                               6 as libc::c_int *
                                               16 as libc::c_int +
                                               8 as libc::c_int) as usize];
                    D_8082AD4C = -(1 as libc::c_int) as s16
                }
            } else if (*pauseCtx).stickRelX as libc::c_int > 30 as libc::c_int
             {
                if D_8082AD4C as libc::c_int == 1 as libc::c_int {
                    D_8082AD44 -= 1;
                    if (D_8082AD44 as libc::c_int) < 0 as libc::c_int {
                        D_8082AD44 =
                            (*gGameInfo).data[(14 as libc::c_int *
                                                   6 as libc::c_int *
                                                   16 as libc::c_int +
                                                   6 as libc::c_int) as usize]
                    } else { (*pauseCtx).stickRelX = 0 as libc::c_int as s16 }
                } else {
                    D_8082AD44 =
                        (*gGameInfo).data[(14 as libc::c_int *
                                               6 as libc::c_int *
                                               16 as libc::c_int +
                                               8 as libc::c_int) as usize];
                    D_8082AD4C = 1 as libc::c_int as s16
                }
            } else { D_8082AD4C = 0 as libc::c_int as s16 }
            if ((*pauseCtx).stickRelY as libc::c_int) < -(30 as libc::c_int) {
                if D_8082AD50 as libc::c_int == -(1 as libc::c_int) {
                    D_8082AD48 -= 1;
                    if (D_8082AD48 as libc::c_int) < 0 as libc::c_int {
                        D_8082AD48 =
                            (*gGameInfo).data[(14 as libc::c_int *
                                                   6 as libc::c_int *
                                                   16 as libc::c_int +
                                                   6 as libc::c_int) as usize]
                    } else { (*pauseCtx).stickRelY = 0 as libc::c_int as s16 }
                } else {
                    D_8082AD48 =
                        (*gGameInfo).data[(14 as libc::c_int *
                                               6 as libc::c_int *
                                               16 as libc::c_int +
                                               8 as libc::c_int) as usize];
                    D_8082AD50 = -(1 as libc::c_int) as s16
                }
            } else if (*pauseCtx).stickRelY as libc::c_int > 30 as libc::c_int
             {
                if D_8082AD50 as libc::c_int == 1 as libc::c_int {
                    D_8082AD48 -= 1;
                    if (D_8082AD48 as libc::c_int) < 0 as libc::c_int {
                        D_8082AD48 =
                            (*gGameInfo).data[(14 as libc::c_int *
                                                   6 as libc::c_int *
                                                   16 as libc::c_int +
                                                   6 as libc::c_int) as usize]
                    } else { (*pauseCtx).stickRelY = 0 as libc::c_int as s16 }
                } else {
                    D_8082AD48 =
                        (*gGameInfo).data[(14 as libc::c_int *
                                               6 as libc::c_int *
                                               16 as libc::c_int +
                                               8 as libc::c_int) as usize];
                    D_8082AD50 = 1 as libc::c_int as s16
                }
            } else { D_8082AD50 = 0 as libc::c_int as s16 }
        }
        if (*pauseCtx).pageIndex != 0 {
            // pageIndex != PAUSE_ITEM
            let fresh61 = (*__gfxCtx).polyOpa.p;
            (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
            let mut _g: *mut Gfx = fresh61;
            (*_g).words.w0 =
                (0xe7 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    24 as libc::c_int;
            (*_g).words.w1 = 0 as libc::c_int as libc::c_uint;
            let fresh62 = (*__gfxCtx).polyOpa.p;
            (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
            let mut _g_0: *mut Gfx = fresh62;
            (*_g_0).words.w0 =
                (0xfc as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    24 as libc::c_int |
                    (((1 as libc::c_int as u32_0 &
                           (((0x1 as libc::c_int) << 4 as libc::c_int) -
                                1 as libc::c_int) as libc::c_uint) <<
                          20 as libc::c_int |
                          (4 as libc::c_int as u32_0 &
                               (((0x1 as libc::c_int) << 5 as libc::c_int) -
                                    1 as libc::c_int) as libc::c_uint) <<
                              15 as libc::c_int |
                          (1 as libc::c_int as u32_0 &
                               (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                    1 as libc::c_int) as libc::c_uint) <<
                              12 as libc::c_int |
                          (4 as libc::c_int as u32_0 &
                               (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                    1 as libc::c_int) as libc::c_uint) <<
                              9 as libc::c_int |
                          ((1 as libc::c_int as u32_0 &
                                (((0x1 as libc::c_int) << 4 as libc::c_int) -
                                     1 as libc::c_int) as libc::c_uint) <<
                               5 as libc::c_int |
                               (4 as libc::c_int as u32_0 &
                                    (((0x1 as libc::c_int) <<
                                          5 as libc::c_int) -
                                         1 as libc::c_int) as libc::c_uint) <<
                                   0 as libc::c_int)) &
                         (((0x1 as libc::c_int) << 24 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        0 as libc::c_int;
            (*_g_0).words.w1 =
                (31 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 4 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    28 as libc::c_int |
                    (31 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 3 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        15 as libc::c_int |
                    (7 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 3 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        12 as libc::c_int |
                    (7 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 3 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        9 as libc::c_int |
                    ((31 as libc::c_int as u32_0 &
                          (((0x1 as libc::c_int) << 4 as libc::c_int) -
                               1 as libc::c_int) as libc::c_uint) <<
                         24 as libc::c_int |
                         (1 as libc::c_int as u32_0 &
                              (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                   1 as libc::c_int) as libc::c_uint) <<
                             21 as libc::c_int |
                         (4 as libc::c_int as u32_0 &
                              (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                   1 as libc::c_int) as libc::c_uint) <<
                             18 as libc::c_int |
                         (31 as libc::c_int as u32_0 &
                              (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                   1 as libc::c_int) as libc::c_uint) <<
                             6 as libc::c_int |
                         (7 as libc::c_int as u32_0 &
                              (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                   1 as libc::c_int) as libc::c_uint) <<
                             3 as libc::c_int |
                         (7 as libc::c_int as u32_0 &
                              (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                   1 as libc::c_int) as libc::c_uint) <<
                             0 as libc::c_int);
            Matrix_Translate(0.0f32,
                             (*gGameInfo).data[(18 as libc::c_int *
                                                    6 as libc::c_int *
                                                    16 as libc::c_int +
                                                    2 as libc::c_int) as
                                                   usize] as f32_0 / 100.0f32,
                             -((*gGameInfo).data[(18 as libc::c_int *
                                                      6 as libc::c_int *
                                                      16 as libc::c_int +
                                                      3 as libc::c_int) as
                                                     usize] as f32_0) /
                                 100.0f32,
                             MTXMODE_NEW as libc::c_int as u8_0);
            Matrix_Scale(0.78f32, 0.78f32, 0.78f32,
                         MTXMODE_APPLY as libc::c_int as u8_0);
            Matrix_RotateX(-(*pauseCtx).unk_1F4 / 100.0f32,
                           MTXMODE_APPLY as libc::c_int as u8_0);
            let fresh63 = (*__gfxCtx).polyOpa.p;
            (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
            let mut _g_1: *mut Gfx = fresh63;
            (*_g_1).words.w0 =
                (0xda as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    24 as libc::c_int |
                    ((::std::mem::size_of::<Mtx>() as
                          libc::c_ulong).wrapping_sub(1 as libc::c_int as
                                                          libc::c_uint).wrapping_div(8
                                                                                         as
                                                                                         libc::c_int
                                                                                         as
                                                                                         libc::c_uint)
                         &
                         (((0x1 as libc::c_int) << 5 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        19 as libc::c_int |
                    ((0 as libc::c_int / 8 as libc::c_int) as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        8 as libc::c_int |
                    (((0 as libc::c_int | 0x2 as libc::c_int |
                           0 as libc::c_int) ^ 0x1 as libc::c_int) as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        0 as libc::c_int;
            (*_g_1).words.w1 =
                Matrix_NewMtx(gfxCtx,
                              b"../z_kaleido_scope_PAL.c\x00" as *const u8 as
                                  *const libc::c_char as *mut libc::c_char,
                              1173 as libc::c_int) as libc::c_uint;
            (*__gfxCtx).polyOpa.p =
                KaleidoScope_DrawPageSections((*__gfxCtx).polyOpa.p,
                                              (*pauseCtx).itemPageVtx,
                                              sSelectItemTexs[gSaveContext.language
                                                                  as usize] as
                                                  *mut *mut libc::c_void);
            KaleidoScope_DrawItemSelect(globalCtx);
        }
        if (*pauseCtx).pageIndex as libc::c_int != PAUSE_EQUIP as libc::c_int
           {
            let fresh64 = (*__gfxCtx).polyOpa.p;
            (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
            let mut _g_2: *mut Gfx = fresh64;
            (*_g_2).words.w0 =
                (0xe7 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    24 as libc::c_int;
            (*_g_2).words.w1 = 0 as libc::c_int as libc::c_uint;
            let fresh65 = (*__gfxCtx).polyOpa.p;
            (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
            let mut _g_3: *mut Gfx = fresh65;
            (*_g_3).words.w0 =
                (0xfc as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    24 as libc::c_int |
                    (((1 as libc::c_int as u32_0 &
                           (((0x1 as libc::c_int) << 4 as libc::c_int) -
                                1 as libc::c_int) as libc::c_uint) <<
                          20 as libc::c_int |
                          (4 as libc::c_int as u32_0 &
                               (((0x1 as libc::c_int) << 5 as libc::c_int) -
                                    1 as libc::c_int) as libc::c_uint) <<
                              15 as libc::c_int |
                          (1 as libc::c_int as u32_0 &
                               (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                    1 as libc::c_int) as libc::c_uint) <<
                              12 as libc::c_int |
                          (4 as libc::c_int as u32_0 &
                               (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                    1 as libc::c_int) as libc::c_uint) <<
                              9 as libc::c_int |
                          ((1 as libc::c_int as u32_0 &
                                (((0x1 as libc::c_int) << 4 as libc::c_int) -
                                     1 as libc::c_int) as libc::c_uint) <<
                               5 as libc::c_int |
                               (4 as libc::c_int as u32_0 &
                                    (((0x1 as libc::c_int) <<
                                          5 as libc::c_int) -
                                         1 as libc::c_int) as libc::c_uint) <<
                                   0 as libc::c_int)) &
                         (((0x1 as libc::c_int) << 24 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        0 as libc::c_int;
            (*_g_3).words.w1 =
                (31 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 4 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    28 as libc::c_int |
                    (31 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 3 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        15 as libc::c_int |
                    (7 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 3 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        12 as libc::c_int |
                    (7 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 3 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        9 as libc::c_int |
                    ((31 as libc::c_int as u32_0 &
                          (((0x1 as libc::c_int) << 4 as libc::c_int) -
                               1 as libc::c_int) as libc::c_uint) <<
                         24 as libc::c_int |
                         (1 as libc::c_int as u32_0 &
                              (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                   1 as libc::c_int) as libc::c_uint) <<
                             21 as libc::c_int |
                         (4 as libc::c_int as u32_0 &
                              (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                   1 as libc::c_int) as libc::c_uint) <<
                             18 as libc::c_int |
                         (31 as libc::c_int as u32_0 &
                              (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                   1 as libc::c_int) as libc::c_uint) <<
                             6 as libc::c_int |
                         (7 as libc::c_int as u32_0 &
                              (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                   1 as libc::c_int) as libc::c_uint) <<
                             3 as libc::c_int |
                         (7 as libc::c_int as u32_0 &
                              (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                   1 as libc::c_int) as libc::c_uint) <<
                             0 as libc::c_int);
            Matrix_Translate(-((*gGameInfo).data[(18 as libc::c_int *
                                                      6 as libc::c_int *
                                                      16 as libc::c_int +
                                                      3 as libc::c_int) as
                                                     usize] as f32_0) /
                                 100.0f32,
                             (*gGameInfo).data[(18 as libc::c_int *
                                                    6 as libc::c_int *
                                                    16 as libc::c_int +
                                                    2 as libc::c_int) as
                                                   usize] as f32_0 / 100.0f32,
                             0.0f32, MTXMODE_NEW as libc::c_int as u8_0);
            Matrix_Scale(0.78f32, 0.78f32, 0.78f32,
                         MTXMODE_APPLY as libc::c_int as u8_0);
            Matrix_RotateZ((*pauseCtx).unk_1F8 / 100.0f32,
                           MTXMODE_APPLY as libc::c_int as u8_0);
            Matrix_RotateY(1.57f32, MTXMODE_APPLY as libc::c_int as u8_0);
            let fresh66 = (*__gfxCtx).polyOpa.p;
            (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
            let mut _g_4: *mut Gfx = fresh66;
            (*_g_4).words.w0 =
                (0xda as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    24 as libc::c_int |
                    ((::std::mem::size_of::<Mtx>() as
                          libc::c_ulong).wrapping_sub(1 as libc::c_int as
                                                          libc::c_uint).wrapping_div(8
                                                                                         as
                                                                                         libc::c_int
                                                                                         as
                                                                                         libc::c_uint)
                         &
                         (((0x1 as libc::c_int) << 5 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        19 as libc::c_int |
                    ((0 as libc::c_int / 8 as libc::c_int) as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        8 as libc::c_int |
                    (((0 as libc::c_int | 0x2 as libc::c_int |
                           0 as libc::c_int) ^ 0x1 as libc::c_int) as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        0 as libc::c_int;
            (*_g_4).words.w1 =
                Matrix_NewMtx(gfxCtx,
                              b"../z_kaleido_scope_PAL.c\x00" as *const u8 as
                                  *const libc::c_char as *mut libc::c_char,
                              1196 as libc::c_int) as libc::c_uint;
            (*__gfxCtx).polyOpa.p =
                KaleidoScope_DrawPageSections((*__gfxCtx).polyOpa.p,
                                              (*pauseCtx).equipPageVtx,
                                              sEquipmentTexs[gSaveContext.language
                                                                 as usize] as
                                                  *mut *mut libc::c_void);
            KaleidoScope_DrawEquipment(globalCtx);
        }
        if (*pauseCtx).pageIndex as libc::c_int != PAUSE_QUEST as libc::c_int
           {
            let fresh67 = (*__gfxCtx).polyOpa.p;
            (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
            let mut _g_5: *mut Gfx = fresh67;
            (*_g_5).words.w0 =
                (0xe7 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    24 as libc::c_int;
            (*_g_5).words.w1 = 0 as libc::c_int as libc::c_uint;
            let fresh68 = (*__gfxCtx).polyOpa.p;
            (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
            let mut _g_6: *mut Gfx = fresh68;
            (*_g_6).words.w0 =
                (0xe3 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    24 as libc::c_int |
                    ((32 as libc::c_int - 12 as libc::c_int -
                          2 as libc::c_int) as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        8 as libc::c_int |
                    ((2 as libc::c_int - 1 as libc::c_int) as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        0 as libc::c_int;
            (*_g_6).words.w1 =
                ((2 as libc::c_int) << 12 as libc::c_int) as libc::c_uint;
            let fresh69 = (*__gfxCtx).polyOpa.p;
            (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
            let mut _g_7: *mut Gfx = fresh69;
            (*_g_7).words.w0 =
                (0xfc as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    24 as libc::c_int |
                    (((1 as libc::c_int as u32_0 &
                           (((0x1 as libc::c_int) << 4 as libc::c_int) -
                                1 as libc::c_int) as libc::c_uint) <<
                          20 as libc::c_int |
                          (4 as libc::c_int as u32_0 &
                               (((0x1 as libc::c_int) << 5 as libc::c_int) -
                                    1 as libc::c_int) as libc::c_uint) <<
                              15 as libc::c_int |
                          (1 as libc::c_int as u32_0 &
                               (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                    1 as libc::c_int) as libc::c_uint) <<
                              12 as libc::c_int |
                          (4 as libc::c_int as u32_0 &
                               (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                    1 as libc::c_int) as libc::c_uint) <<
                              9 as libc::c_int |
                          ((1 as libc::c_int as u32_0 &
                                (((0x1 as libc::c_int) << 4 as libc::c_int) -
                                     1 as libc::c_int) as libc::c_uint) <<
                               5 as libc::c_int |
                               (4 as libc::c_int as u32_0 &
                                    (((0x1 as libc::c_int) <<
                                          5 as libc::c_int) -
                                         1 as libc::c_int) as libc::c_uint) <<
                                   0 as libc::c_int)) &
                         (((0x1 as libc::c_int) << 24 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        0 as libc::c_int;
            (*_g_7).words.w1 =
                (31 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 4 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    28 as libc::c_int |
                    (31 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 3 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        15 as libc::c_int |
                    (7 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 3 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        12 as libc::c_int |
                    (7 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 3 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        9 as libc::c_int |
                    ((31 as libc::c_int as u32_0 &
                          (((0x1 as libc::c_int) << 4 as libc::c_int) -
                               1 as libc::c_int) as libc::c_uint) <<
                         24 as libc::c_int |
                         (1 as libc::c_int as u32_0 &
                              (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                   1 as libc::c_int) as libc::c_uint) <<
                             21 as libc::c_int |
                         (4 as libc::c_int as u32_0 &
                              (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                   1 as libc::c_int) as libc::c_uint) <<
                             18 as libc::c_int |
                         (31 as libc::c_int as u32_0 &
                              (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                   1 as libc::c_int) as libc::c_uint) <<
                             6 as libc::c_int |
                         (7 as libc::c_int as u32_0 &
                              (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                   1 as libc::c_int) as libc::c_uint) <<
                             3 as libc::c_int |
                         (7 as libc::c_int as u32_0 &
                              (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                   1 as libc::c_int) as libc::c_uint) <<
                             0 as libc::c_int);
            Matrix_Translate(0.0f32,
                             (*gGameInfo).data[(18 as libc::c_int *
                                                    6 as libc::c_int *
                                                    16 as libc::c_int +
                                                    2 as libc::c_int) as
                                                   usize] as f32_0 / 100.0f32,
                             (*gGameInfo).data[(18 as libc::c_int *
                                                    6 as libc::c_int *
                                                    16 as libc::c_int +
                                                    3 as libc::c_int) as
                                                   usize] as f32_0 / 100.0f32,
                             MTXMODE_NEW as libc::c_int as u8_0);
            Matrix_Scale(0.78f32, 0.78f32, 0.78f32,
                         MTXMODE_APPLY as libc::c_int as u8_0);
            Matrix_RotateX((*pauseCtx).unk_200 / 100.0f32,
                           MTXMODE_APPLY as libc::c_int as u8_0);
            Matrix_RotateY(3.14f32, MTXMODE_APPLY as libc::c_int as u8_0);
            let fresh70 = (*__gfxCtx).polyOpa.p;
            (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
            let mut _g_8: *mut Gfx = fresh70;
            (*_g_8).words.w0 =
                (0xda as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    24 as libc::c_int |
                    ((::std::mem::size_of::<Mtx>() as
                          libc::c_ulong).wrapping_sub(1 as libc::c_int as
                                                          libc::c_uint).wrapping_div(8
                                                                                         as
                                                                                         libc::c_int
                                                                                         as
                                                                                         libc::c_uint)
                         &
                         (((0x1 as libc::c_int) << 5 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        19 as libc::c_int |
                    ((0 as libc::c_int / 8 as libc::c_int) as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        8 as libc::c_int |
                    (((0 as libc::c_int | 0x2 as libc::c_int |
                           0 as libc::c_int) ^ 0x1 as libc::c_int) as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        0 as libc::c_int;
            (*_g_8).words.w1 =
                Matrix_NewMtx(gfxCtx,
                              b"../z_kaleido_scope_PAL.c\x00" as *const u8 as
                                  *const libc::c_char as *mut libc::c_char,
                              1220 as libc::c_int) as libc::c_uint;
            (*__gfxCtx).polyOpa.p =
                KaleidoScope_DrawPageSections((*__gfxCtx).polyOpa.p,
                                              (*pauseCtx).questPageVtx,
                                              sQuestStatusTexs[gSaveContext.language
                                                                   as usize]
                                                  as *mut *mut libc::c_void);
            KaleidoScope_DrawQuestStatus(globalCtx, gfxCtx);
        }
        if (*pauseCtx).pageIndex as libc::c_int != PAUSE_MAP as libc::c_int {
            let fresh71 = (*__gfxCtx).polyOpa.p;
            (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
            let mut _g_9: *mut Gfx = fresh71;
            (*_g_9).words.w0 =
                (0xe7 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    24 as libc::c_int;
            (*_g_9).words.w1 = 0 as libc::c_int as libc::c_uint;
            let fresh72 = (*__gfxCtx).polyOpa.p;
            (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
            let mut _g_10: *mut Gfx = fresh72;
            (*_g_10).words.w0 =
                (0xfc as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    24 as libc::c_int |
                    (((1 as libc::c_int as u32_0 &
                           (((0x1 as libc::c_int) << 4 as libc::c_int) -
                                1 as libc::c_int) as libc::c_uint) <<
                          20 as libc::c_int |
                          (4 as libc::c_int as u32_0 &
                               (((0x1 as libc::c_int) << 5 as libc::c_int) -
                                    1 as libc::c_int) as libc::c_uint) <<
                              15 as libc::c_int |
                          (1 as libc::c_int as u32_0 &
                               (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                    1 as libc::c_int) as libc::c_uint) <<
                              12 as libc::c_int |
                          (4 as libc::c_int as u32_0 &
                               (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                    1 as libc::c_int) as libc::c_uint) <<
                              9 as libc::c_int |
                          ((1 as libc::c_int as u32_0 &
                                (((0x1 as libc::c_int) << 4 as libc::c_int) -
                                     1 as libc::c_int) as libc::c_uint) <<
                               5 as libc::c_int |
                               (4 as libc::c_int as u32_0 &
                                    (((0x1 as libc::c_int) <<
                                          5 as libc::c_int) -
                                         1 as libc::c_int) as libc::c_uint) <<
                                   0 as libc::c_int)) &
                         (((0x1 as libc::c_int) << 24 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        0 as libc::c_int;
            (*_g_10).words.w1 =
                (31 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 4 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    28 as libc::c_int |
                    (31 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 3 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        15 as libc::c_int |
                    (7 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 3 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        12 as libc::c_int |
                    (7 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 3 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        9 as libc::c_int |
                    ((31 as libc::c_int as u32_0 &
                          (((0x1 as libc::c_int) << 4 as libc::c_int) -
                               1 as libc::c_int) as libc::c_uint) <<
                         24 as libc::c_int |
                         (1 as libc::c_int as u32_0 &
                              (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                   1 as libc::c_int) as libc::c_uint) <<
                             21 as libc::c_int |
                         (4 as libc::c_int as u32_0 &
                              (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                   1 as libc::c_int) as libc::c_uint) <<
                             18 as libc::c_int |
                         (31 as libc::c_int as u32_0 &
                              (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                   1 as libc::c_int) as libc::c_uint) <<
                             6 as libc::c_int |
                         (7 as libc::c_int as u32_0 &
                              (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                   1 as libc::c_int) as libc::c_uint) <<
                             3 as libc::c_int |
                         (7 as libc::c_int as u32_0 &
                              (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                   1 as libc::c_int) as libc::c_uint) <<
                             0 as libc::c_int);
            Matrix_Translate((*gGameInfo).data[(18 as libc::c_int *
                                                    6 as libc::c_int *
                                                    16 as libc::c_int +
                                                    3 as libc::c_int) as
                                                   usize] as f32_0 / 100.0f32,
                             (*gGameInfo).data[(18 as libc::c_int *
                                                    6 as libc::c_int *
                                                    16 as libc::c_int +
                                                    2 as libc::c_int) as
                                                   usize] as f32_0 / 100.0f32,
                             0.0f32, MTXMODE_NEW as libc::c_int as u8_0);
            Matrix_Scale(0.78f32, 0.78f32, 0.78f32,
                         MTXMODE_APPLY as libc::c_int as u8_0);
            Matrix_RotateZ(-(*pauseCtx).unk_1FC / 100.0f32,
                           MTXMODE_APPLY as libc::c_int as u8_0);
            Matrix_RotateY(-1.57f32, MTXMODE_APPLY as libc::c_int as u8_0);
            let fresh73 = (*__gfxCtx).polyOpa.p;
            (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
            let mut _g_11: *mut Gfx = fresh73;
            (*_g_11).words.w0 =
                (0xda as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    24 as libc::c_int |
                    ((::std::mem::size_of::<Mtx>() as
                          libc::c_ulong).wrapping_sub(1 as libc::c_int as
                                                          libc::c_uint).wrapping_div(8
                                                                                         as
                                                                                         libc::c_int
                                                                                         as
                                                                                         libc::c_uint)
                         &
                         (((0x1 as libc::c_int) << 5 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        19 as libc::c_int |
                    ((0 as libc::c_int / 8 as libc::c_int) as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        8 as libc::c_int |
                    (((0 as libc::c_int | 0x2 as libc::c_int |
                           0 as libc::c_int) ^ 0x1 as libc::c_int) as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        0 as libc::c_int;
            (*_g_11).words.w1 =
                Matrix_NewMtx(gfxCtx,
                              b"../z_kaleido_scope_PAL.c\x00" as *const u8 as
                                  *const libc::c_char as *mut libc::c_char,
                              1243 as libc::c_int) as libc::c_uint;
            (*__gfxCtx).polyOpa.p =
                KaleidoScope_DrawPageSections((*__gfxCtx).polyOpa.p,
                                              (*pauseCtx).mapPageVtx,
                                              sMapTexs[gSaveContext.language
                                                           as usize] as
                                                  *mut *mut libc::c_void);
            if sInDungeonScene != 0 {
                KaleidoScope_DrawDungeonMap(globalCtx, gfxCtx);
                func_800949A8(gfxCtx);
                let fresh74 = (*__gfxCtx).polyOpa.p;
                (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
                let mut _g_12: *mut Gfx = fresh74;
                (*_g_12).words.w0 =
                    (0xfc as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        24 as libc::c_int |
                        (((1 as libc::c_int as u32_0 &
                               (((0x1 as libc::c_int) << 4 as libc::c_int) -
                                    1 as libc::c_int) as libc::c_uint) <<
                              20 as libc::c_int |
                              (3 as libc::c_int as u32_0 &
                                   (((0x1 as libc::c_int) << 5 as libc::c_int)
                                        - 1 as libc::c_int) as libc::c_uint)
                                  << 15 as libc::c_int |
                              (1 as libc::c_int as u32_0 &
                                   (((0x1 as libc::c_int) << 3 as libc::c_int)
                                        - 1 as libc::c_int) as libc::c_uint)
                                  << 12 as libc::c_int |
                              (3 as libc::c_int as u32_0 &
                                   (((0x1 as libc::c_int) << 3 as libc::c_int)
                                        - 1 as libc::c_int) as libc::c_uint)
                                  << 9 as libc::c_int |
                              ((1 as libc::c_int as u32_0 &
                                    (((0x1 as libc::c_int) <<
                                          4 as libc::c_int) -
                                         1 as libc::c_int) as libc::c_uint) <<
                                   5 as libc::c_int |
                                   (3 as libc::c_int as u32_0 &
                                        (((0x1 as libc::c_int) <<
                                              5 as libc::c_int) -
                                             1 as libc::c_int) as
                                            libc::c_uint) <<
                                       0 as libc::c_int)) &
                             (((0x1 as libc::c_int) << 24 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            0 as libc::c_int;
                (*_g_12).words.w1 =
                    (31 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 4 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        28 as libc::c_int |
                        (31 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            15 as libc::c_int |
                        (7 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            12 as libc::c_int |
                        (7 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            9 as libc::c_int |
                        ((31 as libc::c_int as u32_0 &
                              (((0x1 as libc::c_int) << 4 as libc::c_int) -
                                   1 as libc::c_int) as libc::c_uint) <<
                             24 as libc::c_int |
                             (1 as libc::c_int as u32_0 &
                                  (((0x1 as libc::c_int) << 3 as libc::c_int)
                                       - 1 as libc::c_int) as libc::c_uint) <<
                                 21 as libc::c_int |
                             (3 as libc::c_int as u32_0 &
                                  (((0x1 as libc::c_int) << 3 as libc::c_int)
                                       - 1 as libc::c_int) as libc::c_uint) <<
                                 18 as libc::c_int |
                             (31 as libc::c_int as u32_0 &
                                  (((0x1 as libc::c_int) << 3 as libc::c_int)
                                       - 1 as libc::c_int) as libc::c_uint) <<
                                 6 as libc::c_int |
                             (7 as libc::c_int as u32_0 &
                                  (((0x1 as libc::c_int) << 3 as libc::c_int)
                                       - 1 as libc::c_int) as libc::c_uint) <<
                                 3 as libc::c_int |
                             (7 as libc::c_int as u32_0 &
                                  (((0x1 as libc::c_int) << 3 as libc::c_int)
                                       - 1 as libc::c_int) as libc::c_uint) <<
                                 0 as libc::c_int);
                if gSaveContext.inventory.dungeonItems[gSaveContext.mapIndex
                                                           as usize] as
                       libc::c_uint &
                       gBitFlags[DUNGEON_COMPASS as libc::c_int as usize] != 0
                   {
                    PauseMapMark_Draw(globalCtx);
                }
            } else { KaleidoScope_DrawWorldMap(globalCtx, gfxCtx); }
        }
        let fresh75 = (*__gfxCtx).polyOpa.p;
        (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
        let mut _g_13: *mut Gfx = fresh75;
        (*_g_13).words.w0 =
            (0xe7 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int;
        (*_g_13).words.w1 = 0 as libc::c_int as libc::c_uint;
        let fresh76 = (*__gfxCtx).polyOpa.p;
        (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
        let mut _g_14: *mut Gfx = fresh76;
        (*_g_14).words.w0 =
            (0xfc as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int
                |
                (((1 as libc::c_int as u32_0 &
                       (((0x1 as libc::c_int) << 4 as libc::c_int) -
                            1 as libc::c_int) as libc::c_uint) <<
                      20 as libc::c_int |
                      (4 as libc::c_int as u32_0 &
                           (((0x1 as libc::c_int) << 5 as libc::c_int) -
                                1 as libc::c_int) as libc::c_uint) <<
                          15 as libc::c_int |
                      (1 as libc::c_int as u32_0 &
                           (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                1 as libc::c_int) as libc::c_uint) <<
                          12 as libc::c_int |
                      (4 as libc::c_int as u32_0 &
                           (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                1 as libc::c_int) as libc::c_uint) <<
                          9 as libc::c_int |
                      ((1 as libc::c_int as u32_0 &
                            (((0x1 as libc::c_int) << 4 as libc::c_int) -
                                 1 as libc::c_int) as libc::c_uint) <<
                           5 as libc::c_int |
                           (4 as libc::c_int as u32_0 &
                                (((0x1 as libc::c_int) << 5 as libc::c_int) -
                                     1 as libc::c_int) as libc::c_uint) <<
                               0 as libc::c_int)) &
                     (((0x1 as libc::c_int) << 24 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int;
        (*_g_14).words.w1 =
            (31 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 28 as libc::c_int
                |
                (31 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 3 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    15 as libc::c_int |
                (7 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 3 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    12 as libc::c_int |
                (7 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 3 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    9 as libc::c_int |
                ((31 as libc::c_int as u32_0 &
                      (((0x1 as libc::c_int) << 4 as libc::c_int) -
                           1 as libc::c_int) as libc::c_uint) <<
                     24 as libc::c_int |
                     (1 as libc::c_int as u32_0 &
                          (((0x1 as libc::c_int) << 3 as libc::c_int) -
                               1 as libc::c_int) as libc::c_uint) <<
                         21 as libc::c_int |
                     (4 as libc::c_int as u32_0 &
                          (((0x1 as libc::c_int) << 3 as libc::c_int) -
                               1 as libc::c_int) as libc::c_uint) <<
                         18 as libc::c_int |
                     (31 as libc::c_int as u32_0 &
                          (((0x1 as libc::c_int) << 3 as libc::c_int) -
                               1 as libc::c_int) as libc::c_uint) <<
                         6 as libc::c_int |
                     (7 as libc::c_int as u32_0 &
                          (((0x1 as libc::c_int) << 3 as libc::c_int) -
                               1 as libc::c_int) as libc::c_uint) <<
                         3 as libc::c_int |
                     (7 as libc::c_int as u32_0 &
                          (((0x1 as libc::c_int) << 3 as libc::c_int) -
                               1 as libc::c_int) as libc::c_uint) <<
                         0 as libc::c_int);
        match (*pauseCtx).pageIndex as libc::c_int {
            0 => {
                Matrix_Translate(0.0f32,
                                 (*gGameInfo).data[(18 as libc::c_int *
                                                        6 as libc::c_int *
                                                        16 as libc::c_int +
                                                        2 as libc::c_int) as
                                                       usize] as f32_0 /
                                     100.0f32,
                                 -((*gGameInfo).data[(18 as libc::c_int *
                                                          6 as libc::c_int *
                                                          16 as libc::c_int +
                                                          3 as libc::c_int) as
                                                         usize] as f32_0) /
                                     100.0f32,
                                 MTXMODE_NEW as libc::c_int as u8_0);
                Matrix_Scale(0.78f32, 0.78f32, 0.78f32,
                             MTXMODE_APPLY as libc::c_int as u8_0);
                Matrix_RotateX(-(*pauseCtx).unk_1F4 / 100.0f32,
                               MTXMODE_APPLY as libc::c_int as u8_0);
                let fresh77 = (*__gfxCtx).polyOpa.p;
                (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
                let mut _g_15: *mut Gfx = fresh77;
                (*_g_15).words.w0 =
                    (0xda as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        24 as libc::c_int |
                        ((::std::mem::size_of::<Mtx>() as
                              libc::c_ulong).wrapping_sub(1 as libc::c_int as
                                                              libc::c_uint).wrapping_div(8
                                                                                             as
                                                                                             libc::c_int
                                                                                             as
                                                                                             libc::c_uint)
                             &
                             (((0x1 as libc::c_int) << 5 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            19 as libc::c_int |
                        ((0 as libc::c_int / 8 as libc::c_int) as u32_0 &
                             (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            8 as libc::c_int |
                        (((0 as libc::c_int | 0x2 as libc::c_int |
                               0 as libc::c_int) ^ 0x1 as libc::c_int) as
                             u32_0 &
                             (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            0 as libc::c_int;
                (*_g_15).words.w1 =
                    Matrix_NewMtx(gfxCtx,
                                  b"../z_kaleido_scope_PAL.c\x00" as *const u8
                                      as *const libc::c_char as
                                      *mut libc::c_char, 1281 as libc::c_int)
                        as libc::c_uint;
                (*__gfxCtx).polyOpa.p =
                    KaleidoScope_DrawPageSections((*__gfxCtx).polyOpa.p,
                                                  (*pauseCtx).itemPageVtx,
                                                  sSelectItemTexs[gSaveContext.language
                                                                      as
                                                                      usize]
                                                      as
                                                      *mut *mut libc::c_void);
                KaleidoScope_DrawItemSelect(globalCtx);
            }
            1 => {
                Matrix_Translate((*gGameInfo).data[(18 as libc::c_int *
                                                        6 as libc::c_int *
                                                        16 as libc::c_int +
                                                        3 as libc::c_int) as
                                                       usize] as f32_0 /
                                     100.0f32,
                                 (*gGameInfo).data[(18 as libc::c_int *
                                                        6 as libc::c_int *
                                                        16 as libc::c_int +
                                                        2 as libc::c_int) as
                                                       usize] as f32_0 /
                                     100.0f32, 0.0f32,
                                 MTXMODE_NEW as libc::c_int as u8_0);
                Matrix_Scale(0.78f32, 0.78f32, 0.78f32,
                             MTXMODE_APPLY as libc::c_int as u8_0);
                Matrix_RotateZ(-(*pauseCtx).unk_1FC / 100.0f32,
                               MTXMODE_APPLY as libc::c_int as u8_0);
                Matrix_RotateY(-1.57f32,
                               MTXMODE_APPLY as libc::c_int as u8_0);
                let fresh78 = (*__gfxCtx).polyOpa.p;
                (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
                let mut _g_16: *mut Gfx = fresh78;
                (*_g_16).words.w0 =
                    (0xda as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        24 as libc::c_int |
                        ((::std::mem::size_of::<Mtx>() as
                              libc::c_ulong).wrapping_sub(1 as libc::c_int as
                                                              libc::c_uint).wrapping_div(8
                                                                                             as
                                                                                             libc::c_int
                                                                                             as
                                                                                             libc::c_uint)
                             &
                             (((0x1 as libc::c_int) << 5 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            19 as libc::c_int |
                        ((0 as libc::c_int / 8 as libc::c_int) as u32_0 &
                             (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            8 as libc::c_int |
                        (((0 as libc::c_int | 0x2 as libc::c_int |
                               0 as libc::c_int) ^ 0x1 as libc::c_int) as
                             u32_0 &
                             (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            0 as libc::c_int;
                (*_g_16).words.w1 =
                    Matrix_NewMtx(gfxCtx,
                                  b"../z_kaleido_scope_PAL.c\x00" as *const u8
                                      as *const libc::c_char as
                                      *mut libc::c_char, 1303 as libc::c_int)
                        as libc::c_uint;
                (*__gfxCtx).polyOpa.p =
                    KaleidoScope_DrawPageSections((*__gfxCtx).polyOpa.p,
                                                  (*pauseCtx).mapPageVtx,
                                                  sMapTexs[gSaveContext.language
                                                               as usize] as
                                                      *mut *mut libc::c_void);
                if sInDungeonScene != 0 {
                    KaleidoScope_DrawDungeonMap(globalCtx, gfxCtx);
                    func_800949A8(gfxCtx);
                    let fresh79 = (*__gfxCtx).polyOpa.p;
                    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
                    let mut _g_17: *mut Gfx = fresh79;
                    (*_g_17).words.w0 =
                        (0xfc as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            24 as libc::c_int |
                            (((1 as libc::c_int as u32_0 &
                                   (((0x1 as libc::c_int) << 4 as libc::c_int)
                                        - 1 as libc::c_int) as libc::c_uint)
                                  << 20 as libc::c_int |
                                  (3 as libc::c_int as u32_0 &
                                       (((0x1 as libc::c_int) <<
                                             5 as libc::c_int) -
                                            1 as libc::c_int) as libc::c_uint)
                                      << 15 as libc::c_int |
                                  (1 as libc::c_int as u32_0 &
                                       (((0x1 as libc::c_int) <<
                                             3 as libc::c_int) -
                                            1 as libc::c_int) as libc::c_uint)
                                      << 12 as libc::c_int |
                                  (3 as libc::c_int as u32_0 &
                                       (((0x1 as libc::c_int) <<
                                             3 as libc::c_int) -
                                            1 as libc::c_int) as libc::c_uint)
                                      << 9 as libc::c_int |
                                  ((1 as libc::c_int as u32_0 &
                                        (((0x1 as libc::c_int) <<
                                              4 as libc::c_int) -
                                             1 as libc::c_int) as
                                            libc::c_uint) << 5 as libc::c_int
                                       |
                                       (3 as libc::c_int as u32_0 &
                                            (((0x1 as libc::c_int) <<
                                                  5 as libc::c_int) -
                                                 1 as libc::c_int) as
                                                libc::c_uint) <<
                                           0 as libc::c_int)) &
                                 (((0x1 as libc::c_int) << 24 as libc::c_int)
                                      - 1 as libc::c_int) as libc::c_uint) <<
                                0 as libc::c_int;
                    (*_g_17).words.w1 =
                        (31 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 4 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            28 as libc::c_int |
                            (31 as libc::c_int as u32_0 &
                                 (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                      1 as libc::c_int) as libc::c_uint) <<
                                15 as libc::c_int |
                            (7 as libc::c_int as u32_0 &
                                 (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                      1 as libc::c_int) as libc::c_uint) <<
                                12 as libc::c_int |
                            (7 as libc::c_int as u32_0 &
                                 (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                      1 as libc::c_int) as libc::c_uint) <<
                                9 as libc::c_int |
                            ((31 as libc::c_int as u32_0 &
                                  (((0x1 as libc::c_int) << 4 as libc::c_int)
                                       - 1 as libc::c_int) as libc::c_uint) <<
                                 24 as libc::c_int |
                                 (1 as libc::c_int as u32_0 &
                                      (((0x1 as libc::c_int) <<
                                            3 as libc::c_int) -
                                           1 as libc::c_int) as libc::c_uint)
                                     << 21 as libc::c_int |
                                 (3 as libc::c_int as u32_0 &
                                      (((0x1 as libc::c_int) <<
                                            3 as libc::c_int) -
                                           1 as libc::c_int) as libc::c_uint)
                                     << 18 as libc::c_int |
                                 (31 as libc::c_int as u32_0 &
                                      (((0x1 as libc::c_int) <<
                                            3 as libc::c_int) -
                                           1 as libc::c_int) as libc::c_uint)
                                     << 6 as libc::c_int |
                                 (7 as libc::c_int as u32_0 &
                                      (((0x1 as libc::c_int) <<
                                            3 as libc::c_int) -
                                           1 as libc::c_int) as libc::c_uint)
                                     << 3 as libc::c_int |
                                 (7 as libc::c_int as u32_0 &
                                      (((0x1 as libc::c_int) <<
                                            3 as libc::c_int) -
                                           1 as libc::c_int) as libc::c_uint)
                                     << 0 as libc::c_int);
                    if (*pauseCtx).cursorSpecialPos as libc::c_int ==
                           0 as libc::c_int {
                        KaleidoScope_DrawCursor(globalCtx,
                                                PAUSE_MAP as libc::c_int as
                                                    u16_0);
                    }
                    if gSaveContext.inventory.dungeonItems[gSaveContext.mapIndex
                                                               as usize] as
                           libc::c_uint &
                           gBitFlags[DUNGEON_COMPASS as libc::c_int as usize]
                           != 0 {
                        PauseMapMark_Draw(globalCtx);
                    }
                } else { KaleidoScope_DrawWorldMap(globalCtx, gfxCtx); }
            }
            2 => {
                let fresh80 = (*__gfxCtx).polyOpa.p;
                (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
                let mut _g_18: *mut Gfx = fresh80;
                (*_g_18).words.w0 =
                    (0xe3 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        24 as libc::c_int |
                        ((32 as libc::c_int - 12 as libc::c_int -
                              2 as libc::c_int) as u32_0 &
                             (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            8 as libc::c_int |
                        ((2 as libc::c_int - 1 as libc::c_int) as u32_0 &
                             (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            0 as libc::c_int;
                (*_g_18).words.w1 =
                    ((2 as libc::c_int) << 12 as libc::c_int) as libc::c_uint;
                Matrix_Translate(0.0f32,
                                 (*gGameInfo).data[(18 as libc::c_int *
                                                        6 as libc::c_int *
                                                        16 as libc::c_int +
                                                        2 as libc::c_int) as
                                                       usize] as f32_0 /
                                     100.0f32,
                                 (*gGameInfo).data[(18 as libc::c_int *
                                                        6 as libc::c_int *
                                                        16 as libc::c_int +
                                                        3 as libc::c_int) as
                                                       usize] as f32_0 /
                                     100.0f32,
                                 MTXMODE_NEW as libc::c_int as u8_0);
                Matrix_Scale(0.78f32, 0.78f32, 0.78f32,
                             MTXMODE_APPLY as libc::c_int as u8_0);
                Matrix_RotateX((*pauseCtx).unk_200 / 100.0f32,
                               MTXMODE_APPLY as libc::c_int as u8_0);
                Matrix_RotateY(3.14f32, MTXMODE_APPLY as libc::c_int as u8_0);
                let fresh81 = (*__gfxCtx).polyOpa.p;
                (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
                let mut _g_19: *mut Gfx = fresh81;
                (*_g_19).words.w0 =
                    (0xda as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        24 as libc::c_int |
                        ((::std::mem::size_of::<Mtx>() as
                              libc::c_ulong).wrapping_sub(1 as libc::c_int as
                                                              libc::c_uint).wrapping_div(8
                                                                                             as
                                                                                             libc::c_int
                                                                                             as
                                                                                             libc::c_uint)
                             &
                             (((0x1 as libc::c_int) << 5 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            19 as libc::c_int |
                        ((0 as libc::c_int / 8 as libc::c_int) as u32_0 &
                             (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            8 as libc::c_int |
                        (((0 as libc::c_int | 0x2 as libc::c_int |
                               0 as libc::c_int) ^ 0x1 as libc::c_int) as
                             u32_0 &
                             (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            0 as libc::c_int;
                (*_g_19).words.w1 =
                    Matrix_NewMtx(gfxCtx,
                                  b"../z_kaleido_scope_PAL.c\x00" as *const u8
                                      as *const libc::c_char as
                                      *mut libc::c_char, 1343 as libc::c_int)
                        as libc::c_uint;
                (*__gfxCtx).polyOpa.p =
                    KaleidoScope_DrawPageSections((*__gfxCtx).polyOpa.p,
                                                  (*pauseCtx).questPageVtx,
                                                  sQuestStatusTexs[gSaveContext.language
                                                                       as
                                                                       usize]
                                                      as
                                                      *mut *mut libc::c_void);
                KaleidoScope_DrawQuestStatus(globalCtx, gfxCtx);
                if (*pauseCtx).cursorSpecialPos as libc::c_int ==
                       0 as libc::c_int {
                    KaleidoScope_DrawCursor(globalCtx,
                                            PAUSE_QUEST as libc::c_int as
                                                u16_0);
                }
            }
            3 => {
                Matrix_Translate(-((*gGameInfo).data[(18 as libc::c_int *
                                                          6 as libc::c_int *
                                                          16 as libc::c_int +
                                                          3 as libc::c_int) as
                                                         usize] as f32_0) /
                                     100.0f32,
                                 (*gGameInfo).data[(18 as libc::c_int *
                                                        6 as libc::c_int *
                                                        16 as libc::c_int +
                                                        2 as libc::c_int) as
                                                       usize] as f32_0 /
                                     100.0f32, 0.0f32,
                                 MTXMODE_NEW as libc::c_int as u8_0);
                Matrix_Scale(0.78f32, 0.78f32, 0.78f32,
                             MTXMODE_APPLY as libc::c_int as u8_0);
                Matrix_RotateZ((*pauseCtx).unk_1F8 / 100.0f32,
                               MTXMODE_APPLY as libc::c_int as u8_0);
                Matrix_RotateY(1.57f32, MTXMODE_APPLY as libc::c_int as u8_0);
                let fresh82 = (*__gfxCtx).polyOpa.p;
                (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
                let mut _g_20: *mut Gfx = fresh82;
                (*_g_20).words.w0 =
                    (0xda as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        24 as libc::c_int |
                        ((::std::mem::size_of::<Mtx>() as
                              libc::c_ulong).wrapping_sub(1 as libc::c_int as
                                                              libc::c_uint).wrapping_div(8
                                                                                             as
                                                                                             libc::c_int
                                                                                             as
                                                                                             libc::c_uint)
                             &
                             (((0x1 as libc::c_int) << 5 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            19 as libc::c_int |
                        ((0 as libc::c_int / 8 as libc::c_int) as u32_0 &
                             (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            8 as libc::c_int |
                        (((0 as libc::c_int | 0x2 as libc::c_int |
                               0 as libc::c_int) ^ 0x1 as libc::c_int) as
                             u32_0 &
                             (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            0 as libc::c_int;
                (*_g_20).words.w1 =
                    Matrix_NewMtx(gfxCtx,
                                  b"../z_kaleido_scope_PAL.c\x00" as *const u8
                                      as *const libc::c_char as
                                      *mut libc::c_char, 1367 as libc::c_int)
                        as libc::c_uint;
                (*__gfxCtx).polyOpa.p =
                    KaleidoScope_DrawPageSections((*__gfxCtx).polyOpa.p,
                                                  (*pauseCtx).equipPageVtx,
                                                  sEquipmentTexs[gSaveContext.language
                                                                     as usize]
                                                      as
                                                      *mut *mut libc::c_void);
                KaleidoScope_DrawEquipment(globalCtx);
                if (*pauseCtx).cursorSpecialPos as libc::c_int ==
                       0 as libc::c_int {
                    KaleidoScope_DrawCursor(globalCtx,
                                            PAUSE_EQUIP as libc::c_int as
                                                u16_0);
                }
            }
            _ => { }
        }
    }
    func_800949A8(gfxCtx);
    if (*pauseCtx).state as libc::c_int == 7 as libc::c_int ||
           (*pauseCtx).state as libc::c_int >= 8 as libc::c_int &&
               ((*pauseCtx).state as libc::c_int) < 0x12 as libc::c_int {
        KaleidoScope_UpdatePrompt(globalCtx);
        let fresh83 = (*__gfxCtx).polyOpa.p;
        (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
        let mut _g_21: *mut Gfx = fresh83;
        (*_g_21).words.w0 =
            (0xfc as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int
                |
                (((1 as libc::c_int as u32_0 &
                       (((0x1 as libc::c_int) << 4 as libc::c_int) -
                            1 as libc::c_int) as libc::c_uint) <<
                      20 as libc::c_int |
                      (4 as libc::c_int as u32_0 &
                           (((0x1 as libc::c_int) << 5 as libc::c_int) -
                                1 as libc::c_int) as libc::c_uint) <<
                          15 as libc::c_int |
                      (1 as libc::c_int as u32_0 &
                           (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                1 as libc::c_int) as libc::c_uint) <<
                          12 as libc::c_int |
                      (4 as libc::c_int as u32_0 &
                           (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                1 as libc::c_int) as libc::c_uint) <<
                          9 as libc::c_int |
                      ((1 as libc::c_int as u32_0 &
                            (((0x1 as libc::c_int) << 4 as libc::c_int) -
                                 1 as libc::c_int) as libc::c_uint) <<
                           5 as libc::c_int |
                           (4 as libc::c_int as u32_0 &
                                (((0x1 as libc::c_int) << 5 as libc::c_int) -
                                     1 as libc::c_int) as libc::c_uint) <<
                               0 as libc::c_int)) &
                     (((0x1 as libc::c_int) << 24 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int;
        (*_g_21).words.w1 =
            (31 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 28 as libc::c_int
                |
                (31 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 3 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    15 as libc::c_int |
                (7 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 3 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    12 as libc::c_int |
                (7 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 3 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    9 as libc::c_int |
                ((31 as libc::c_int as u32_0 &
                      (((0x1 as libc::c_int) << 4 as libc::c_int) -
                           1 as libc::c_int) as libc::c_uint) <<
                     24 as libc::c_int |
                     (1 as libc::c_int as u32_0 &
                          (((0x1 as libc::c_int) << 3 as libc::c_int) -
                               1 as libc::c_int) as libc::c_uint) <<
                         21 as libc::c_int |
                     (4 as libc::c_int as u32_0 &
                          (((0x1 as libc::c_int) << 3 as libc::c_int) -
                               1 as libc::c_int) as libc::c_uint) <<
                         18 as libc::c_int |
                     (31 as libc::c_int as u32_0 &
                          (((0x1 as libc::c_int) << 3 as libc::c_int) -
                               1 as libc::c_int) as libc::c_uint) <<
                         6 as libc::c_int |
                     (7 as libc::c_int as u32_0 &
                          (((0x1 as libc::c_int) << 3 as libc::c_int) -
                               1 as libc::c_int) as libc::c_uint) <<
                         3 as libc::c_int |
                     (7 as libc::c_int as u32_0 &
                          (((0x1 as libc::c_int) << 3 as libc::c_int) -
                               1 as libc::c_int) as libc::c_uint) <<
                         0 as libc::c_int);
        if (*pauseCtx).pageIndex == 0 {
            // pageIndex == PAUSE_ITEM
            (*pauseCtx).unk_1F4 = (*pauseCtx).unk_204 + 314.0f32;
            Matrix_Translate(0.0f32,
                             (*gGameInfo).data[(18 as libc::c_int *
                                                    6 as libc::c_int *
                                                    16 as libc::c_int +
                                                    2 as libc::c_int) as
                                                   usize] as f32_0 / 100.0f32,
                             -(*pauseCtx).unk_1F0 / 10.0f32,
                             MTXMODE_NEW as libc::c_int as u8_0);
            Matrix_Scale(0.78f32, 0.78f32, 0.78f32,
                         MTXMODE_APPLY as libc::c_int as u8_0);
            Matrix_RotateX(-(*pauseCtx).unk_204 / 100.0f32,
                           MTXMODE_APPLY as libc::c_int as u8_0);
        } else if (*pauseCtx).pageIndex as libc::c_int ==
                      PAUSE_MAP as libc::c_int {
            (*pauseCtx).unk_1FC = (*pauseCtx).unk_204 + 314.0f32;
            Matrix_Translate((*pauseCtx).unk_1F0 / 10.0f32,
                             (*gGameInfo).data[(18 as libc::c_int *
                                                    6 as libc::c_int *
                                                    16 as libc::c_int +
                                                    2 as libc::c_int) as
                                                   usize] as f32_0 / 100.0f32,
                             0.0f32, MTXMODE_NEW as libc::c_int as u8_0);
            Matrix_Scale(0.78f32, 0.78f32, 0.78f32,
                         MTXMODE_APPLY as libc::c_int as u8_0);
            Matrix_RotateZ(-(*pauseCtx).unk_204 / 100.0f32,
                           MTXMODE_APPLY as libc::c_int as u8_0);
            Matrix_RotateY(-1.57f32, MTXMODE_APPLY as libc::c_int as u8_0);
        } else if (*pauseCtx).pageIndex as libc::c_int ==
                      PAUSE_QUEST as libc::c_int {
            (*pauseCtx).unk_200 = (*pauseCtx).unk_204 + 314.0f32;
            Matrix_Translate(0.0f32,
                             (*gGameInfo).data[(18 as libc::c_int *
                                                    6 as libc::c_int *
                                                    16 as libc::c_int +
                                                    2 as libc::c_int) as
                                                   usize] as f32_0 / 100.0f32,
                             (*pauseCtx).unk_1F0 / 10.0f32,
                             MTXMODE_NEW as libc::c_int as u8_0);
            Matrix_Scale(0.78f32, 0.78f32, 0.78f32,
                         MTXMODE_APPLY as libc::c_int as u8_0);
            Matrix_RotateX((*pauseCtx).unk_204 / 100.0f32,
                           MTXMODE_APPLY as libc::c_int as u8_0);
            Matrix_RotateY(3.14f32, MTXMODE_APPLY as libc::c_int as u8_0);
        } else {
            (*pauseCtx).unk_1F8 = (*pauseCtx).unk_204 + 314.0f32;
            Matrix_Translate(-(*pauseCtx).unk_1F0 / 10.0f32,
                             (*gGameInfo).data[(18 as libc::c_int *
                                                    6 as libc::c_int *
                                                    16 as libc::c_int +
                                                    2 as libc::c_int) as
                                                   usize] as f32_0 / 100.0f32,
                             0.0f32, MTXMODE_NEW as libc::c_int as u8_0);
            Matrix_Scale(0.78f32, 0.78f32, 0.78f32,
                         MTXMODE_APPLY as libc::c_int as u8_0);
            Matrix_RotateZ((*pauseCtx).unk_204 / 100.0f32,
                           MTXMODE_APPLY as libc::c_int as u8_0);
            Matrix_RotateY(1.57f32, MTXMODE_APPLY as libc::c_int as u8_0);
        }
        let fresh84 = (*__gfxCtx).polyOpa.p;
        (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
        let mut _g_22: *mut Gfx = fresh84;
        (*_g_22).words.w0 =
            (0xda as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int
                |
                ((::std::mem::size_of::<Mtx>() as
                      libc::c_ulong).wrapping_sub(1 as libc::c_int as
                                                      libc::c_uint).wrapping_div(8
                                                                                     as
                                                                                     libc::c_int
                                                                                     as
                                                                                     libc::c_uint)
                     &
                     (((0x1 as libc::c_int) << 5 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    19 as libc::c_int |
                ((0 as libc::c_int / 8 as libc::c_int) as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    8 as libc::c_int |
                (((0 as libc::c_int | 0x2 as libc::c_int | 0 as libc::c_int) ^
                      0x1 as libc::c_int) as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int;
        (*_g_22).words.w1 =
            Matrix_NewMtx(gfxCtx,
                          b"../z_kaleido_scope_PAL.c\x00" as *const u8 as
                              *const libc::c_char as *mut libc::c_char,
                          1424 as libc::c_int) as libc::c_uint;
        if (*pauseCtx).state as libc::c_int >= 8 as libc::c_int &&
               (*pauseCtx).state as libc::c_int <= 0x11 as libc::c_int {
            (*__gfxCtx).polyOpa.p =
                KaleidoScope_DrawPageSections((*__gfxCtx).polyOpa.p,
                                              (*pauseCtx).saveVtx,
                                              sGameOverTexs.as_mut_ptr())
        } else {
            (*__gfxCtx).polyOpa.p =
                KaleidoScope_DrawPageSections((*__gfxCtx).polyOpa.p,
                                              (*pauseCtx).saveVtx,
                                              sSaveTexs[gSaveContext.language
                                                            as usize] as
                                                  *mut *mut libc::c_void)
        }
        let fresh85 = (*__gfxCtx).polyOpa.p;
        (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
        let mut _g_23: *mut Gfx = fresh85;
        (*_g_23).words.w0 =
            (0x1 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int
                |
                (32 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    12 as libc::c_int |
                ((0 as libc::c_int + 32 as libc::c_int) as u32_0 &
                     (((0x1 as libc::c_int) << 7 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    1 as libc::c_int;
        (*_g_23).words.w1 =
            &mut *(*pauseCtx).saveVtx.offset(60 as libc::c_int as isize) as
                *mut Vtx as libc::c_uint;
        if (*pauseCtx).state as libc::c_int == 7 as libc::c_int &&
               ((*pauseCtx).unk_1EC as libc::c_int) < 4 as libc::c_int ||
               (*pauseCtx).state as libc::c_int == 0xe as libc::c_int {
            (*__gfxCtx).polyOpa.p =
                KaleidoScope_QuadTextureIA8((*__gfxCtx).polyOpa.p,
                                            sSavePromptTexs[gSaveContext.language
                                                                as usize],
                                            152 as libc::c_int as s16,
                                            16 as libc::c_int as s16,
                                            0 as libc::c_int as u16_0);
            let fresh86 = (*__gfxCtx).polyOpa.p;
            (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
            let mut _g_24: *mut Gfx = fresh86;
            (*_g_24).words.w0 =
                (0xfc as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    24 as libc::c_int |
                    (((6 as libc::c_int as u32_0 &
                           (((0x1 as libc::c_int) << 4 as libc::c_int) -
                                1 as libc::c_int) as libc::c_uint) <<
                          20 as libc::c_int |
                          (3 as libc::c_int as u32_0 &
                               (((0x1 as libc::c_int) << 5 as libc::c_int) -
                                    1 as libc::c_int) as libc::c_uint) <<
                              15 as libc::c_int |
                          (1 as libc::c_int as u32_0 &
                               (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                    1 as libc::c_int) as libc::c_uint) <<
                              12 as libc::c_int |
                          (3 as libc::c_int as u32_0 &
                               (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                    1 as libc::c_int) as libc::c_uint) <<
                              9 as libc::c_int |
                          ((6 as libc::c_int as u32_0 &
                                (((0x1 as libc::c_int) << 4 as libc::c_int) -
                                     1 as libc::c_int) as libc::c_uint) <<
                               5 as libc::c_int |
                               (3 as libc::c_int as u32_0 &
                                    (((0x1 as libc::c_int) <<
                                          5 as libc::c_int) -
                                         1 as libc::c_int) as libc::c_uint) <<
                                   0 as libc::c_int)) &
                         (((0x1 as libc::c_int) << 24 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        0 as libc::c_int;
            (*_g_24).words.w1 =
                (31 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 4 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    28 as libc::c_int |
                    (31 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 3 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        15 as libc::c_int |
                    (7 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 3 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        12 as libc::c_int |
                    (7 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 3 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        9 as libc::c_int |
                    ((31 as libc::c_int as u32_0 &
                          (((0x1 as libc::c_int) << 4 as libc::c_int) -
                               1 as libc::c_int) as libc::c_uint) <<
                         24 as libc::c_int |
                         (1 as libc::c_int as u32_0 &
                              (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                   1 as libc::c_int) as libc::c_uint) <<
                             21 as libc::c_int |
                         (3 as libc::c_int as u32_0 &
                              (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                   1 as libc::c_int) as libc::c_uint) <<
                             18 as libc::c_int |
                         (31 as libc::c_int as u32_0 &
                              (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                   1 as libc::c_int) as libc::c_uint) <<
                             6 as libc::c_int |
                         (7 as libc::c_int as u32_0 &
                              (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                   1 as libc::c_int) as libc::c_uint) <<
                             3 as libc::c_int |
                         (7 as libc::c_int as u32_0 &
                              (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                   1 as libc::c_int) as libc::c_uint) <<
                             0 as libc::c_int);
            let fresh87 = (*__gfxCtx).polyOpa.p;
            (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
            let mut _g_25: *mut Gfx = fresh87;
            (*_g_25).words.w0 =
                (0xfa as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    24 as libc::c_int |
                    (0 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        8 as libc::c_int |
                    (0 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        0 as libc::c_int;
            (*_g_25).words.w1 =
                (100 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    24 as libc::c_int |
                    (255 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        16 as libc::c_int |
                    (100 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        8 as libc::c_int |
                    ((*gGameInfo).data[(20 as libc::c_int * 6 as libc::c_int *
                                            16 as libc::c_int +
                                            61 as libc::c_int) as usize] as
                         u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        0 as libc::c_int;
            if (*pauseCtx).promptChoice as libc::c_int == 0 as libc::c_int {
                let fresh88 = (*__gfxCtx).polyOpa.p;
                (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
                let mut _g_26: *mut Gfx = fresh88;
                (*_g_26).words.w0 =
                    (0xde as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        24 as libc::c_int |
                        (0 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            16 as libc::c_int |
                        (0 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 16 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            0 as libc::c_int;
                (*_g_26).words.w1 =
                    gPromptCursorLeftDL.as_mut_ptr() as libc::c_uint
            } else {
                let fresh89 = (*__gfxCtx).polyOpa.p;
                (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
                let mut _g_27: *mut Gfx = fresh89;
                (*_g_27).words.w0 =
                    (0xde as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        24 as libc::c_int |
                        (0 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            16 as libc::c_int |
                        (0 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 16 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            0 as libc::c_int;
                (*_g_27).words.w1 =
                    gPromptCursorRightDL.as_mut_ptr() as libc::c_uint
            }
            let fresh90 = (*__gfxCtx).polyOpa.p;
            (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
            let mut _g_28: *mut Gfx = fresh90;
            (*_g_28).words.w0 =
                (0xe7 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    24 as libc::c_int;
            (*_g_28).words.w1 = 0 as libc::c_int as libc::c_uint;
            let fresh91 = (*__gfxCtx).polyOpa.p;
            (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
            let mut _g_29: *mut Gfx = fresh91;
            (*_g_29).words.w0 =
                (0xfc as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    24 as libc::c_int |
                    (((1 as libc::c_int as u32_0 &
                           (((0x1 as libc::c_int) << 4 as libc::c_int) -
                                1 as libc::c_int) as libc::c_uint) <<
                          20 as libc::c_int |
                          (4 as libc::c_int as u32_0 &
                               (((0x1 as libc::c_int) << 5 as libc::c_int) -
                                    1 as libc::c_int) as libc::c_uint) <<
                              15 as libc::c_int |
                          (1 as libc::c_int as u32_0 &
                               (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                    1 as libc::c_int) as libc::c_uint) <<
                              12 as libc::c_int |
                          (4 as libc::c_int as u32_0 &
                               (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                    1 as libc::c_int) as libc::c_uint) <<
                              9 as libc::c_int |
                          ((1 as libc::c_int as u32_0 &
                                (((0x1 as libc::c_int) << 4 as libc::c_int) -
                                     1 as libc::c_int) as libc::c_uint) <<
                               5 as libc::c_int |
                               (4 as libc::c_int as u32_0 &
                                    (((0x1 as libc::c_int) <<
                                          5 as libc::c_int) -
                                         1 as libc::c_int) as libc::c_uint) <<
                                   0 as libc::c_int)) &
                         (((0x1 as libc::c_int) << 24 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        0 as libc::c_int;
            (*_g_29).words.w1 =
                (31 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 4 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    28 as libc::c_int |
                    (31 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 3 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        15 as libc::c_int |
                    (7 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 3 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        12 as libc::c_int |
                    (7 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 3 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        9 as libc::c_int |
                    ((31 as libc::c_int as u32_0 &
                          (((0x1 as libc::c_int) << 4 as libc::c_int) -
                               1 as libc::c_int) as libc::c_uint) <<
                         24 as libc::c_int |
                         (1 as libc::c_int as u32_0 &
                              (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                   1 as libc::c_int) as libc::c_uint) <<
                             21 as libc::c_int |
                         (4 as libc::c_int as u32_0 &
                              (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                   1 as libc::c_int) as libc::c_uint) <<
                             18 as libc::c_int |
                         (31 as libc::c_int as u32_0 &
                              (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                   1 as libc::c_int) as libc::c_uint) <<
                             6 as libc::c_int |
                         (7 as libc::c_int as u32_0 &
                              (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                   1 as libc::c_int) as libc::c_uint) <<
                             3 as libc::c_int |
                         (7 as libc::c_int as u32_0 &
                              (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                   1 as libc::c_int) as libc::c_uint) <<
                             0 as libc::c_int);
            let fresh92 = (*__gfxCtx).polyOpa.p;
            (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
            let mut _g_30: *mut Gfx = fresh92;
            (*_g_30).words.w0 =
                (0xfa as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    24 as libc::c_int |
                    (0 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        8 as libc::c_int |
                    (0 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        0 as libc::c_int;
            (*_g_30).words.w1 =
                (255 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    24 as libc::c_int |
                    (255 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        16 as libc::c_int |
                    (255 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        8 as libc::c_int |
                    ((*pauseCtx).alpha as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        0 as libc::c_int;
            (*__gfxCtx).polyOpa.p =
                KaleidoScope_QuadTextureIA8((*__gfxCtx).polyOpa.p,
                                            sPromptChoiceTexs[gSaveContext.language
                                                                  as
                                                                  usize][0 as
                                                                             libc::c_int
                                                                             as
                                                                             usize],
                                            48 as libc::c_int as s16,
                                            16 as libc::c_int as s16,
                                            12 as libc::c_int as u16_0);
            (*__gfxCtx).polyOpa.p =
                KaleidoScope_QuadTextureIA8((*__gfxCtx).polyOpa.p,
                                            sPromptChoiceTexs[gSaveContext.language
                                                                  as
                                                                  usize][1 as
                                                                             libc::c_int
                                                                             as
                                                                             usize],
                                            48 as libc::c_int as s16,
                                            16 as libc::c_int as s16,
                                            16 as libc::c_int as u16_0)
        } else if (*pauseCtx).state as libc::c_int != 7 as libc::c_int ||
                      ((*pauseCtx).unk_1EC as libc::c_int) < 4 as libc::c_int
         {
            if (*pauseCtx).state as libc::c_int != 0xf as libc::c_int &&
                   ((*pauseCtx).state as libc::c_int == 0x10 as libc::c_int ||
                        (*pauseCtx).state as libc::c_int ==
                            0x11 as libc::c_int) {
                (*__gfxCtx).polyOpa.p =
                    KaleidoScope_QuadTextureIA8((*__gfxCtx).polyOpa.p,
                                                sContinuePromptTexs[gSaveContext.language
                                                                        as
                                                                        usize],
                                                152 as libc::c_int as s16,
                                                16 as libc::c_int as s16,
                                                0 as libc::c_int as u16_0);
                let fresh93 = (*__gfxCtx).polyOpa.p;
                (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
                let mut _g_31: *mut Gfx = fresh93;
                (*_g_31).words.w0 =
                    (0xfc as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        24 as libc::c_int |
                        (((6 as libc::c_int as u32_0 &
                               (((0x1 as libc::c_int) << 4 as libc::c_int) -
                                    1 as libc::c_int) as libc::c_uint) <<
                              20 as libc::c_int |
                              (3 as libc::c_int as u32_0 &
                                   (((0x1 as libc::c_int) << 5 as libc::c_int)
                                        - 1 as libc::c_int) as libc::c_uint)
                                  << 15 as libc::c_int |
                              (1 as libc::c_int as u32_0 &
                                   (((0x1 as libc::c_int) << 3 as libc::c_int)
                                        - 1 as libc::c_int) as libc::c_uint)
                                  << 12 as libc::c_int |
                              (3 as libc::c_int as u32_0 &
                                   (((0x1 as libc::c_int) << 3 as libc::c_int)
                                        - 1 as libc::c_int) as libc::c_uint)
                                  << 9 as libc::c_int |
                              ((6 as libc::c_int as u32_0 &
                                    (((0x1 as libc::c_int) <<
                                          4 as libc::c_int) -
                                         1 as libc::c_int) as libc::c_uint) <<
                                   5 as libc::c_int |
                                   (3 as libc::c_int as u32_0 &
                                        (((0x1 as libc::c_int) <<
                                              5 as libc::c_int) -
                                             1 as libc::c_int) as
                                            libc::c_uint) <<
                                       0 as libc::c_int)) &
                             (((0x1 as libc::c_int) << 24 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            0 as libc::c_int;
                (*_g_31).words.w1 =
                    (31 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 4 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        28 as libc::c_int |
                        (31 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            15 as libc::c_int |
                        (7 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            12 as libc::c_int |
                        (7 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            9 as libc::c_int |
                        ((31 as libc::c_int as u32_0 &
                              (((0x1 as libc::c_int) << 4 as libc::c_int) -
                                   1 as libc::c_int) as libc::c_uint) <<
                             24 as libc::c_int |
                             (1 as libc::c_int as u32_0 &
                                  (((0x1 as libc::c_int) << 3 as libc::c_int)
                                       - 1 as libc::c_int) as libc::c_uint) <<
                                 21 as libc::c_int |
                             (3 as libc::c_int as u32_0 &
                                  (((0x1 as libc::c_int) << 3 as libc::c_int)
                                       - 1 as libc::c_int) as libc::c_uint) <<
                                 18 as libc::c_int |
                             (31 as libc::c_int as u32_0 &
                                  (((0x1 as libc::c_int) << 3 as libc::c_int)
                                       - 1 as libc::c_int) as libc::c_uint) <<
                                 6 as libc::c_int |
                             (7 as libc::c_int as u32_0 &
                                  (((0x1 as libc::c_int) << 3 as libc::c_int)
                                       - 1 as libc::c_int) as libc::c_uint) <<
                                 3 as libc::c_int |
                             (7 as libc::c_int as u32_0 &
                                  (((0x1 as libc::c_int) << 3 as libc::c_int)
                                       - 1 as libc::c_int) as libc::c_uint) <<
                                 0 as libc::c_int);
                let fresh94 = (*__gfxCtx).polyOpa.p;
                (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
                let mut _g_32: *mut Gfx = fresh94;
                (*_g_32).words.w0 =
                    (0xfa as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        24 as libc::c_int |
                        (0 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            8 as libc::c_int |
                        (0 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            0 as libc::c_int;
                (*_g_32).words.w1 =
                    (100 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        24 as libc::c_int |
                        (255 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            16 as libc::c_int |
                        (100 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            8 as libc::c_int |
                        ((*gGameInfo).data[(20 as libc::c_int *
                                                6 as libc::c_int *
                                                16 as libc::c_int +
                                                61 as libc::c_int) as usize]
                             as u32_0 &
                             (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            0 as libc::c_int;
                if (*pauseCtx).promptChoice as libc::c_int == 0 as libc::c_int
                   {
                    let fresh95 = (*__gfxCtx).polyOpa.p;
                    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
                    let mut _g_33: *mut Gfx = fresh95;
                    (*_g_33).words.w0 =
                        (0xde as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            24 as libc::c_int |
                            (0 as libc::c_int as u32_0 &
                                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                      1 as libc::c_int) as libc::c_uint) <<
                                16 as libc::c_int |
                            (0 as libc::c_int as u32_0 &
                                 (((0x1 as libc::c_int) << 16 as libc::c_int)
                                      - 1 as libc::c_int) as libc::c_uint) <<
                                0 as libc::c_int;
                    (*_g_33).words.w1 =
                        gPromptCursorLeftDL.as_mut_ptr() as libc::c_uint
                } else {
                    let fresh96 = (*__gfxCtx).polyOpa.p;
                    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
                    let mut _g_34: *mut Gfx = fresh96;
                    (*_g_34).words.w0 =
                        (0xde as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            24 as libc::c_int |
                            (0 as libc::c_int as u32_0 &
                                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                      1 as libc::c_int) as libc::c_uint) <<
                                16 as libc::c_int |
                            (0 as libc::c_int as u32_0 &
                                 (((0x1 as libc::c_int) << 16 as libc::c_int)
                                      - 1 as libc::c_int) as libc::c_uint) <<
                                0 as libc::c_int;
                    (*_g_34).words.w1 =
                        gPromptCursorRightDL.as_mut_ptr() as libc::c_uint
                }
                let fresh97 = (*__gfxCtx).polyOpa.p;
                (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
                let mut _g_35: *mut Gfx = fresh97;
                (*_g_35).words.w0 =
                    (0xe7 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        24 as libc::c_int;
                (*_g_35).words.w1 = 0 as libc::c_int as libc::c_uint;
                let fresh98 = (*__gfxCtx).polyOpa.p;
                (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
                let mut _g_36: *mut Gfx = fresh98;
                (*_g_36).words.w0 =
                    (0xfc as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        24 as libc::c_int |
                        (((1 as libc::c_int as u32_0 &
                               (((0x1 as libc::c_int) << 4 as libc::c_int) -
                                    1 as libc::c_int) as libc::c_uint) <<
                              20 as libc::c_int |
                              (4 as libc::c_int as u32_0 &
                                   (((0x1 as libc::c_int) << 5 as libc::c_int)
                                        - 1 as libc::c_int) as libc::c_uint)
                                  << 15 as libc::c_int |
                              (1 as libc::c_int as u32_0 &
                                   (((0x1 as libc::c_int) << 3 as libc::c_int)
                                        - 1 as libc::c_int) as libc::c_uint)
                                  << 12 as libc::c_int |
                              (4 as libc::c_int as u32_0 &
                                   (((0x1 as libc::c_int) << 3 as libc::c_int)
                                        - 1 as libc::c_int) as libc::c_uint)
                                  << 9 as libc::c_int |
                              ((1 as libc::c_int as u32_0 &
                                    (((0x1 as libc::c_int) <<
                                          4 as libc::c_int) -
                                         1 as libc::c_int) as libc::c_uint) <<
                                   5 as libc::c_int |
                                   (4 as libc::c_int as u32_0 &
                                        (((0x1 as libc::c_int) <<
                                              5 as libc::c_int) -
                                             1 as libc::c_int) as
                                            libc::c_uint) <<
                                       0 as libc::c_int)) &
                             (((0x1 as libc::c_int) << 24 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            0 as libc::c_int;
                (*_g_36).words.w1 =
                    (31 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 4 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        28 as libc::c_int |
                        (31 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            15 as libc::c_int |
                        (7 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            12 as libc::c_int |
                        (7 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            9 as libc::c_int |
                        ((31 as libc::c_int as u32_0 &
                              (((0x1 as libc::c_int) << 4 as libc::c_int) -
                                   1 as libc::c_int) as libc::c_uint) <<
                             24 as libc::c_int |
                             (1 as libc::c_int as u32_0 &
                                  (((0x1 as libc::c_int) << 3 as libc::c_int)
                                       - 1 as libc::c_int) as libc::c_uint) <<
                                 21 as libc::c_int |
                             (4 as libc::c_int as u32_0 &
                                  (((0x1 as libc::c_int) << 3 as libc::c_int)
                                       - 1 as libc::c_int) as libc::c_uint) <<
                                 18 as libc::c_int |
                             (31 as libc::c_int as u32_0 &
                                  (((0x1 as libc::c_int) << 3 as libc::c_int)
                                       - 1 as libc::c_int) as libc::c_uint) <<
                                 6 as libc::c_int |
                             (7 as libc::c_int as u32_0 &
                                  (((0x1 as libc::c_int) << 3 as libc::c_int)
                                       - 1 as libc::c_int) as libc::c_uint) <<
                                 3 as libc::c_int |
                             (7 as libc::c_int as u32_0 &
                                  (((0x1 as libc::c_int) << 3 as libc::c_int)
                                       - 1 as libc::c_int) as libc::c_uint) <<
                                 0 as libc::c_int);
                let fresh99 = (*__gfxCtx).polyOpa.p;
                (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
                let mut _g_37: *mut Gfx = fresh99;
                (*_g_37).words.w0 =
                    (0xfa as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        24 as libc::c_int |
                        (0 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            8 as libc::c_int |
                        (0 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            0 as libc::c_int;
                (*_g_37).words.w1 =
                    (255 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        24 as libc::c_int |
                        (255 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            16 as libc::c_int |
                        (255 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            8 as libc::c_int |
                        ((*pauseCtx).alpha as u32_0 &
                             (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            0 as libc::c_int;
                (*__gfxCtx).polyOpa.p =
                    KaleidoScope_QuadTextureIA8((*__gfxCtx).polyOpa.p,
                                                sPromptChoiceTexs[gSaveContext.language
                                                                      as
                                                                      usize][0
                                                                                 as
                                                                                 libc::c_int
                                                                                 as
                                                                                 usize],
                                                48 as libc::c_int as s16,
                                                16 as libc::c_int as s16,
                                                12 as libc::c_int as u16_0);
                (*__gfxCtx).polyOpa.p =
                    KaleidoScope_QuadTextureIA8((*__gfxCtx).polyOpa.p,
                                                sPromptChoiceTexs[gSaveContext.language
                                                                      as
                                                                      usize][1
                                                                                 as
                                                                                 libc::c_int
                                                                                 as
                                                                                 usize],
                                                48 as libc::c_int as s16,
                                                16 as libc::c_int as s16,
                                                16 as libc::c_int as u16_0)
            }
        }
        let fresh100 = (*__gfxCtx).polyOpa.p;
        (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
        let mut _g_38: *mut Gfx = fresh100;
        (*_g_38).words.w0 =
            (0xe7 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int;
        (*_g_38).words.w1 = 0 as libc::c_int as libc::c_uint;
        let fresh101 = (*__gfxCtx).polyOpa.p;
        (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
        let mut _g_39: *mut Gfx = fresh101;
        (*_g_39).words.w0 =
            (0xfc as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int
                |
                (((3 as libc::c_int as u32_0 &
                       (((0x1 as libc::c_int) << 4 as libc::c_int) -
                            1 as libc::c_int) as libc::c_uint) <<
                      20 as libc::c_int |
                      (1 as libc::c_int as u32_0 &
                           (((0x1 as libc::c_int) << 5 as libc::c_int) -
                                1 as libc::c_int) as libc::c_uint) <<
                          15 as libc::c_int |
                      (1 as libc::c_int as u32_0 &
                           (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                1 as libc::c_int) as libc::c_uint) <<
                          12 as libc::c_int |
                      (3 as libc::c_int as u32_0 &
                           (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                1 as libc::c_int) as libc::c_uint) <<
                          9 as libc::c_int |
                      ((3 as libc::c_int as u32_0 &
                            (((0x1 as libc::c_int) << 4 as libc::c_int) -
                                 1 as libc::c_int) as libc::c_uint) <<
                           5 as libc::c_int |
                           (1 as libc::c_int as u32_0 &
                                (((0x1 as libc::c_int) << 5 as libc::c_int) -
                                     1 as libc::c_int) as libc::c_uint) <<
                               0 as libc::c_int)) &
                     (((0x1 as libc::c_int) << 24 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int;
        (*_g_39).words.w1 =
            (5 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 28 as libc::c_int
                |
                (5 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 3 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    15 as libc::c_int |
                (7 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 3 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    12 as libc::c_int |
                (7 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 3 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    9 as libc::c_int |
                ((5 as libc::c_int as u32_0 &
                      (((0x1 as libc::c_int) << 4 as libc::c_int) -
                           1 as libc::c_int) as libc::c_uint) <<
                     24 as libc::c_int |
                     (1 as libc::c_int as u32_0 &
                          (((0x1 as libc::c_int) << 3 as libc::c_int) -
                               1 as libc::c_int) as libc::c_uint) <<
                         21 as libc::c_int |
                     (3 as libc::c_int as u32_0 &
                          (((0x1 as libc::c_int) << 3 as libc::c_int) -
                               1 as libc::c_int) as libc::c_uint) <<
                         18 as libc::c_int |
                     (5 as libc::c_int as u32_0 &
                          (((0x1 as libc::c_int) << 3 as libc::c_int) -
                               1 as libc::c_int) as libc::c_uint) <<
                         6 as libc::c_int |
                     (7 as libc::c_int as u32_0 &
                          (((0x1 as libc::c_int) << 3 as libc::c_int) -
                               1 as libc::c_int) as libc::c_uint) <<
                         3 as libc::c_int |
                     (7 as libc::c_int as u32_0 &
                          (((0x1 as libc::c_int) << 3 as libc::c_int) -
                               1 as libc::c_int) as libc::c_uint) <<
                         0 as libc::c_int);
        if (*pauseCtx).state as libc::c_int != 0x10 as libc::c_int &&
               (*pauseCtx).state as libc::c_int != 0x11 as libc::c_int {
            let fresh102 = (*__gfxCtx).polyOpa.p;
            (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
            let mut _g_40: *mut Gfx = fresh102;
            (*_g_40).words.w0 =
                (0xfa as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    24 as libc::c_int |
                    (0 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        8 as libc::c_int |
                    (0 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        0 as libc::c_int;
            (*_g_40).words.w1 =
                (255 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    24 as libc::c_int |
                    (255 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        16 as libc::c_int |
                    (0 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        8 as libc::c_int |
                    ((*pauseCtx).alpha as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        0 as libc::c_int;
            let fresh103 = (*__gfxCtx).polyOpa.p;
            (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
            let mut _g_41: *mut Gfx = fresh103;
            (*_g_41).words.w0 =
                (0xfb as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    24 as libc::c_int;
            (*_g_41).words.w1 =
                (0 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    24 as libc::c_int |
                    (0 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        16 as libc::c_int |
                    (0 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        8 as libc::c_int |
                    (0 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        0 as libc::c_int
        }
    }
    Graph_CloseDisps(dispRefs.as_mut_ptr(), gfxCtx,
                     b"../z_kaleido_scope_PAL.c\x00" as *const u8 as
                         *const libc::c_char, 1577 as libc::c_int);
}
#[no_mangle]
pub unsafe extern "C" fn KaleidoScope_DrawInfoPanel(mut globalCtx:
                                                        *mut GlobalContext) {
    static mut D_8082AD54: [*mut libc::c_void; 3] =
        unsafe {
            [gPauseToEquipENGTex.as_ptr() as *mut _ as *mut libc::c_void,
             gPauseToEquipGERTex.as_ptr() as *mut _ as *mut libc::c_void,
             gPauseToEquipFRATex.as_ptr() as *mut _ as *mut libc::c_void]
        };
    static mut D_8082AD60: [*mut libc::c_void; 3] =
        unsafe {
            [gPauseToDecideENGTex.as_ptr() as *mut _ as *mut libc::c_void,
             gPauseToDecideGERTex.as_ptr() as *mut _ as *mut libc::c_void,
             gPauseToDecideFRATex.as_ptr() as *mut _ as *mut libc::c_void]
        };
    static mut D_8082AD6C: [*mut libc::c_void; 3] =
        unsafe {
            [gPauseToPlayMelodyENGTex.as_ptr() as *mut _ as *mut libc::c_void,
             gPauseToPlayMelodyGERTex.as_ptr() as *mut _ as *mut libc::c_void,
             gPauseToPlayMelodyFRATex.as_ptr() as *mut _ as *mut libc::c_void]
        };
    static mut D_8082AD78: [[*mut libc::c_void; 3]; 4] =
        unsafe {
            [[gPauseToEquipmentENGTex.as_ptr() as *mut _ as *mut libc::c_void,
              gPauseToEquipmentGERTex.as_ptr() as *mut _ as *mut libc::c_void,
              gPauseToEquipmentFRATex.as_ptr() as *mut _ as
                  *mut libc::c_void],
             [gPauseToSelectItemENGTex.as_ptr() as *mut _ as
                  *mut libc::c_void,
              gPauseToSelectItemGERTex.as_ptr() as *mut _ as
                  *mut libc::c_void,
              gPauseToSelectItemFRATex.as_ptr() as *mut _ as
                  *mut libc::c_void],
             [gPauseToMapENGTex.as_ptr() as *mut _ as *mut libc::c_void,
              gPauseToMapGERTex.as_ptr() as *mut _ as *mut libc::c_void,
              gPauseToMapFRATex.as_ptr() as *mut _ as *mut libc::c_void],
             [gPauseToQuestStatusENGTex.as_ptr() as *mut _ as
                  *mut libc::c_void,
              gPauseToQuestStatusGERTex.as_ptr() as *mut _ as
                  *mut libc::c_void,
              gPauseToQuestStatusFRATex.as_ptr() as *mut _ as
                  *mut libc::c_void]]
        };
    static mut D_8082ADA8: [[*mut libc::c_void; 3]; 4] =
        unsafe {
            [[gPauseToMapENGTex.as_ptr() as *mut _ as *mut libc::c_void,
              gPauseToMapGERTex.as_ptr() as *mut _ as *mut libc::c_void,
              gPauseToMapFRATex.as_ptr() as *mut _ as *mut libc::c_void],
             [gPauseToQuestStatusENGTex.as_ptr() as *mut _ as
                  *mut libc::c_void,
              gPauseToQuestStatusGERTex.as_ptr() as *mut _ as
                  *mut libc::c_void,
              gPauseToQuestStatusFRATex.as_ptr() as *mut _ as
                  *mut libc::c_void],
             [gPauseToEquipmentENGTex.as_ptr() as *mut _ as *mut libc::c_void,
              gPauseToEquipmentGERTex.as_ptr() as *mut _ as *mut libc::c_void,
              gPauseToEquipmentFRATex.as_ptr() as *mut _ as
                  *mut libc::c_void],
             [gPauseToSelectItemENGTex.as_ptr() as *mut _ as
                  *mut libc::c_void,
              gPauseToSelectItemGERTex.as_ptr() as *mut _ as
                  *mut libc::c_void,
              gPauseToSelectItemFRATex.as_ptr() as *mut _ as
                  *mut libc::c_void]]
        };
    static mut D_8082ADD8: [u16_0; 3] =
        [56 as libc::c_int as u16_0, 88 as libc::c_int as u16_0,
         80 as libc::c_int as u16_0];
    static mut D_8082ADE0: [u16_0; 3] =
        [64 as libc::c_int as u16_0, 88 as libc::c_int as u16_0,
         72 as libc::c_int as u16_0];
    static mut D_8082ADE8: [u16_0; 3] =
        [80 as libc::c_int as u16_0, 104 as libc::c_int as u16_0,
         112 as libc::c_int as u16_0];
    static mut D_8082ADF0: [[s16; 4]; 2] =
        [[180 as libc::c_int as s16, 210 as libc::c_int as s16,
          255 as libc::c_int as s16, 220 as libc::c_int as s16],
         [100 as libc::c_int as s16, 100 as libc::c_int as s16,
          150 as libc::c_int as s16, 220 as libc::c_int as s16]];
    static mut D_8082AE00: s16 = 20 as libc::c_int as s16;
    static mut D_8082AE04: s16 = 0 as libc::c_int as s16;
    static mut D_8082AE08: [s16; 20] =
        [10 as libc::c_int as s16, 16 as libc::c_int as s16,
         16 as libc::c_int as s16, 17 as libc::c_int as s16,
         12 as libc::c_int as s16, 13 as libc::c_int as s16,
         18 as libc::c_int as s16, 17 as libc::c_int as s16,
         17 as libc::c_int as s16, 19 as libc::c_int as s16,
         13 as libc::c_int as s16, 21 as libc::c_int as s16,
         20 as libc::c_int as s16, 21 as libc::c_int as s16,
         14 as libc::c_int as s16, 15 as libc::c_int as s16,
         15 as libc::c_int as s16, 15 as libc::c_int as s16,
         11 as libc::c_int as s16, 14 as libc::c_int as s16];
    static mut D_8082AE30: [s16; 12] =
        [21 as libc::c_int as s16, 20 as libc::c_int as s16,
         19 as libc::c_int as s16, 18 as libc::c_int as s16,
         11 as libc::c_int as s16, 14 as libc::c_int as s16,
         10 as libc::c_int as s16, 15 as libc::c_int as s16,
         16 as libc::c_int as s16, 13 as libc::c_int as s16,
         12 as libc::c_int as s16, 17 as libc::c_int as s16];
    static mut D_808321A0: s16 = 0;
    static mut D_808321A2: s16 = 0;
    static mut D_808321A4: s16 = 0;
    static mut D_808321A6: s16 = 0;
    let mut pauseCtx: *mut PauseContext = &mut (*globalCtx).pauseCtx;
    let mut stepR: s16 = 0;
    let mut stepG: s16 = 0;
    let mut stepB: s16 = 0;
    let mut stepA: s16 = 0;
    let mut temp: s16 = 0;
    let mut i: s16 = 0;
    let mut j: s16 = 0;
    let mut __gfxCtx: *mut GraphicsContext = 0 as *mut GraphicsContext;
    let mut dispRefs: [*mut Gfx; 4] = [0 as *mut Gfx; 4];
    __gfxCtx = (*globalCtx).state.gfxCtx;
    Graph_OpenDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                    b"../z_kaleido_scope_PAL.c\x00" as *const u8 as
                        *const libc::c_char, 1676 as libc::c_int);
    stepR =
        ((if D_808321A0 as libc::c_int -
                 D_8082ADF0[D_8082AE04 as usize][0 as libc::c_int as usize] as
                     libc::c_int >= 0 as libc::c_int {
              (D_808321A0 as libc::c_int) -
                  D_8082ADF0[D_8082AE04 as usize][0 as libc::c_int as usize]
                      as libc::c_int
          } else {
              -(D_808321A0 as libc::c_int -
                    D_8082ADF0[D_8082AE04 as usize][0 as libc::c_int as usize]
                        as libc::c_int)
          }) / D_8082AE00 as libc::c_int) as s16;
    stepG =
        ((if D_808321A2 as libc::c_int -
                 D_8082ADF0[D_8082AE04 as usize][1 as libc::c_int as usize] as
                     libc::c_int >= 0 as libc::c_int {
              (D_808321A2 as libc::c_int) -
                  D_8082ADF0[D_8082AE04 as usize][1 as libc::c_int as usize]
                      as libc::c_int
          } else {
              -(D_808321A2 as libc::c_int -
                    D_8082ADF0[D_8082AE04 as usize][1 as libc::c_int as usize]
                        as libc::c_int)
          }) / D_8082AE00 as libc::c_int) as s16;
    stepB =
        ((if D_808321A4 as libc::c_int -
                 D_8082ADF0[D_8082AE04 as usize][2 as libc::c_int as usize] as
                     libc::c_int >= 0 as libc::c_int {
              (D_808321A4 as libc::c_int) -
                  D_8082ADF0[D_8082AE04 as usize][2 as libc::c_int as usize]
                      as libc::c_int
          } else {
              -(D_808321A4 as libc::c_int -
                    D_8082ADF0[D_8082AE04 as usize][2 as libc::c_int as usize]
                        as libc::c_int)
          }) / D_8082AE00 as libc::c_int) as s16;
    stepA =
        ((if D_808321A6 as libc::c_int -
                 D_8082ADF0[D_8082AE04 as usize][3 as libc::c_int as usize] as
                     libc::c_int >= 0 as libc::c_int {
              (D_808321A6 as libc::c_int) -
                  D_8082ADF0[D_8082AE04 as usize][3 as libc::c_int as usize]
                      as libc::c_int
          } else {
              -(D_808321A6 as libc::c_int -
                    D_8082ADF0[D_8082AE04 as usize][3 as libc::c_int as usize]
                        as libc::c_int)
          }) / D_8082AE00 as libc::c_int) as s16;
    if D_808321A0 as libc::c_int >=
           D_8082ADF0[D_8082AE04 as usize][0 as libc::c_int as usize] as
               libc::c_int {
        D_808321A0 = (D_808321A0 as libc::c_int - stepR as libc::c_int) as s16
    } else {
        D_808321A0 = (D_808321A0 as libc::c_int + stepR as libc::c_int) as s16
    }
    if D_808321A2 as libc::c_int >=
           D_8082ADF0[D_8082AE04 as usize][1 as libc::c_int as usize] as
               libc::c_int {
        D_808321A2 = (D_808321A2 as libc::c_int - stepG as libc::c_int) as s16
    } else {
        D_808321A2 = (D_808321A2 as libc::c_int + stepG as libc::c_int) as s16
    }
    if D_808321A4 as libc::c_int >=
           D_8082ADF0[D_8082AE04 as usize][2 as libc::c_int as usize] as
               libc::c_int {
        D_808321A4 = (D_808321A4 as libc::c_int - stepB as libc::c_int) as s16
    } else {
        D_808321A4 = (D_808321A4 as libc::c_int + stepB as libc::c_int) as s16
    }
    if D_808321A6 as libc::c_int >=
           D_8082ADF0[D_8082AE04 as usize][3 as libc::c_int as usize] as
               libc::c_int {
        D_808321A6 = (D_808321A6 as libc::c_int - stepA as libc::c_int) as s16
    } else {
        D_808321A6 = (D_808321A6 as libc::c_int + stepA as libc::c_int) as s16
    }
    D_8082AE00 -= 1;
    if D_8082AE00 as libc::c_int == 0 as libc::c_int {
        D_808321A0 =
            D_8082ADF0[D_8082AE04 as usize][0 as libc::c_int as usize];
        D_808321A2 =
            D_8082ADF0[D_8082AE04 as usize][1 as libc::c_int as usize];
        D_808321A4 =
            D_8082ADF0[D_8082AE04 as usize][2 as libc::c_int as usize];
        D_808321A6 =
            D_8082ADF0[D_8082AE04 as usize][3 as libc::c_int as usize];
        D_8082AE00 =
            (*gGameInfo).data[(10 as libc::c_int * 6 as libc::c_int *
                                   16 as libc::c_int + 28 as libc::c_int) as
                                  usize];
        D_8082AE04 = (D_8082AE04 as libc::c_int ^ 1 as libc::c_int) as s16
    }
    temp =
        ((*pauseCtx).infoPanelOffsetY as libc::c_int - 76 as libc::c_int) as
            s16;
    j = 0 as libc::c_int as s16;
    i = 0 as libc::c_int as s16;
    while (i as libc::c_int) < 7 as libc::c_int {
        let ref mut fresh104 =
            (*(*pauseCtx).infoPanelVtx.offset((j as libc::c_int +
                                                   2 as libc::c_int) as
                                                  isize)).v.ob[0 as
                                                                   libc::c_int
                                                                   as usize];
        *fresh104 = -(72 as libc::c_int) as libc::c_short;
        (*(*pauseCtx).infoPanelVtx.offset((j as libc::c_int +
                                               0 as libc::c_int) as
                                              isize)).v.ob[0 as libc::c_int as
                                                               usize] =
            *fresh104;
        let ref mut fresh105 =
            (*(*pauseCtx).infoPanelVtx.offset((j as libc::c_int +
                                                   3 as libc::c_int) as
                                                  isize)).v.ob[0 as
                                                                   libc::c_int
                                                                   as usize];
        *fresh105 = 0 as libc::c_int as libc::c_short;
        (*(*pauseCtx).infoPanelVtx.offset((j as libc::c_int +
                                               1 as libc::c_int) as
                                              isize)).v.ob[0 as libc::c_int as
                                                               usize] =
            *fresh105;
        let ref mut fresh106 =
            (*(*pauseCtx).infoPanelVtx.offset((j as libc::c_int +
                                                   1 as libc::c_int) as
                                                  isize)).v.ob[1 as
                                                                   libc::c_int
                                                                   as usize];
        *fresh106 = temp;
        (*(*pauseCtx).infoPanelVtx.offset((j as libc::c_int +
                                               0 as libc::c_int) as
                                              isize)).v.ob[1 as libc::c_int as
                                                               usize] =
            *fresh106;
        let ref mut fresh107 =
            (*(*pauseCtx).infoPanelVtx.offset((j as libc::c_int +
                                                   3 as libc::c_int) as
                                                  isize)).v.ob[1 as
                                                                   libc::c_int
                                                                   as usize];
        *fresh107 =
            (temp as libc::c_int - 24 as libc::c_int) as libc::c_short;
        (*(*pauseCtx).infoPanelVtx.offset((j as libc::c_int +
                                               2 as libc::c_int) as
                                              isize)).v.ob[1 as libc::c_int as
                                                               usize] =
            *fresh107;
        let ref mut fresh108 =
            (*(*pauseCtx).infoPanelVtx.offset((j as libc::c_int +
                                                   3 as libc::c_int) as
                                                  isize)).v.ob[2 as
                                                                   libc::c_int
                                                                   as usize];
        *fresh108 = 0 as libc::c_int as libc::c_short;
        let ref mut fresh109 =
            (*(*pauseCtx).infoPanelVtx.offset((j as libc::c_int +
                                                   2 as libc::c_int) as
                                                  isize)).v.ob[2 as
                                                                   libc::c_int
                                                                   as usize];
        *fresh109 = *fresh108;
        let ref mut fresh110 =
            (*(*pauseCtx).infoPanelVtx.offset((j as libc::c_int +
                                                   1 as libc::c_int) as
                                                  isize)).v.ob[2 as
                                                                   libc::c_int
                                                                   as usize];
        *fresh110 = *fresh109;
        (*(*pauseCtx).infoPanelVtx.offset((j as libc::c_int +
                                               0 as libc::c_int) as
                                              isize)).v.ob[2 as libc::c_int as
                                                               usize] =
            *fresh110;
        let ref mut fresh111 =
            (*(*pauseCtx).infoPanelVtx.offset((j as libc::c_int +
                                                   3 as libc::c_int) as
                                                  isize)).v.flag;
        *fresh111 = 0 as libc::c_int as libc::c_ushort;
        let ref mut fresh112 =
            (*(*pauseCtx).infoPanelVtx.offset((j as libc::c_int +
                                                   2 as libc::c_int) as
                                                  isize)).v.flag;
        *fresh112 = *fresh111;
        let ref mut fresh113 =
            (*(*pauseCtx).infoPanelVtx.offset((j as libc::c_int +
                                                   1 as libc::c_int) as
                                                  isize)).v.flag;
        *fresh113 = *fresh112;
        (*(*pauseCtx).infoPanelVtx.offset((j as libc::c_int +
                                               0 as libc::c_int) as
                                              isize)).v.flag = *fresh113;
        let ref mut fresh114 =
            (*(*pauseCtx).infoPanelVtx.offset((j as libc::c_int +
                                                   2 as libc::c_int) as
                                                  isize)).v.tc[0 as
                                                                   libc::c_int
                                                                   as usize];
        *fresh114 = 0 as libc::c_int as libc::c_short;
        let ref mut fresh115 =
            (*(*pauseCtx).infoPanelVtx.offset((j as libc::c_int +
                                                   1 as libc::c_int) as
                                                  isize)).v.tc[1 as
                                                                   libc::c_int
                                                                   as usize];
        *fresh115 = *fresh114;
        let ref mut fresh116 =
            (*(*pauseCtx).infoPanelVtx.offset((j as libc::c_int +
                                                   0 as libc::c_int) as
                                                  isize)).v.tc[1 as
                                                                   libc::c_int
                                                                   as usize];
        *fresh116 = *fresh115;
        (*(*pauseCtx).infoPanelVtx.offset((j as libc::c_int +
                                               0 as libc::c_int) as
                                              isize)).v.tc[0 as libc::c_int as
                                                               usize] =
            *fresh116;
        let ref mut fresh117 =
            (*(*pauseCtx).infoPanelVtx.offset((j as libc::c_int +
                                                   3 as libc::c_int) as
                                                  isize)).v.tc[0 as
                                                                   libc::c_int
                                                                   as usize];
        *fresh117 = 0x900 as libc::c_int as libc::c_short;
        (*(*pauseCtx).infoPanelVtx.offset((j as libc::c_int +
                                               1 as libc::c_int) as
                                              isize)).v.tc[0 as libc::c_int as
                                                               usize] =
            *fresh117;
        let ref mut fresh118 =
            (*(*pauseCtx).infoPanelVtx.offset((j as libc::c_int +
                                                   3 as libc::c_int) as
                                                  isize)).v.tc[1 as
                                                                   libc::c_int
                                                                   as usize];
        *fresh118 = 0x300 as libc::c_int as libc::c_short;
        (*(*pauseCtx).infoPanelVtx.offset((j as libc::c_int +
                                               2 as libc::c_int) as
                                              isize)).v.tc[1 as libc::c_int as
                                                               usize] =
            *fresh118;
        let ref mut fresh119 =
            (*(*pauseCtx).infoPanelVtx.offset((j as libc::c_int +
                                                   3 as libc::c_int) as
                                                  isize)).v.cn[2 as
                                                                   libc::c_int
                                                                   as usize];
        *fresh119 = 200 as libc::c_int as libc::c_uchar;
        let ref mut fresh120 =
            (*(*pauseCtx).infoPanelVtx.offset((j as libc::c_int +
                                                   1 as libc::c_int) as
                                                  isize)).v.cn[2 as
                                                                   libc::c_int
                                                                   as usize];
        *fresh120 = *fresh119;
        let ref mut fresh121 =
            (*(*pauseCtx).infoPanelVtx.offset((j as libc::c_int +
                                                   3 as libc::c_int) as
                                                  isize)).v.cn[1 as
                                                                   libc::c_int
                                                                   as usize];
        *fresh121 = *fresh120;
        let ref mut fresh122 =
            (*(*pauseCtx).infoPanelVtx.offset((j as libc::c_int +
                                                   1 as libc::c_int) as
                                                  isize)).v.cn[1 as
                                                                   libc::c_int
                                                                   as usize];
        *fresh122 = *fresh121;
        let ref mut fresh123 =
            (*(*pauseCtx).infoPanelVtx.offset((j as libc::c_int +
                                                   3 as libc::c_int) as
                                                  isize)).v.cn[0 as
                                                                   libc::c_int
                                                                   as usize];
        *fresh123 = *fresh122;
        let ref mut fresh124 =
            (*(*pauseCtx).infoPanelVtx.offset((j as libc::c_int +
                                                   1 as libc::c_int) as
                                                  isize)).v.cn[0 as
                                                                   libc::c_int
                                                                   as usize];
        *fresh124 = *fresh123;
        let ref mut fresh125 =
            (*(*pauseCtx).infoPanelVtx.offset((j as libc::c_int +
                                                   2 as libc::c_int) as
                                                  isize)).v.cn[2 as
                                                                   libc::c_int
                                                                   as usize];
        *fresh125 = *fresh124;
        let ref mut fresh126 =
            (*(*pauseCtx).infoPanelVtx.offset((j as libc::c_int +
                                                   0 as libc::c_int) as
                                                  isize)).v.cn[2 as
                                                                   libc::c_int
                                                                   as usize];
        *fresh126 = *fresh125;
        let ref mut fresh127 =
            (*(*pauseCtx).infoPanelVtx.offset((j as libc::c_int +
                                                   2 as libc::c_int) as
                                                  isize)).v.cn[1 as
                                                                   libc::c_int
                                                                   as usize];
        *fresh127 = *fresh126;
        let ref mut fresh128 =
            (*(*pauseCtx).infoPanelVtx.offset((j as libc::c_int +
                                                   0 as libc::c_int) as
                                                  isize)).v.cn[1 as
                                                                   libc::c_int
                                                                   as usize];
        *fresh128 = *fresh127;
        let ref mut fresh129 =
            (*(*pauseCtx).infoPanelVtx.offset((j as libc::c_int +
                                                   2 as libc::c_int) as
                                                  isize)).v.cn[0 as
                                                                   libc::c_int
                                                                   as usize];
        *fresh129 = *fresh128;
        (*(*pauseCtx).infoPanelVtx.offset((j as libc::c_int +
                                               0 as libc::c_int) as
                                              isize)).v.cn[0 as libc::c_int as
                                                               usize] =
            *fresh129;
        let ref mut fresh130 =
            (*(*pauseCtx).infoPanelVtx.offset((j as libc::c_int +
                                                   3 as libc::c_int) as
                                                  isize)).v.cn[3 as
                                                                   libc::c_int
                                                                   as usize];
        *fresh130 = (*pauseCtx).alpha as libc::c_uchar;
        let ref mut fresh131 =
            (*(*pauseCtx).infoPanelVtx.offset((j as libc::c_int +
                                                   1 as libc::c_int) as
                                                  isize)).v.cn[3 as
                                                                   libc::c_int
                                                                   as usize];
        *fresh131 = *fresh130;
        let ref mut fresh132 =
            (*(*pauseCtx).infoPanelVtx.offset((j as libc::c_int +
                                                   2 as libc::c_int) as
                                                  isize)).v.cn[3 as
                                                                   libc::c_int
                                                                   as usize];
        *fresh132 = *fresh131;
        (*(*pauseCtx).infoPanelVtx.offset((j as libc::c_int +
                                               0 as libc::c_int) as
                                              isize)).v.cn[3 as libc::c_int as
                                                               usize] =
            *fresh132;
        i += 1;
        j = (j as libc::c_int + 4 as libc::c_int) as s16
    }
    let ref mut fresh133 =
        (*(*pauseCtx).infoPanelVtx.offset(6 as libc::c_int as
                                              isize)).v.ob[0 as libc::c_int as
                                                               usize];
    *fresh133 =
        ((*(*pauseCtx).infoPanelVtx.offset(0 as libc::c_int as
                                               isize)).v.ob[0 as libc::c_int
                                                                as usize] as
             libc::c_int + 72 as libc::c_int) as libc::c_short;
    (*(*pauseCtx).infoPanelVtx.offset(4 as libc::c_int as
                                          isize)).v.ob[0 as libc::c_int as
                                                           usize] = *fresh133;
    let ref mut fresh134 =
        (*(*pauseCtx).infoPanelVtx.offset(7 as libc::c_int as
                                              isize)).v.ob[0 as libc::c_int as
                                                               usize];
    *fresh134 =
        ((*(*pauseCtx).infoPanelVtx.offset(4 as libc::c_int as
                                               isize)).v.ob[0 as libc::c_int
                                                                as usize] as
             libc::c_int + 72 as libc::c_int) as libc::c_short;
    (*(*pauseCtx).infoPanelVtx.offset(5 as libc::c_int as
                                          isize)).v.ob[0 as libc::c_int as
                                                           usize] = *fresh134;
    if (*pauseCtx).cursorSpecialPos as libc::c_int == 10 as libc::c_int &&
           (*pauseCtx).unk_1E4 as libc::c_int == 0 as libc::c_int {
        let ref mut fresh135 =
            (*(*pauseCtx).infoPanelVtx.offset(10 as libc::c_int as
                                                  isize)).v.ob[0 as
                                                                   libc::c_int
                                                                   as usize];
        *fresh135 =
            (*gGameInfo).data[(18 as libc::c_int * 6 as libc::c_int *
                                   16 as libc::c_int + 16 as libc::c_int) as
                                  usize];
        (*(*pauseCtx).infoPanelVtx.offset(8 as libc::c_int as
                                              isize)).v.ob[0 as libc::c_int as
                                                               usize] =
            *fresh135;
        let ref mut fresh136 =
            (*(*pauseCtx).infoPanelVtx.offset(11 as libc::c_int as
                                                  isize)).v.ob[0 as
                                                                   libc::c_int
                                                                   as usize];
        *fresh136 =
            ((*(*pauseCtx).infoPanelVtx.offset(8 as libc::c_int as
                                                   isize)).v.ob[0 as
                                                                    libc::c_int
                                                                    as usize]
                 as libc::c_int + 24 as libc::c_int) as libc::c_short;
        (*(*pauseCtx).infoPanelVtx.offset(9 as libc::c_int as
                                              isize)).v.ob[0 as libc::c_int as
                                                               usize] =
            *fresh136;
        let ref mut fresh137 =
            (*(*pauseCtx).infoPanelVtx.offset(9 as libc::c_int as
                                                  isize)).v.ob[1 as
                                                                   libc::c_int
                                                                   as usize];
        *fresh137 =
            (*gGameInfo).data[(18 as libc::c_int * 6 as libc::c_int *
                                   16 as libc::c_int + 18 as libc::c_int) as
                                  usize];
        (*(*pauseCtx).infoPanelVtx.offset(8 as libc::c_int as
                                              isize)).v.ob[1 as libc::c_int as
                                                               usize] =
            *fresh137;
        let ref mut fresh138 =
            (*(*pauseCtx).infoPanelVtx.offset(11 as libc::c_int as
                                                  isize)).v.ob[1 as
                                                                   libc::c_int
                                                                   as usize];
        *fresh138 =
            ((*(*pauseCtx).infoPanelVtx.offset(8 as libc::c_int as
                                                   isize)).v.ob[1 as
                                                                    libc::c_int
                                                                    as usize]
                 as libc::c_int - 32 as libc::c_int) as libc::c_short;
        (*(*pauseCtx).infoPanelVtx.offset(10 as libc::c_int as
                                              isize)).v.ob[1 as libc::c_int as
                                                               usize] =
            *fresh138
    } else {
        let ref mut fresh139 =
            (*(*pauseCtx).infoPanelVtx.offset(10 as libc::c_int as
                                                  isize)).v.ob[0 as
                                                                   libc::c_int
                                                                   as usize];
        *fresh139 =
            ((*gGameInfo).data[(18 as libc::c_int * 6 as libc::c_int *
                                    16 as libc::c_int + 16 as libc::c_int) as
                                   usize] as libc::c_int + 3 as libc::c_int)
                as libc::c_short;
        (*(*pauseCtx).infoPanelVtx.offset(8 as libc::c_int as
                                              isize)).v.ob[0 as libc::c_int as
                                                               usize] =
            *fresh139;
        let ref mut fresh140 =
            (*(*pauseCtx).infoPanelVtx.offset(11 as libc::c_int as
                                                  isize)).v.ob[0 as
                                                                   libc::c_int
                                                                   as usize];
        *fresh140 =
            ((*(*pauseCtx).infoPanelVtx.offset(8 as libc::c_int as
                                                   isize)).v.ob[0 as
                                                                    libc::c_int
                                                                    as usize]
                 as libc::c_int + 18 as libc::c_int) as libc::c_short;
        (*(*pauseCtx).infoPanelVtx.offset(9 as libc::c_int as
                                              isize)).v.ob[0 as libc::c_int as
                                                               usize] =
            *fresh140;
        let ref mut fresh141 =
            (*(*pauseCtx).infoPanelVtx.offset(9 as libc::c_int as
                                                  isize)).v.ob[1 as
                                                                   libc::c_int
                                                                   as usize];
        *fresh141 =
            ((*gGameInfo).data[(18 as libc::c_int * 6 as libc::c_int *
                                    16 as libc::c_int + 18 as libc::c_int) as
                                   usize] as libc::c_int - 3 as libc::c_int)
                as libc::c_short;
        (*(*pauseCtx).infoPanelVtx.offset(8 as libc::c_int as
                                              isize)).v.ob[1 as libc::c_int as
                                                               usize] =
            *fresh141;
        let ref mut fresh142 =
            (*(*pauseCtx).infoPanelVtx.offset(11 as libc::c_int as
                                                  isize)).v.ob[1 as
                                                                   libc::c_int
                                                                   as usize];
        *fresh142 =
            ((*(*pauseCtx).infoPanelVtx.offset(8 as libc::c_int as
                                                   isize)).v.ob[1 as
                                                                    libc::c_int
                                                                    as usize]
                 as libc::c_int - 26 as libc::c_int) as libc::c_short;
        (*(*pauseCtx).infoPanelVtx.offset(10 as libc::c_int as
                                              isize)).v.ob[1 as libc::c_int as
                                                               usize] =
            *fresh142
    }
    if (*pauseCtx).cursorSpecialPos as libc::c_int == 11 as libc::c_int &&
           (*pauseCtx).unk_1E4 as libc::c_int == 0 as libc::c_int {
        let ref mut fresh143 =
            (*(*pauseCtx).infoPanelVtx.offset(14 as libc::c_int as
                                                  isize)).v.ob[0 as
                                                                   libc::c_int
                                                                   as usize];
        *fresh143 =
            (*gGameInfo).data[(18 as libc::c_int * 6 as libc::c_int *
                                   16 as libc::c_int + 17 as libc::c_int) as
                                  usize];
        (*(*pauseCtx).infoPanelVtx.offset(12 as libc::c_int as
                                              isize)).v.ob[0 as libc::c_int as
                                                               usize] =
            *fresh143;
        let ref mut fresh144 =
            (*(*pauseCtx).infoPanelVtx.offset(15 as libc::c_int as
                                                  isize)).v.ob[0 as
                                                                   libc::c_int
                                                                   as usize];
        *fresh144 =
            ((*(*pauseCtx).infoPanelVtx.offset(12 as libc::c_int as
                                                   isize)).v.ob[0 as
                                                                    libc::c_int
                                                                    as usize]
                 as libc::c_int + 24 as libc::c_int) as libc::c_short;
        (*(*pauseCtx).infoPanelVtx.offset(13 as libc::c_int as
                                              isize)).v.ob[0 as libc::c_int as
                                                               usize] =
            *fresh144;
        let ref mut fresh145 =
            (*(*pauseCtx).infoPanelVtx.offset(13 as libc::c_int as
                                                  isize)).v.ob[1 as
                                                                   libc::c_int
                                                                   as usize];
        *fresh145 =
            (*gGameInfo).data[(18 as libc::c_int * 6 as libc::c_int *
                                   16 as libc::c_int + 18 as libc::c_int) as
                                  usize];
        (*(*pauseCtx).infoPanelVtx.offset(12 as libc::c_int as
                                              isize)).v.ob[1 as libc::c_int as
                                                               usize] =
            *fresh145;
        let ref mut fresh146 =
            (*(*pauseCtx).infoPanelVtx.offset(15 as libc::c_int as
                                                  isize)).v.ob[1 as
                                                                   libc::c_int
                                                                   as usize];
        *fresh146 =
            ((*(*pauseCtx).infoPanelVtx.offset(12 as libc::c_int as
                                                   isize)).v.ob[1 as
                                                                    libc::c_int
                                                                    as usize]
                 as libc::c_int - 32 as libc::c_int) as libc::c_short;
        (*(*pauseCtx).infoPanelVtx.offset(14 as libc::c_int as
                                              isize)).v.ob[1 as libc::c_int as
                                                               usize] =
            *fresh146
    } else {
        let ref mut fresh147 =
            (*(*pauseCtx).infoPanelVtx.offset(14 as libc::c_int as
                                                  isize)).v.ob[0 as
                                                                   libc::c_int
                                                                   as usize];
        *fresh147 =
            ((*gGameInfo).data[(18 as libc::c_int * 6 as libc::c_int *
                                    16 as libc::c_int + 17 as libc::c_int) as
                                   usize] as libc::c_int + 3 as libc::c_int)
                as libc::c_short;
        (*(*pauseCtx).infoPanelVtx.offset(12 as libc::c_int as
                                              isize)).v.ob[0 as libc::c_int as
                                                               usize] =
            *fresh147;
        let ref mut fresh148 =
            (*(*pauseCtx).infoPanelVtx.offset(15 as libc::c_int as
                                                  isize)).v.ob[0 as
                                                                   libc::c_int
                                                                   as usize];
        *fresh148 =
            ((*(*pauseCtx).infoPanelVtx.offset(12 as libc::c_int as
                                                   isize)).v.ob[0 as
                                                                    libc::c_int
                                                                    as usize]
                 as libc::c_int + 18 as libc::c_int) as libc::c_short;
        (*(*pauseCtx).infoPanelVtx.offset(13 as libc::c_int as
                                              isize)).v.ob[0 as libc::c_int as
                                                               usize] =
            *fresh148;
        let ref mut fresh149 =
            (*(*pauseCtx).infoPanelVtx.offset(13 as libc::c_int as
                                                  isize)).v.ob[1 as
                                                                   libc::c_int
                                                                   as usize];
        *fresh149 =
            ((*gGameInfo).data[(18 as libc::c_int * 6 as libc::c_int *
                                    16 as libc::c_int + 18 as libc::c_int) as
                                   usize] as libc::c_int - 3 as libc::c_int)
                as libc::c_short;
        (*(*pauseCtx).infoPanelVtx.offset(12 as libc::c_int as
                                              isize)).v.ob[1 as libc::c_int as
                                                               usize] =
            *fresh149;
        let ref mut fresh150 =
            (*(*pauseCtx).infoPanelVtx.offset(15 as libc::c_int as
                                                  isize)).v.ob[1 as
                                                                   libc::c_int
                                                                   as usize];
        *fresh150 =
            ((*(*pauseCtx).infoPanelVtx.offset(12 as libc::c_int as
                                                   isize)).v.ob[1 as
                                                                    libc::c_int
                                                                    as usize]
                 as libc::c_int - 26 as libc::c_int) as libc::c_short;
        (*(*pauseCtx).infoPanelVtx.offset(14 as libc::c_int as
                                              isize)).v.ob[1 as libc::c_int as
                                                               usize] =
            *fresh150
    }
    let ref mut fresh151 =
        (*(*pauseCtx).infoPanelVtx.offset(15 as libc::c_int as
                                              isize)).v.tc[0 as libc::c_int as
                                                               usize];
    *fresh151 = 0x300 as libc::c_int as libc::c_short;
    let ref mut fresh152 =
        (*(*pauseCtx).infoPanelVtx.offset(13 as libc::c_int as
                                              isize)).v.tc[0 as libc::c_int as
                                                               usize];
    *fresh152 = *fresh151;
    let ref mut fresh153 =
        (*(*pauseCtx).infoPanelVtx.offset(11 as libc::c_int as
                                              isize)).v.tc[0 as libc::c_int as
                                                               usize];
    *fresh153 = *fresh152;
    (*(*pauseCtx).infoPanelVtx.offset(9 as libc::c_int as
                                          isize)).v.tc[0 as libc::c_int as
                                                           usize] = *fresh153;
    let ref mut fresh154 =
        (*(*pauseCtx).infoPanelVtx.offset(15 as libc::c_int as
                                              isize)).v.tc[1 as libc::c_int as
                                                               usize];
    *fresh154 = 0x400 as libc::c_int as libc::c_short;
    let ref mut fresh155 =
        (*(*pauseCtx).infoPanelVtx.offset(14 as libc::c_int as
                                              isize)).v.tc[1 as libc::c_int as
                                                               usize];
    *fresh155 = *fresh154;
    let ref mut fresh156 =
        (*(*pauseCtx).infoPanelVtx.offset(11 as libc::c_int as
                                              isize)).v.tc[1 as libc::c_int as
                                                               usize];
    *fresh156 = *fresh155;
    (*(*pauseCtx).infoPanelVtx.offset(10 as libc::c_int as
                                          isize)).v.tc[1 as libc::c_int as
                                                           usize] = *fresh156;
    let fresh157 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g: *mut Gfx = fresh157;
    (*_g).words.w0 =
        (0xfc as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (((1 as libc::c_int as u32_0 &
                   (((0x1 as libc::c_int) << 4 as libc::c_int) -
                        1 as libc::c_int) as libc::c_uint) <<
                  20 as libc::c_int |
                  (3 as libc::c_int as u32_0 &
                       (((0x1 as libc::c_int) << 5 as libc::c_int) -
                            1 as libc::c_int) as libc::c_uint) <<
                      15 as libc::c_int |
                  (1 as libc::c_int as u32_0 &
                       (((0x1 as libc::c_int) << 3 as libc::c_int) -
                            1 as libc::c_int) as libc::c_uint) <<
                      12 as libc::c_int |
                  (3 as libc::c_int as u32_0 &
                       (((0x1 as libc::c_int) << 3 as libc::c_int) -
                            1 as libc::c_int) as libc::c_uint) <<
                      9 as libc::c_int |
                  ((1 as libc::c_int as u32_0 &
                        (((0x1 as libc::c_int) << 4 as libc::c_int) -
                             1 as libc::c_int) as libc::c_uint) <<
                       5 as libc::c_int |
                       (3 as libc::c_int as u32_0 &
                            (((0x1 as libc::c_int) << 5 as libc::c_int) -
                                 1 as libc::c_int) as libc::c_uint) <<
                           0 as libc::c_int)) &
                 (((0x1 as libc::c_int) << 24 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g).words.w1 =
        (31 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 4 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 28 as libc::c_int |
            (31 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 3 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 15 as libc::c_int
            |
            (7 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 3 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 12 as libc::c_int
            |
            (7 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 3 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 9 as libc::c_int |
            ((31 as libc::c_int as u32_0 &
                  (((0x1 as libc::c_int) << 4 as libc::c_int) -
                       1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int
                 |
                 (1 as libc::c_int as u32_0 &
                      (((0x1 as libc::c_int) << 3 as libc::c_int) -
                           1 as libc::c_int) as libc::c_uint) <<
                     21 as libc::c_int |
                 (3 as libc::c_int as u32_0 &
                      (((0x1 as libc::c_int) << 3 as libc::c_int) -
                           1 as libc::c_int) as libc::c_uint) <<
                     18 as libc::c_int |
                 (31 as libc::c_int as u32_0 &
                      (((0x1 as libc::c_int) << 3 as libc::c_int) -
                           1 as libc::c_int) as libc::c_uint) <<
                     6 as libc::c_int |
                 (7 as libc::c_int as u32_0 &
                      (((0x1 as libc::c_int) << 3 as libc::c_int) -
                           1 as libc::c_int) as libc::c_uint) <<
                     3 as libc::c_int |
                 (7 as libc::c_int as u32_0 &
                      (((0x1 as libc::c_int) << 3 as libc::c_int) -
                           1 as libc::c_int) as libc::c_uint) <<
                     0 as libc::c_int);
    Matrix_Translate(0.0f32, 0.0f32, -144.0f32,
                     MTXMODE_NEW as libc::c_int as u8_0);
    Matrix_Scale(1.0f32, 1.0f32, 1.0f32,
                 MTXMODE_APPLY as libc::c_int as u8_0);
    let fresh158 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_0: *mut Gfx = fresh158;
    (*_g_0).words.w0 =
        (0xda as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            ((::std::mem::size_of::<Mtx>() as
                  libc::c_ulong).wrapping_sub(1 as libc::c_int as
                                                  libc::c_uint).wrapping_div(8
                                                                                 as
                                                                                 libc::c_int
                                                                                 as
                                                                                 libc::c_uint)
                 &
                 (((0x1 as libc::c_int) << 5 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 19 as libc::c_int
            |
            ((0 as libc::c_int / 8 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (((0 as libc::c_int | 0x2 as libc::c_int | 0 as libc::c_int) ^
                  0x1 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_0).words.w1 =
        Matrix_NewMtx((*globalCtx).state.gfxCtx,
                      b"../z_kaleido_scope_PAL.c\x00" as *const u8 as
                          *const libc::c_char as *mut libc::c_char,
                      1755 as libc::c_int) as libc::c_uint;
    let fresh159 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_1: *mut Gfx = fresh159;
    (*_g_1).words.w0 =
        (0xfa as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_1).words.w1 =
        (90 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (100 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (130 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (255 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh160 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_2: *mut Gfx = fresh160;
    (*_g_2).words.w0 =
        (0x1 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (16 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 12 as libc::c_int
            |
            ((0 as libc::c_int + 16 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 7 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 1 as libc::c_int;
    (*_g_2).words.w1 =
        &mut *(*pauseCtx).infoPanelVtx.offset(0 as libc::c_int as isize) as
            *mut Vtx as libc::c_uint;
    let fresh161 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_3: *mut Gfx = fresh161;
    (*_g_3).words.w0 =
        (0xde as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_3).words.w1 = gItemNamePanelDL.as_mut_ptr() as libc::c_uint;
    if (*pauseCtx).cursorSpecialPos as libc::c_int == 10 as libc::c_int &&
           (*pauseCtx).unk_1E4 as libc::c_int == 0 as libc::c_int {
        let fresh162 = (*__gfxCtx).polyOpa.p;
        (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
        let mut _g_4: *mut Gfx = fresh162;
        (*_g_4).words.w0 =
            (0xfa as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int
                |
                (0 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    8 as libc::c_int |
                (0 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int;
        (*_g_4).words.w1 =
            (D_808321A0 as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int
                |
                (D_808321A2 as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    16 as libc::c_int |
                (D_808321A4 as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    8 as libc::c_int |
                (D_808321A6 as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int
    }
    let fresh163 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_5: *mut Gfx = fresh163;
    (*_g_5).words.w0 =
        (0xde as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_5).words.w1 = gLButtonIconDL.as_mut_ptr() as libc::c_uint;
    let fresh164 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_6: *mut Gfx = fresh164;
    (*_g_6).words.w0 =
        (0xfa as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_6).words.w1 =
        (180 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (210 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (255 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (220 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    if (*pauseCtx).cursorSpecialPos as libc::c_int == 11 as libc::c_int &&
           (*pauseCtx).unk_1E4 as libc::c_int == 0 as libc::c_int {
        let fresh165 = (*__gfxCtx).polyOpa.p;
        (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
        let mut _g_7: *mut Gfx = fresh165;
        (*_g_7).words.w0 =
            (0xfa as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int
                |
                (0 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    8 as libc::c_int |
                (0 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int;
        (*_g_7).words.w1 =
            (D_808321A0 as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int
                |
                (D_808321A2 as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    16 as libc::c_int |
                (D_808321A4 as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    8 as libc::c_int |
                (D_808321A6 as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int
    }
    let fresh166 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_8: *mut Gfx = fresh166;
    (*_g_8).words.w0 =
        (0xde as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_8).words.w1 = gRButtonIconDL.as_mut_ptr() as libc::c_uint;
    if (*pauseCtx).cursorSpecialPos as libc::c_int != 0 as libc::c_int {
        j =
            ((*pauseCtx).cursorSpecialPos as libc::c_int * 4 as libc::c_int -
                 32 as libc::c_int) as s16;
        (*(*pauseCtx).cursorVtx.offset(0 as libc::c_int as
                                           isize)).v.ob[0 as libc::c_int as
                                                            usize] =
            (*(*pauseCtx).infoPanelVtx.offset(j as
                                                  isize)).v.ob[0 as
                                                                   libc::c_int
                                                                   as usize];
        (*(*pauseCtx).cursorVtx.offset(0 as libc::c_int as
                                           isize)).v.ob[1 as libc::c_int as
                                                            usize] =
            (*(*pauseCtx).infoPanelVtx.offset(j as
                                                  isize)).v.ob[1 as
                                                                   libc::c_int
                                                                   as usize];
        KaleidoScope_DrawCursor(globalCtx, (*pauseCtx).pageIndex);
    }
    temp =
        ((*pauseCtx).infoPanelOffsetY as libc::c_int - 80 as libc::c_int) as
            s16;
    let ref mut fresh167 =
        (*(*pauseCtx).infoPanelVtx.offset(17 as libc::c_int as
                                              isize)).v.ob[1 as libc::c_int as
                                                               usize];
    *fresh167 = temp;
    (*(*pauseCtx).infoPanelVtx.offset(16 as libc::c_int as
                                          isize)).v.ob[1 as libc::c_int as
                                                           usize] = *fresh167;
    let ref mut fresh168 =
        (*(*pauseCtx).infoPanelVtx.offset(19 as libc::c_int as
                                              isize)).v.ob[1 as libc::c_int as
                                                               usize];
    *fresh168 =
        ((*(*pauseCtx).infoPanelVtx.offset(16 as libc::c_int as
                                               isize)).v.ob[1 as libc::c_int
                                                                as usize] as
             libc::c_int - 16 as libc::c_int) as libc::c_short;
    (*(*pauseCtx).infoPanelVtx.offset(18 as libc::c_int as
                                          isize)).v.ob[1 as libc::c_int as
                                                           usize] = *fresh168;
    let ref mut fresh169 =
        (*(*pauseCtx).infoPanelVtx.offset(19 as libc::c_int as
                                              isize)).v.tc[1 as libc::c_int as
                                                               usize];
    *fresh169 = 0x200 as libc::c_int as libc::c_short;
    (*(*pauseCtx).infoPanelVtx.offset(18 as libc::c_int as
                                          isize)).v.tc[1 as libc::c_int as
                                                           usize] = *fresh169;
    let fresh170 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_9: *mut Gfx = fresh170;
    (*_g_9).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_9).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh171 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_10: *mut Gfx = fresh171;
    (*_g_10).words.w0 =
        (0xfc as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (((3 as libc::c_int as u32_0 &
                   (((0x1 as libc::c_int) << 4 as libc::c_int) -
                        1 as libc::c_int) as libc::c_uint) <<
                  20 as libc::c_int |
                  (1 as libc::c_int as u32_0 &
                       (((0x1 as libc::c_int) << 5 as libc::c_int) -
                            1 as libc::c_int) as libc::c_uint) <<
                      15 as libc::c_int |
                  (1 as libc::c_int as u32_0 &
                       (((0x1 as libc::c_int) << 3 as libc::c_int) -
                            1 as libc::c_int) as libc::c_uint) <<
                      12 as libc::c_int |
                  (3 as libc::c_int as u32_0 &
                       (((0x1 as libc::c_int) << 3 as libc::c_int) -
                            1 as libc::c_int) as libc::c_uint) <<
                      9 as libc::c_int |
                  ((3 as libc::c_int as u32_0 &
                        (((0x1 as libc::c_int) << 4 as libc::c_int) -
                             1 as libc::c_int) as libc::c_uint) <<
                       5 as libc::c_int |
                       (1 as libc::c_int as u32_0 &
                            (((0x1 as libc::c_int) << 5 as libc::c_int) -
                                 1 as libc::c_int) as libc::c_uint) <<
                           0 as libc::c_int)) &
                 (((0x1 as libc::c_int) << 24 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_10).words.w1 =
        (5 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 4 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 28 as libc::c_int |
            (5 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 3 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 15 as libc::c_int
            |
            (7 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 3 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 12 as libc::c_int
            |
            (7 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 3 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 9 as libc::c_int |
            ((5 as libc::c_int as u32_0 &
                  (((0x1 as libc::c_int) << 4 as libc::c_int) -
                       1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int
                 |
                 (1 as libc::c_int as u32_0 &
                      (((0x1 as libc::c_int) << 3 as libc::c_int) -
                           1 as libc::c_int) as libc::c_uint) <<
                     21 as libc::c_int |
                 (3 as libc::c_int as u32_0 &
                      (((0x1 as libc::c_int) << 3 as libc::c_int) -
                           1 as libc::c_int) as libc::c_uint) <<
                     18 as libc::c_int |
                 (5 as libc::c_int as u32_0 &
                      (((0x1 as libc::c_int) << 3 as libc::c_int) -
                           1 as libc::c_int) as libc::c_uint) <<
                     6 as libc::c_int |
                 (7 as libc::c_int as u32_0 &
                      (((0x1 as libc::c_int) << 3 as libc::c_int) -
                           1 as libc::c_int) as libc::c_uint) <<
                     3 as libc::c_int |
                 (7 as libc::c_int as u32_0 &
                      (((0x1 as libc::c_int) << 3 as libc::c_int) -
                           1 as libc::c_int) as libc::c_uint) <<
                     0 as libc::c_int);
    let fresh172 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_11: *mut Gfx = fresh172;
    (*_g_11).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_11).words.w1 =
        (20 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (30 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (40 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    if (*pauseCtx).state as libc::c_int == 6 as libc::c_int &&
           (*pauseCtx).namedItem as libc::c_int != 999 as libc::c_int &&
           ((*pauseCtx).nameDisplayTimer as libc::c_int) <
               (*gGameInfo).data[(18 as libc::c_int * 6 as libc::c_int *
                                      16 as libc::c_int + 89 as libc::c_int)
                                     as usize] as libc::c_int &&
           ((*pauseCtx).unk_1E4 == 0 ||
                (*pauseCtx).unk_1E4 as libc::c_int == 2 as libc::c_int ||
                (*pauseCtx).unk_1E4 as libc::c_int >= 4 as libc::c_int &&
                    (*pauseCtx).unk_1E4 as libc::c_int <= 7 as libc::c_int ||
                (*pauseCtx).unk_1E4 as libc::c_int == 8 as libc::c_int) &&
           (*pauseCtx).cursorSpecialPos as libc::c_int == 0 as libc::c_int {
        if (*pauseCtx).unk_1E4 == 0 ||
               (*pauseCtx).unk_1E4 as libc::c_int == 2 as libc::c_int ||
               (*pauseCtx).unk_1E4 as libc::c_int >= 4 as libc::c_int &&
                   (*pauseCtx).unk_1E4 as libc::c_int <= 7 as libc::c_int ||
               (*pauseCtx).unk_1E4 as libc::c_int == 8 as libc::c_int {
            let ref mut fresh173 =
                (*(*pauseCtx).infoPanelVtx.offset(18 as libc::c_int as
                                                      isize)).v.ob[0 as
                                                                       libc::c_int
                                                                       as
                                                                       usize];
            *fresh173 = -(63 as libc::c_int) as libc::c_short;
            (*(*pauseCtx).infoPanelVtx.offset(16 as libc::c_int as
                                                  isize)).v.ob[0 as
                                                                   libc::c_int
                                                                   as usize] =
                *fresh173;
            let ref mut fresh174 =
                (*(*pauseCtx).infoPanelVtx.offset(19 as libc::c_int as
                                                      isize)).v.ob[0 as
                                                                       libc::c_int
                                                                       as
                                                                       usize];
            *fresh174 =
                ((*(*pauseCtx).infoPanelVtx.offset(16 as libc::c_int as
                                                       isize)).v.ob[0 as
                                                                        libc::c_int
                                                                        as
                                                                        usize]
                     as libc::c_int + 128 as libc::c_int) as libc::c_short;
            (*(*pauseCtx).infoPanelVtx.offset(17 as libc::c_int as
                                                  isize)).v.ob[0 as
                                                                   libc::c_int
                                                                   as usize] =
                *fresh174;
            let ref mut fresh175 =
                (*(*pauseCtx).infoPanelVtx.offset(19 as libc::c_int as
                                                      isize)).v.tc[0 as
                                                                       libc::c_int
                                                                       as
                                                                       usize];
            *fresh175 = 0x1000 as libc::c_int as libc::c_short;
            (*(*pauseCtx).infoPanelVtx.offset(17 as libc::c_int as
                                                  isize)).v.tc[0 as
                                                                   libc::c_int
                                                                   as usize] =
                *fresh175;
            let fresh176 = (*__gfxCtx).polyOpa.p;
            (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
            let mut _g_12: *mut Gfx = fresh176;
            (*_g_12).words.w0 =
                (0x1 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    24 as libc::c_int |
                    (4 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        12 as libc::c_int |
                    ((0 as libc::c_int + 4 as libc::c_int) as u32_0 &
                         (((0x1 as libc::c_int) << 7 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        1 as libc::c_int;
            (*_g_12).words.w1 =
                &mut *(*pauseCtx).infoPanelVtx.offset(16 as libc::c_int as
                                                          isize) as *mut Vtx
                    as libc::c_uint;
            if (*pauseCtx).nameColorSet as libc::c_int == 1 as libc::c_int {
                let fresh177 = (*__gfxCtx).polyOpa.p;
                (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
                let mut _g_13: *mut Gfx = fresh177;
                (*_g_13).words.w0 =
                    (0xfa as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        24 as libc::c_int |
                        (0 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            8 as libc::c_int |
                        (0 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            0 as libc::c_int;
                (*_g_13).words.w1 =
                    (70 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        24 as libc::c_int |
                        (70 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            16 as libc::c_int |
                        (70 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            8 as libc::c_int |
                        (255 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            0 as libc::c_int
            } else {
                let fresh178 = (*__gfxCtx).polyOpa.p;
                (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
                let mut _g_14: *mut Gfx = fresh178;
                (*_g_14).words.w0 =
                    (0xfa as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        24 as libc::c_int |
                        (0 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            8 as libc::c_int |
                        (0 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            0 as libc::c_int;
                (*_g_14).words.w1 =
                    (255 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        24 as libc::c_int |
                        (255 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            16 as libc::c_int |
                        (255 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            8 as libc::c_int |
                        (255 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            0 as libc::c_int
            }
            (*__gfxCtx).polyOpa.p =
                KaleidoScope_QuadTextureIA4((*__gfxCtx).polyOpa.p,
                                            (*pauseCtx).nameSegment as
                                                *mut libc::c_void,
                                            128 as libc::c_int as s16,
                                            16 as libc::c_int as s16,
                                            0 as libc::c_int as u16_0)
        }
        if (*pauseCtx).pageIndex as libc::c_int == PAUSE_MAP as libc::c_int {
            if (*gGameInfo).data[(6 as libc::c_int * 6 as libc::c_int *
                                      16 as libc::c_int + 7 as libc::c_int) as
                                     usize] as libc::c_int != 0 as libc::c_int
               {
                osSyncPrintf(b"\x1b[33m\x00" as *const u8 as
                                 *const libc::c_char);
                osSyncPrintf(b"\xe3\x82\xad\xe3\x83\xb3\xe3\x82\xb9\xe3\x82\xbf\xe6\x95\xb0(%d) Get_KIN_STA=%x (%x)  (%x)\n\x00"
                                 as *const u8 as *const libc::c_char,
                             (*gGameInfo).data[(6 as libc::c_int *
                                                    6 as libc::c_int *
                                                    16 as libc::c_int +
                                                    6 as libc::c_int) as
                                                   usize] as libc::c_int,
                             (gSaveContext.gsFlags[((*gGameInfo).data[(6 as
                                                                           libc::c_int
                                                                           *
                                                                           6
                                                                               as
                                                                               libc::c_int
                                                                           *
                                                                           16
                                                                               as
                                                                               libc::c_int
                                                                           +
                                                                           6
                                                                               as
                                                                               libc::c_int)
                                                                          as
                                                                          usize]
                                                        as libc::c_int >>
                                                        2 as libc::c_int) as
                                                       usize] as libc::c_uint
                                  &
                                  gGsFlagsMasks[((*gGameInfo).data[(6 as
                                                                        libc::c_int
                                                                        *
                                                                        6 as
                                                                            libc::c_int
                                                                        *
                                                                        16 as
                                                                            libc::c_int
                                                                        +
                                                                        6 as
                                                                            libc::c_int)
                                                                       as
                                                                       usize]
                                                     as libc::c_int &
                                                     3 as libc::c_int) as
                                                    usize]) >>
                                 gGsFlagsShifts[((*gGameInfo).data[(6 as
                                                                        libc::c_int
                                                                        *
                                                                        6 as
                                                                            libc::c_int
                                                                        *
                                                                        16 as
                                                                            libc::c_int
                                                                        +
                                                                        6 as
                                                                            libc::c_int)
                                                                       as
                                                                       usize]
                                                     as libc::c_int &
                                                     3 as libc::c_int) as
                                                    usize],
                             gAreaGsFlags[(*gGameInfo).data[(6 as libc::c_int
                                                                 *
                                                                 6 as
                                                                     libc::c_int
                                                                 *
                                                                 16 as
                                                                     libc::c_int
                                                                 +
                                                                 6 as
                                                                     libc::c_int)
                                                                as usize] as
                                              usize] as libc::c_int,
                             gSaveContext.gsFlags[((*gGameInfo).data[(6 as
                                                                          libc::c_int
                                                                          *
                                                                          6 as
                                                                              libc::c_int
                                                                          *
                                                                          16
                                                                              as
                                                                              libc::c_int
                                                                          +
                                                                          6 as
                                                                              libc::c_int)
                                                                         as
                                                                         usize]
                                                       as libc::c_int >>
                                                       2 as libc::c_int) as
                                                      usize]);
                osSyncPrintf(b"\x1b[m\x00" as *const u8 as
                                 *const libc::c_char);
                (*gGameInfo).data[(6 as libc::c_int * 6 as libc::c_int *
                                       16 as libc::c_int + 7 as libc::c_int)
                                      as usize] = 0 as libc::c_int as s16;
                gSaveContext.gsFlags[(D_8082AE30[(*pauseCtx).cursorPoint[PAUSE_WORLD_MAP
                                                                             as
                                                                             libc::c_int
                                                                             as
                                                                             usize]
                                                     as usize] as libc::c_int
                                          >> 2 as libc::c_int) as usize] |=
                    (gAreaGsFlags[D_8082AE30[(*pauseCtx).cursorPoint[PAUSE_WORLD_MAP
                                                                         as
                                                                         libc::c_int
                                                                         as
                                                                         usize]
                                                 as usize] as usize] as
                         libc::c_int) <<
                        gGsFlagsShifts[(D_8082AE30[(*pauseCtx).cursorPoint[PAUSE_WORLD_MAP
                                                                               as
                                                                               libc::c_int
                                                                               as
                                                                               usize]
                                                       as usize] as
                                            libc::c_int & 3 as libc::c_int) as
                                           usize]
            }
        }
        if (*pauseCtx).pageIndex as libc::c_int == PAUSE_MAP as libc::c_int &&
               sInDungeonScene == 0 {
            if (gSaveContext.gsFlags[(D_8082AE30[(*pauseCtx).cursorPoint[PAUSE_WORLD_MAP
                                                                             as
                                                                             libc::c_int
                                                                             as
                                                                             usize]
                                                     as usize] as libc::c_int
                                          >> 2 as libc::c_int) as usize] as
                    libc::c_uint &
                    gGsFlagsMasks[(D_8082AE30[(*pauseCtx).cursorPoint[PAUSE_WORLD_MAP
                                                                          as
                                                                          libc::c_int
                                                                          as
                                                                          usize]
                                                  as usize] as libc::c_int &
                                       3 as libc::c_int) as usize]) >>
                   gGsFlagsShifts[(D_8082AE30[(*pauseCtx).cursorPoint[PAUSE_WORLD_MAP
                                                                          as
                                                                          libc::c_int
                                                                          as
                                                                          usize]
                                                  as usize] as libc::c_int &
                                       3 as libc::c_int) as usize] ==
                   gAreaGsFlags[D_8082AE30[(*pauseCtx).cursorPoint[PAUSE_WORLD_MAP
                                                                       as
                                                                       libc::c_int
                                                                       as
                                                                       usize]
                                               as usize] as usize] as
                       libc::c_uint {
                let ref mut fresh179 =
                    (*(*pauseCtx).infoPanelVtx.offset(26 as libc::c_int as
                                                          isize)).v.ob[0 as
                                                                           libc::c_int
                                                                           as
                                                                           usize];
                *fresh179 = -(74 as libc::c_int) as libc::c_short;
                (*(*pauseCtx).infoPanelVtx.offset(24 as libc::c_int as
                                                      isize)).v.ob[0 as
                                                                       libc::c_int
                                                                       as
                                                                       usize]
                    = *fresh179;
                let ref mut fresh180 =
                    (*(*pauseCtx).infoPanelVtx.offset(27 as libc::c_int as
                                                          isize)).v.ob[0 as
                                                                           libc::c_int
                                                                           as
                                                                           usize];
                *fresh180 =
                    ((*(*pauseCtx).infoPanelVtx.offset(24 as libc::c_int as
                                                           isize)).v.ob[0 as
                                                                            libc::c_int
                                                                            as
                                                                            usize]
                         as libc::c_int + 19 as libc::c_int) as libc::c_short;
                (*(*pauseCtx).infoPanelVtx.offset(25 as libc::c_int as
                                                      isize)).v.ob[0 as
                                                                       libc::c_int
                                                                       as
                                                                       usize]
                    = *fresh180;
                let ref mut fresh181 =
                    (*(*pauseCtx).infoPanelVtx.offset(25 as libc::c_int as
                                                          isize)).v.ob[1 as
                                                                           libc::c_int
                                                                           as
                                                                           usize];
                *fresh181 =
                    ((*(*pauseCtx).infoPanelVtx.offset(24 as libc::c_int as
                                                           isize)).v.ob[1 as
                                                                            libc::c_int
                                                                            as
                                                                            usize]
                         as libc::c_int - 2 as libc::c_int) as libc::c_short;
                (*(*pauseCtx).infoPanelVtx.offset(24 as libc::c_int as
                                                      isize)).v.ob[1 as
                                                                       libc::c_int
                                                                       as
                                                                       usize]
                    = *fresh181;
                let ref mut fresh182 =
                    (*(*pauseCtx).infoPanelVtx.offset(27 as libc::c_int as
                                                          isize)).v.ob[1 as
                                                                           libc::c_int
                                                                           as
                                                                           usize];
                *fresh182 =
                    ((*(*pauseCtx).infoPanelVtx.offset(24 as libc::c_int as
                                                           isize)).v.ob[1 as
                                                                            libc::c_int
                                                                            as
                                                                            usize]
                         as libc::c_int - 19 as libc::c_int) as libc::c_short;
                (*(*pauseCtx).infoPanelVtx.offset(26 as libc::c_int as
                                                      isize)).v.ob[1 as
                                                                       libc::c_int
                                                                       as
                                                                       usize]
                    = *fresh182;
                let ref mut fresh183 =
                    (*(*pauseCtx).infoPanelVtx.offset(27 as libc::c_int as
                                                          isize)).v.tc[0 as
                                                                           libc::c_int
                                                                           as
                                                                           usize];
                *fresh183 = 0x300 as libc::c_int as libc::c_short;
                (*(*pauseCtx).infoPanelVtx.offset(25 as libc::c_int as
                                                      isize)).v.tc[0 as
                                                                       libc::c_int
                                                                       as
                                                                       usize]
                    = *fresh183;
                let fresh184 = (*__gfxCtx).polyOpa.p;
                (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
                let mut _g_15: *mut Gfx = fresh184;
                (*_g_15).words.w0 =
                    (0xe7 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        24 as libc::c_int;
                (*_g_15).words.w1 = 0 as libc::c_int as libc::c_uint;
                let fresh185 = (*__gfxCtx).polyOpa.p;
                (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
                let mut _g_16: *mut Gfx = fresh185;
                (*_g_16).words.w0 =
                    (0x1 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        24 as libc::c_int |
                        (4 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            12 as libc::c_int |
                        ((0 as libc::c_int + 4 as libc::c_int) as u32_0 &
                             (((0x1 as libc::c_int) << 7 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            1 as libc::c_int;
                (*_g_16).words.w1 =
                    &mut *(*pauseCtx).infoPanelVtx.offset(24 as libc::c_int as
                                                              isize) as
                        *mut Vtx as libc::c_uint;
                let fresh186 = (*__gfxCtx).polyOpa.p;
                (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
                let mut _g_17: *mut Gfx = fresh186;
                (*_g_17).words.w0 =
                    (0xfc as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        24 as libc::c_int |
                        (((3 as libc::c_int as u32_0 &
                               (((0x1 as libc::c_int) << 4 as libc::c_int) -
                                    1 as libc::c_int) as libc::c_uint) <<
                              20 as libc::c_int |
                              (1 as libc::c_int as u32_0 &
                                   (((0x1 as libc::c_int) << 5 as libc::c_int)
                                        - 1 as libc::c_int) as libc::c_uint)
                                  << 15 as libc::c_int |
                              (1 as libc::c_int as u32_0 &
                                   (((0x1 as libc::c_int) << 3 as libc::c_int)
                                        - 1 as libc::c_int) as libc::c_uint)
                                  << 12 as libc::c_int |
                              (3 as libc::c_int as u32_0 &
                                   (((0x1 as libc::c_int) << 3 as libc::c_int)
                                        - 1 as libc::c_int) as libc::c_uint)
                                  << 9 as libc::c_int |
                              ((3 as libc::c_int as u32_0 &
                                    (((0x1 as libc::c_int) <<
                                          4 as libc::c_int) -
                                         1 as libc::c_int) as libc::c_uint) <<
                                   5 as libc::c_int |
                                   (1 as libc::c_int as u32_0 &
                                        (((0x1 as libc::c_int) <<
                                              5 as libc::c_int) -
                                             1 as libc::c_int) as
                                            libc::c_uint) <<
                                       0 as libc::c_int)) &
                             (((0x1 as libc::c_int) << 24 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            0 as libc::c_int;
                (*_g_17).words.w1 =
                    (5 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 4 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        28 as libc::c_int |
                        (5 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            15 as libc::c_int |
                        (7 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            12 as libc::c_int |
                        (7 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            9 as libc::c_int |
                        ((5 as libc::c_int as u32_0 &
                              (((0x1 as libc::c_int) << 4 as libc::c_int) -
                                   1 as libc::c_int) as libc::c_uint) <<
                             24 as libc::c_int |
                             (1 as libc::c_int as u32_0 &
                                  (((0x1 as libc::c_int) << 3 as libc::c_int)
                                       - 1 as libc::c_int) as libc::c_uint) <<
                                 21 as libc::c_int |
                             (3 as libc::c_int as u32_0 &
                                  (((0x1 as libc::c_int) << 3 as libc::c_int)
                                       - 1 as libc::c_int) as libc::c_uint) <<
                                 18 as libc::c_int |
                             (5 as libc::c_int as u32_0 &
                                  (((0x1 as libc::c_int) << 3 as libc::c_int)
                                       - 1 as libc::c_int) as libc::c_uint) <<
                                 6 as libc::c_int |
                             (7 as libc::c_int as u32_0 &
                                  (((0x1 as libc::c_int) << 3 as libc::c_int)
                                       - 1 as libc::c_int) as libc::c_uint) <<
                                 3 as libc::c_int |
                             (7 as libc::c_int as u32_0 &
                                  (((0x1 as libc::c_int) << 3 as libc::c_int)
                                       - 1 as libc::c_int) as libc::c_uint) <<
                                 0 as libc::c_int);
                let fresh187 = (*__gfxCtx).polyOpa.p;
                (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
                let mut _g_18: *mut Gfx = fresh187;
                (*_g_18).words.w0 =
                    (0xfa as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        24 as libc::c_int |
                        (0 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            8 as libc::c_int |
                        (0 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            0 as libc::c_int;
                (*_g_18).words.w1 =
                    (255 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        24 as libc::c_int |
                        (255 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            16 as libc::c_int |
                        (255 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            8 as libc::c_int |
                        ((*pauseCtx).alpha as u32_0 &
                             (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            0 as libc::c_int;
                let fresh188 = (*__gfxCtx).polyOpa.p;
                (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
                let mut _g_19: *mut Gfx = fresh188;
                (*_g_19).words.w0 =
                    (0xfb as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        24 as libc::c_int;
                (*_g_19).words.w1 =
                    (0 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        24 as libc::c_int |
                        (0 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            16 as libc::c_int |
                        (0 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            8 as libc::c_int |
                        (0 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            0 as libc::c_int;
                KaleidoScope_DrawQuadTextureRGBA32((*globalCtx).state.gfxCtx,
                                                   gGoldSkulltulaIconTex.as_mut_ptr()
                                                       as *mut libc::c_void,
                                                   24 as libc::c_int as u16_0,
                                                   24 as libc::c_int as u16_0,
                                                   0 as libc::c_int as u16_0);
            }
        }
    } else if ((*pauseCtx).unk_1E4 as libc::c_int) < 3 as libc::c_int ||
                  (*pauseCtx).unk_1E4 as libc::c_int == 7 as libc::c_int ||
                  (*pauseCtx).unk_1E4 as libc::c_int == 8 as libc::c_int {
        let ref mut fresh189 =
            (*(*pauseCtx).infoPanelVtx.offset(21 as libc::c_int as
                                                  isize)).v.ob[1 as
                                                                   libc::c_int
                                                                   as usize];
        *fresh189 = temp;
        (*(*pauseCtx).infoPanelVtx.offset(20 as libc::c_int as
                                              isize)).v.ob[1 as libc::c_int as
                                                               usize] =
            *fresh189;
        let ref mut fresh190 =
            (*(*pauseCtx).infoPanelVtx.offset(23 as libc::c_int as
                                                  isize)).v.ob[1 as
                                                                   libc::c_int
                                                                   as usize];
        *fresh190 =
            ((*(*pauseCtx).infoPanelVtx.offset(20 as libc::c_int as
                                                   isize)).v.ob[1 as
                                                                    libc::c_int
                                                                    as usize]
                 as libc::c_int - 16 as libc::c_int) as libc::c_short;
        (*(*pauseCtx).infoPanelVtx.offset(22 as libc::c_int as
                                              isize)).v.ob[1 as libc::c_int as
                                                               usize] =
            *fresh190;
        let ref mut fresh191 =
            (*(*pauseCtx).infoPanelVtx.offset(23 as libc::c_int as
                                                  isize)).v.tc[1 as
                                                                   libc::c_int
                                                                   as usize];
        *fresh191 = 0x200 as libc::c_int as libc::c_short;
        (*(*pauseCtx).infoPanelVtx.offset(22 as libc::c_int as
                                              isize)).v.tc[1 as libc::c_int as
                                                               usize] =
            *fresh191;
        let fresh192 = (*__gfxCtx).polyOpa.p;
        (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
        let mut _g_20: *mut Gfx = fresh192;
        (*_g_20).words.w0 =
            (0x1 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int
                |
                (8 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    12 as libc::c_int |
                ((0 as libc::c_int + 8 as libc::c_int) as u32_0 &
                     (((0x1 as libc::c_int) << 7 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    1 as libc::c_int;
        (*_g_20).words.w1 =
            &mut *(*pauseCtx).infoPanelVtx.offset(16 as libc::c_int as isize)
                as *mut Vtx as libc::c_uint;
        if (*pauseCtx).state as libc::c_int == 7 as libc::c_int {
            let ref mut fresh193 =
                (*(*pauseCtx).infoPanelVtx.offset(18 as libc::c_int as
                                                      isize)).v.ob[0 as
                                                                       libc::c_int
                                                                       as
                                                                       usize];
            *fresh193 =
                (*gGameInfo).data[(18 as libc::c_int * 6 as libc::c_int *
                                       16 as libc::c_int + 61 as libc::c_int +
                                       gSaveContext.language as libc::c_int)
                                      as usize];
            (*(*pauseCtx).infoPanelVtx.offset(16 as libc::c_int as
                                                  isize)).v.ob[0 as
                                                                   libc::c_int
                                                                   as usize] =
                *fresh193;
            let ref mut fresh194 =
                (*(*pauseCtx).infoPanelVtx.offset(19 as libc::c_int as
                                                      isize)).v.ob[0 as
                                                                       libc::c_int
                                                                       as
                                                                       usize];
            *fresh194 =
                ((*(*pauseCtx).infoPanelVtx.offset(16 as libc::c_int as
                                                       isize)).v.ob[0 as
                                                                        libc::c_int
                                                                        as
                                                                        usize]
                     as libc::c_int + 24 as libc::c_int) as libc::c_short;
            (*(*pauseCtx).infoPanelVtx.offset(17 as libc::c_int as
                                                  isize)).v.ob[0 as
                                                                   libc::c_int
                                                                   as usize] =
                *fresh194;
            let ref mut fresh195 =
                (*(*pauseCtx).infoPanelVtx.offset(22 as libc::c_int as
                                                      isize)).v.ob[0 as
                                                                       libc::c_int
                                                                       as
                                                                       usize];
            *fresh195 =
                ((*(*pauseCtx).infoPanelVtx.offset(16 as libc::c_int as
                                                       isize)).v.ob[0 as
                                                                        libc::c_int
                                                                        as
                                                                        usize]
                     as libc::c_int +
                     (*gGameInfo).data[(18 as libc::c_int * 6 as libc::c_int *
                                            16 as libc::c_int +
                                            52 as libc::c_int +
                                            gSaveContext.language as
                                                libc::c_int) as usize] as
                         libc::c_int) as libc::c_short;
            (*(*pauseCtx).infoPanelVtx.offset(20 as libc::c_int as
                                                  isize)).v.ob[0 as
                                                                   libc::c_int
                                                                   as usize] =
                *fresh195;
            let ref mut fresh196 =
                (*(*pauseCtx).infoPanelVtx.offset(23 as libc::c_int as
                                                      isize)).v.ob[0 as
                                                                       libc::c_int
                                                                       as
                                                                       usize];
            *fresh196 =
                ((*(*pauseCtx).infoPanelVtx.offset(20 as libc::c_int as
                                                       isize)).v.ob[0 as
                                                                        libc::c_int
                                                                        as
                                                                        usize]
                     as libc::c_int +
                     D_8082ADE0[gSaveContext.language as usize] as
                         libc::c_int) as libc::c_short;
            (*(*pauseCtx).infoPanelVtx.offset(21 as libc::c_int as
                                                  isize)).v.ob[0 as
                                                                   libc::c_int
                                                                   as usize] =
                *fresh196;
            let ref mut fresh197 =
                (*(*pauseCtx).infoPanelVtx.offset(19 as libc::c_int as
                                                      isize)).v.tc[0 as
                                                                       libc::c_int
                                                                       as
                                                                       usize];
            *fresh197 = 0x300 as libc::c_int as libc::c_short;
            (*(*pauseCtx).infoPanelVtx.offset(17 as libc::c_int as
                                                  isize)).v.tc[0 as
                                                                   libc::c_int
                                                                   as usize] =
                *fresh197;
            let ref mut fresh198 =
                (*(*pauseCtx).infoPanelVtx.offset(23 as libc::c_int as
                                                      isize)).v.tc[0 as
                                                                       libc::c_int
                                                                       as
                                                                       usize];
            *fresh198 =
                ((D_8082ADE0[gSaveContext.language as usize] as libc::c_int)
                     << 5 as libc::c_int) as libc::c_short;
            (*(*pauseCtx).infoPanelVtx.offset(21 as libc::c_int as
                                                  isize)).v.tc[0 as
                                                                   libc::c_int
                                                                   as usize] =
                *fresh198;
            let fresh199 = (*__gfxCtx).polyOpa.p;
            (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
            let mut _g_21: *mut Gfx = fresh199;
            (*_g_21).words.w0 =
                (0xde as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    24 as libc::c_int |
                    (0 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        16 as libc::c_int |
                    (0 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 16 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        0 as libc::c_int;
            (*_g_21).words.w1 = gAButtonIconDL.as_mut_ptr() as libc::c_uint;
            let fresh200 = (*__gfxCtx).polyOpa.p;
            (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
            let mut _g_22: *mut Gfx = fresh200;
            (*_g_22).words.w0 =
                (0xe7 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    24 as libc::c_int;
            (*_g_22).words.w1 = 0 as libc::c_int as libc::c_uint;
            let fresh201 = (*__gfxCtx).polyOpa.p;
            (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
            let mut _g_23: *mut Gfx = fresh201;
            (*_g_23).words.w0 =
                (0xfa as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    24 as libc::c_int |
                    (0 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        8 as libc::c_int |
                    (0 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        0 as libc::c_int;
            (*_g_23).words.w1 =
                (255 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    24 as libc::c_int |
                    (255 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        16 as libc::c_int |
                    (255 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        8 as libc::c_int |
                    (255 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        0 as libc::c_int;
            (*__gfxCtx).polyOpa.p =
                KaleidoScope_QuadTextureIA8((*__gfxCtx).polyOpa.p,
                                            D_8082AD60[gSaveContext.language
                                                           as usize],
                                            D_8082ADE0[gSaveContext.language
                                                           as usize] as s16,
                                            16 as libc::c_int as s16,
                                            4 as libc::c_int as u16_0)
        } else if (*pauseCtx).cursorSpecialPos as libc::c_int !=
                      0 as libc::c_int {
            if (*pauseCtx).state as libc::c_int == 6 as libc::c_int &&
                   (*pauseCtx).unk_1E4 as libc::c_int == 0 as libc::c_int {
                let ref mut fresh202 =
                    (*(*pauseCtx).infoPanelVtx.offset(18 as libc::c_int as
                                                          isize)).v.ob[0 as
                                                                           libc::c_int
                                                                           as
                                                                           usize];
                *fresh202 = -(63 as libc::c_int) as libc::c_short;
                (*(*pauseCtx).infoPanelVtx.offset(16 as libc::c_int as
                                                      isize)).v.ob[0 as
                                                                       libc::c_int
                                                                       as
                                                                       usize]
                    = *fresh202;
                let ref mut fresh203 =
                    (*(*pauseCtx).infoPanelVtx.offset(19 as libc::c_int as
                                                          isize)).v.ob[0 as
                                                                           libc::c_int
                                                                           as
                                                                           usize];
                *fresh203 =
                    ((*(*pauseCtx).infoPanelVtx.offset(16 as libc::c_int as
                                                           isize)).v.ob[0 as
                                                                            libc::c_int
                                                                            as
                                                                            usize]
                         as libc::c_int + 128 as libc::c_int) as
                        libc::c_short;
                (*(*pauseCtx).infoPanelVtx.offset(17 as libc::c_int as
                                                      isize)).v.ob[0 as
                                                                       libc::c_int
                                                                       as
                                                                       usize]
                    = *fresh203;
                let ref mut fresh204 =
                    (*(*pauseCtx).infoPanelVtx.offset(19 as libc::c_int as
                                                          isize)).v.tc[0 as
                                                                           libc::c_int
                                                                           as
                                                                           usize];
                *fresh204 = 0x1000 as libc::c_int as libc::c_short;
                (*(*pauseCtx).infoPanelVtx.offset(17 as libc::c_int as
                                                      isize)).v.tc[0 as
                                                                       libc::c_int
                                                                       as
                                                                       usize]
                    = *fresh204;
                let fresh205 = (*__gfxCtx).polyOpa.p;
                (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
                let mut _g_24: *mut Gfx = fresh205;
                (*_g_24).words.w0 =
                    (0xe7 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        24 as libc::c_int;
                (*_g_24).words.w1 = 0 as libc::c_int as libc::c_uint;
                let fresh206 = (*__gfxCtx).polyOpa.p;
                (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
                let mut _g_25: *mut Gfx = fresh206;
                (*_g_25).words.w0 =
                    (0xfa as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        24 as libc::c_int |
                        (0 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            8 as libc::c_int |
                        (0 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            0 as libc::c_int;
                (*_g_25).words.w1 =
                    (255 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        24 as libc::c_int |
                        (200 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            16 as libc::c_int |
                        (0 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            8 as libc::c_int |
                        (255 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            0 as libc::c_int;
                if (*pauseCtx).cursorSpecialPos as libc::c_int ==
                       10 as libc::c_int {
                    (*__gfxCtx).polyOpa.p =
                        KaleidoScope_QuadTextureIA8((*__gfxCtx).polyOpa.p,
                                                    D_8082AD78[(*pauseCtx).pageIndex
                                                                   as
                                                                   usize][gSaveContext.language
                                                                              as
                                                                              usize],
                                                    128 as libc::c_int as s16,
                                                    16 as libc::c_int as s16,
                                                    0 as libc::c_int as u16_0)
                } else {
                    (*__gfxCtx).polyOpa.p =
                        KaleidoScope_QuadTextureIA8((*__gfxCtx).polyOpa.p,
                                                    D_8082ADA8[(*pauseCtx).pageIndex
                                                                   as
                                                                   usize][gSaveContext.language
                                                                              as
                                                                              usize],
                                                    128 as libc::c_int as s16,
                                                    16 as libc::c_int as s16,
                                                    0 as libc::c_int as u16_0)
                }
            }
        } else if (*pauseCtx).pageIndex == 0 {
            // pageIndex == PAUSE_ITEM
            let ref mut fresh207 =
                (*(*pauseCtx).infoPanelVtx.offset(18 as libc::c_int as
                                                      isize)).v.ob[0 as
                                                                       libc::c_int
                                                                       as
                                                                       usize];
            *fresh207 =
                (*gGameInfo).data[(18 as libc::c_int * 6 as libc::c_int *
                                       16 as libc::c_int + 49 as libc::c_int +
                                       gSaveContext.language as libc::c_int)
                                      as usize];
            (*(*pauseCtx).infoPanelVtx.offset(16 as libc::c_int as
                                                  isize)).v.ob[0 as
                                                                   libc::c_int
                                                                   as usize] =
                *fresh207;
            let ref mut fresh208 =
                (*(*pauseCtx).infoPanelVtx.offset(19 as libc::c_int as
                                                      isize)).v.ob[0 as
                                                                       libc::c_int
                                                                       as
                                                                       usize];
            *fresh208 =
                ((*(*pauseCtx).infoPanelVtx.offset(16 as libc::c_int as
                                                       isize)).v.ob[0 as
                                                                        libc::c_int
                                                                        as
                                                                        usize]
                     as libc::c_int + 48 as libc::c_int) as libc::c_short;
            (*(*pauseCtx).infoPanelVtx.offset(17 as libc::c_int as
                                                  isize)).v.ob[0 as
                                                                   libc::c_int
                                                                   as usize] =
                *fresh208;
            let ref mut fresh209 =
                (*(*pauseCtx).infoPanelVtx.offset(22 as libc::c_int as
                                                      isize)).v.ob[0 as
                                                                       libc::c_int
                                                                       as
                                                                       usize];
            *fresh209 =
                ((*(*pauseCtx).infoPanelVtx.offset(16 as libc::c_int as
                                                       isize)).v.ob[0 as
                                                                        libc::c_int
                                                                        as
                                                                        usize]
                     as libc::c_int +
                     (*gGameInfo).data[(18 as libc::c_int * 6 as libc::c_int *
                                            16 as libc::c_int +
                                            58 as libc::c_int +
                                            gSaveContext.language as
                                                libc::c_int) as usize] as
                         libc::c_int) as libc::c_short;
            (*(*pauseCtx).infoPanelVtx.offset(20 as libc::c_int as
                                                  isize)).v.ob[0 as
                                                                   libc::c_int
                                                                   as usize] =
                *fresh209;
            let ref mut fresh210 =
                (*(*pauseCtx).infoPanelVtx.offset(23 as libc::c_int as
                                                      isize)).v.ob[0 as
                                                                       libc::c_int
                                                                       as
                                                                       usize];
            *fresh210 =
                ((*(*pauseCtx).infoPanelVtx.offset(20 as libc::c_int as
                                                       isize)).v.ob[0 as
                                                                        libc::c_int
                                                                        as
                                                                        usize]
                     as libc::c_int +
                     D_8082ADD8[gSaveContext.language as usize] as
                         libc::c_int) as libc::c_short;
            (*(*pauseCtx).infoPanelVtx.offset(21 as libc::c_int as
                                                  isize)).v.ob[0 as
                                                                   libc::c_int
                                                                   as usize] =
                *fresh210;
            let ref mut fresh211 =
                (*(*pauseCtx).infoPanelVtx.offset(19 as libc::c_int as
                                                      isize)).v.tc[0 as
                                                                       libc::c_int
                                                                       as
                                                                       usize];
            *fresh211 = 0x600 as libc::c_int as libc::c_short;
            (*(*pauseCtx).infoPanelVtx.offset(17 as libc::c_int as
                                                  isize)).v.tc[0 as
                                                                   libc::c_int
                                                                   as usize] =
                *fresh211;
            let ref mut fresh212 =
                (*(*pauseCtx).infoPanelVtx.offset(23 as libc::c_int as
                                                      isize)).v.tc[0 as
                                                                       libc::c_int
                                                                       as
                                                                       usize];
            *fresh212 =
                ((D_8082ADD8[gSaveContext.language as usize] as libc::c_int)
                     << 5 as libc::c_int) as libc::c_short;
            (*(*pauseCtx).infoPanelVtx.offset(21 as libc::c_int as
                                                  isize)).v.tc[0 as
                                                                   libc::c_int
                                                                   as usize] =
                *fresh212;
            let fresh213 = (*__gfxCtx).polyOpa.p;
            (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
            let mut _g_26: *mut Gfx = fresh213;
            (*_g_26).words.w0 =
                (0xde as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    24 as libc::c_int |
                    (0 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        16 as libc::c_int |
                    (0 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 16 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        0 as libc::c_int;
            (*_g_26).words.w1 = gCButtonIconsDL.as_mut_ptr() as libc::c_uint;
            let fresh214 = (*__gfxCtx).polyOpa.p;
            (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
            let mut _g_27: *mut Gfx = fresh214;
            (*_g_27).words.w0 =
                (0xe7 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    24 as libc::c_int;
            (*_g_27).words.w1 = 0 as libc::c_int as libc::c_uint;
            let fresh215 = (*__gfxCtx).polyOpa.p;
            (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
            let mut _g_28: *mut Gfx = fresh215;
            (*_g_28).words.w0 =
                (0xfa as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    24 as libc::c_int |
                    (0 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        8 as libc::c_int |
                    (0 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        0 as libc::c_int;
            (*_g_28).words.w1 =
                (255 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    24 as libc::c_int |
                    (255 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        16 as libc::c_int |
                    (255 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        8 as libc::c_int |
                    (255 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        0 as libc::c_int;
            (*__gfxCtx).polyOpa.p =
                KaleidoScope_QuadTextureIA8((*__gfxCtx).polyOpa.p,
                                            D_8082AD54[gSaveContext.language
                                                           as usize],
                                            D_8082ADD8[gSaveContext.language
                                                           as usize] as s16,
                                            16 as libc::c_int as s16,
                                            4 as libc::c_int as u16_0)
        } else if !((*pauseCtx).pageIndex as libc::c_int ==
                        PAUSE_MAP as libc::c_int &&
                        sInDungeonScene as libc::c_int != 0) {
            if (*pauseCtx).pageIndex as libc::c_int ==
                   PAUSE_QUEST as libc::c_int &&
                   (*pauseCtx).cursorSlot[PAUSE_QUEST as libc::c_int as usize]
                       as libc::c_int >= 6 as libc::c_int &&
                   (*pauseCtx).cursorSlot[PAUSE_QUEST as libc::c_int as usize]
                       as libc::c_int <= 0x11 as libc::c_int {
                if (*pauseCtx).namedItem as libc::c_int != 999 as libc::c_int
                   {
                    let ref mut fresh216 =
                        (*(*pauseCtx).infoPanelVtx.offset(18 as libc::c_int as
                                                              isize)).v.ob[0
                                                                               as
                                                                               libc::c_int
                                                                               as
                                                                               usize];
                    *fresh216 =
                        (*gGameInfo).data[(18 as libc::c_int *
                                               6 as libc::c_int *
                                               16 as libc::c_int +
                                               55 as libc::c_int +
                                               gSaveContext.language as
                                                   libc::c_int) as usize];
                    (*(*pauseCtx).infoPanelVtx.offset(16 as libc::c_int as
                                                          isize)).v.ob[0 as
                                                                           libc::c_int
                                                                           as
                                                                           usize]
                        = *fresh216;
                    let ref mut fresh217 =
                        (*(*pauseCtx).infoPanelVtx.offset(19 as libc::c_int as
                                                              isize)).v.ob[0
                                                                               as
                                                                               libc::c_int
                                                                               as
                                                                               usize];
                    *fresh217 =
                        ((*(*pauseCtx).infoPanelVtx.offset(16 as libc::c_int
                                                               as
                                                               isize)).v.ob[0
                                                                                as
                                                                                libc::c_int
                                                                                as
                                                                                usize]
                             as libc::c_int + 24 as libc::c_int) as
                            libc::c_short;
                    (*(*pauseCtx).infoPanelVtx.offset(17 as libc::c_int as
                                                          isize)).v.ob[0 as
                                                                           libc::c_int
                                                                           as
                                                                           usize]
                        = *fresh217;
                    let ref mut fresh218 =
                        (*(*pauseCtx).infoPanelVtx.offset(22 as libc::c_int as
                                                              isize)).v.ob[0
                                                                               as
                                                                               libc::c_int
                                                                               as
                                                                               usize];
                    *fresh218 =
                        ((*(*pauseCtx).infoPanelVtx.offset(16 as libc::c_int
                                                               as
                                                               isize)).v.ob[0
                                                                                as
                                                                                libc::c_int
                                                                                as
                                                                                usize]
                             as libc::c_int +
                             (*gGameInfo).data[(18 as libc::c_int *
                                                    6 as libc::c_int *
                                                    16 as libc::c_int +
                                                    52 as libc::c_int +
                                                    gSaveContext.language as
                                                        libc::c_int) as usize]
                                 as libc::c_int) as libc::c_short;
                    (*(*pauseCtx).infoPanelVtx.offset(20 as libc::c_int as
                                                          isize)).v.ob[0 as
                                                                           libc::c_int
                                                                           as
                                                                           usize]
                        = *fresh218;
                    if gSaveContext.language as libc::c_int ==
                           LANGUAGE_GER as libc::c_int {
                        let ref mut fresh219 =
                            (*(*pauseCtx).infoPanelVtx.offset(22 as
                                                                  libc::c_int
                                                                  as
                                                                  isize)).v.ob[0
                                                                                   as
                                                                                   libc::c_int
                                                                                   as
                                                                                   usize];
                        *fresh219 =
                            ((*(*pauseCtx).infoPanelVtx.offset(16 as
                                                                   libc::c_int
                                                                   as
                                                                   isize)).v.ob[0
                                                                                    as
                                                                                    libc::c_int
                                                                                    as
                                                                                    usize]
                                 as libc::c_int - 99 as libc::c_int) as
                                libc::c_short;
                        (*(*pauseCtx).infoPanelVtx.offset(20 as libc::c_int as
                                                              isize)).v.ob[0
                                                                               as
                                                                               libc::c_int
                                                                               as
                                                                               usize]
                            = *fresh219
                    }
                    let ref mut fresh220 =
                        (*(*pauseCtx).infoPanelVtx.offset(23 as libc::c_int as
                                                              isize)).v.ob[0
                                                                               as
                                                                               libc::c_int
                                                                               as
                                                                               usize];
                    *fresh220 =
                        ((*(*pauseCtx).infoPanelVtx.offset(20 as libc::c_int
                                                               as
                                                               isize)).v.ob[0
                                                                                as
                                                                                libc::c_int
                                                                                as
                                                                                usize]
                             as libc::c_int +
                             D_8082ADE8[gSaveContext.language as usize] as
                                 libc::c_int) as libc::c_short;
                    (*(*pauseCtx).infoPanelVtx.offset(21 as libc::c_int as
                                                          isize)).v.ob[0 as
                                                                           libc::c_int
                                                                           as
                                                                           usize]
                        = *fresh220;
                    let ref mut fresh221 =
                        (*(*pauseCtx).infoPanelVtx.offset(19 as libc::c_int as
                                                              isize)).v.tc[0
                                                                               as
                                                                               libc::c_int
                                                                               as
                                                                               usize];
                    *fresh221 = 0x300 as libc::c_int as libc::c_short;
                    (*(*pauseCtx).infoPanelVtx.offset(17 as libc::c_int as
                                                          isize)).v.tc[0 as
                                                                           libc::c_int
                                                                           as
                                                                           usize]
                        = *fresh221;
                    let ref mut fresh222 =
                        (*(*pauseCtx).infoPanelVtx.offset(23 as libc::c_int as
                                                              isize)).v.tc[0
                                                                               as
                                                                               libc::c_int
                                                                               as
                                                                               usize];
                    *fresh222 =
                        ((D_8082ADE8[gSaveContext.language as usize] as
                              libc::c_int) << 5 as libc::c_int) as
                            libc::c_short;
                    (*(*pauseCtx).infoPanelVtx.offset(21 as libc::c_int as
                                                          isize)).v.tc[0 as
                                                                           libc::c_int
                                                                           as
                                                                           usize]
                        = *fresh222;
                    let fresh223 = (*__gfxCtx).polyOpa.p;
                    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
                    let mut _g_29: *mut Gfx = fresh223;
                    (*_g_29).words.w0 =
                        (0xde as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            24 as libc::c_int |
                            (0 as libc::c_int as u32_0 &
                                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                      1 as libc::c_int) as libc::c_uint) <<
                                16 as libc::c_int |
                            (0 as libc::c_int as u32_0 &
                                 (((0x1 as libc::c_int) << 16 as libc::c_int)
                                      - 1 as libc::c_int) as libc::c_uint) <<
                                0 as libc::c_int;
                    (*_g_29).words.w1 =
                        gAButtonIconDL.as_mut_ptr() as libc::c_uint;
                    let fresh224 = (*__gfxCtx).polyOpa.p;
                    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
                    let mut _g_30: *mut Gfx = fresh224;
                    (*_g_30).words.w0 =
                        (0xe7 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            24 as libc::c_int;
                    (*_g_30).words.w1 = 0 as libc::c_int as libc::c_uint;
                    let fresh225 = (*__gfxCtx).polyOpa.p;
                    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
                    let mut _g_31: *mut Gfx = fresh225;
                    (*_g_31).words.w0 =
                        (0xfa as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            24 as libc::c_int |
                            (0 as libc::c_int as u32_0 &
                                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                      1 as libc::c_int) as libc::c_uint) <<
                                8 as libc::c_int |
                            (0 as libc::c_int as u32_0 &
                                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                      1 as libc::c_int) as libc::c_uint) <<
                                0 as libc::c_int;
                    (*_g_31).words.w1 =
                        (255 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            24 as libc::c_int |
                            (255 as libc::c_int as u32_0 &
                                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                      1 as libc::c_int) as libc::c_uint) <<
                                16 as libc::c_int |
                            (255 as libc::c_int as u32_0 &
                                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                      1 as libc::c_int) as libc::c_uint) <<
                                8 as libc::c_int |
                            (255 as libc::c_int as u32_0 &
                                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                      1 as libc::c_int) as libc::c_uint) <<
                                0 as libc::c_int;
                    (*__gfxCtx).polyOpa.p =
                        KaleidoScope_QuadTextureIA8((*__gfxCtx).polyOpa.p,
                                                    D_8082AD6C[gSaveContext.language
                                                                   as usize],
                                                    D_8082ADE8[gSaveContext.language
                                                                   as usize]
                                                        as s16,
                                                    16 as libc::c_int as s16,
                                                    4 as libc::c_int as u16_0)
                }
            } else if (*pauseCtx).pageIndex as libc::c_int ==
                          PAUSE_EQUIP as libc::c_int {
                let ref mut fresh226 =
                    (*(*pauseCtx).infoPanelVtx.offset(18 as libc::c_int as
                                                          isize)).v.ob[0 as
                                                                           libc::c_int
                                                                           as
                                                                           usize];
                *fresh226 =
                    (*gGameInfo).data[(18 as libc::c_int * 6 as libc::c_int *
                                           16 as libc::c_int +
                                           64 as libc::c_int +
                                           gSaveContext.language as
                                               libc::c_int) as usize];
                (*(*pauseCtx).infoPanelVtx.offset(16 as libc::c_int as
                                                      isize)).v.ob[0 as
                                                                       libc::c_int
                                                                       as
                                                                       usize]
                    = *fresh226;
                let ref mut fresh227 =
                    (*(*pauseCtx).infoPanelVtx.offset(19 as libc::c_int as
                                                          isize)).v.ob[0 as
                                                                           libc::c_int
                                                                           as
                                                                           usize];
                *fresh227 =
                    ((*(*pauseCtx).infoPanelVtx.offset(16 as libc::c_int as
                                                           isize)).v.ob[0 as
                                                                            libc::c_int
                                                                            as
                                                                            usize]
                         as libc::c_int + 24 as libc::c_int) as libc::c_short;
                (*(*pauseCtx).infoPanelVtx.offset(17 as libc::c_int as
                                                      isize)).v.ob[0 as
                                                                       libc::c_int
                                                                       as
                                                                       usize]
                    = *fresh227;
                let ref mut fresh228 =
                    (*(*pauseCtx).infoPanelVtx.offset(22 as libc::c_int as
                                                          isize)).v.ob[0 as
                                                                           libc::c_int
                                                                           as
                                                                           usize];
                *fresh228 =
                    ((*(*pauseCtx).infoPanelVtx.offset(16 as libc::c_int as
                                                           isize)).v.ob[0 as
                                                                            libc::c_int
                                                                            as
                                                                            usize]
                         as libc::c_int +
                         (*gGameInfo).data[(18 as libc::c_int *
                                                6 as libc::c_int *
                                                16 as libc::c_int +
                                                52 as libc::c_int +
                                                gSaveContext.language as
                                                    libc::c_int) as usize] as
                             libc::c_int) as libc::c_short;
                (*(*pauseCtx).infoPanelVtx.offset(20 as libc::c_int as
                                                      isize)).v.ob[0 as
                                                                       libc::c_int
                                                                       as
                                                                       usize]
                    = *fresh228;
                let ref mut fresh229 =
                    (*(*pauseCtx).infoPanelVtx.offset(23 as libc::c_int as
                                                          isize)).v.ob[0 as
                                                                           libc::c_int
                                                                           as
                                                                           usize];
                *fresh229 =
                    ((*(*pauseCtx).infoPanelVtx.offset(20 as libc::c_int as
                                                           isize)).v.ob[0 as
                                                                            libc::c_int
                                                                            as
                                                                            usize]
                         as libc::c_int +
                         D_8082ADD8[gSaveContext.language as usize] as
                             libc::c_int) as libc::c_short;
                (*(*pauseCtx).infoPanelVtx.offset(21 as libc::c_int as
                                                      isize)).v.ob[0 as
                                                                       libc::c_int
                                                                       as
                                                                       usize]
                    = *fresh229;
                let ref mut fresh230 =
                    (*(*pauseCtx).infoPanelVtx.offset(19 as libc::c_int as
                                                          isize)).v.tc[0 as
                                                                           libc::c_int
                                                                           as
                                                                           usize];
                *fresh230 = 0x300 as libc::c_int as libc::c_short;
                (*(*pauseCtx).infoPanelVtx.offset(17 as libc::c_int as
                                                      isize)).v.tc[0 as
                                                                       libc::c_int
                                                                       as
                                                                       usize]
                    = *fresh230;
                let ref mut fresh231 =
                    (*(*pauseCtx).infoPanelVtx.offset(23 as libc::c_int as
                                                          isize)).v.tc[0 as
                                                                           libc::c_int
                                                                           as
                                                                           usize];
                *fresh231 =
                    ((D_8082ADD8[gSaveContext.language as usize] as
                          libc::c_int) << 5 as libc::c_int) as libc::c_short;
                (*(*pauseCtx).infoPanelVtx.offset(21 as libc::c_int as
                                                      isize)).v.tc[0 as
                                                                       libc::c_int
                                                                       as
                                                                       usize]
                    = *fresh231;
                let fresh232 = (*__gfxCtx).polyOpa.p;
                (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
                let mut _g_32: *mut Gfx = fresh232;
                (*_g_32).words.w0 =
                    (0xde as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        24 as libc::c_int |
                        (0 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            16 as libc::c_int |
                        (0 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 16 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            0 as libc::c_int;
                (*_g_32).words.w1 =
                    gAButtonIconDL.as_mut_ptr() as libc::c_uint;
                let fresh233 = (*__gfxCtx).polyOpa.p;
                (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
                let mut _g_33: *mut Gfx = fresh233;
                (*_g_33).words.w0 =
                    (0xe7 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        24 as libc::c_int;
                (*_g_33).words.w1 = 0 as libc::c_int as libc::c_uint;
                let fresh234 = (*__gfxCtx).polyOpa.p;
                (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
                let mut _g_34: *mut Gfx = fresh234;
                (*_g_34).words.w0 =
                    (0xfa as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        24 as libc::c_int |
                        (0 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            8 as libc::c_int |
                        (0 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            0 as libc::c_int;
                (*_g_34).words.w1 =
                    (255 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        24 as libc::c_int |
                        (255 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            16 as libc::c_int |
                        (255 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            8 as libc::c_int |
                        (255 as libc::c_int as u32_0 &
                             (((0x1 as libc::c_int) << 8 as libc::c_int) -
                                  1 as libc::c_int) as libc::c_uint) <<
                            0 as libc::c_int;
                (*__gfxCtx).polyOpa.p =
                    KaleidoScope_QuadTextureIA8((*__gfxCtx).polyOpa.p,
                                                D_8082AD54[gSaveContext.language
                                                               as usize],
                                                D_8082ADD8[gSaveContext.language
                                                               as usize] as
                                                    s16,
                                                16 as libc::c_int as s16,
                                                4 as libc::c_int as u16_0)
            }
        }
    }
    Graph_CloseDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                     b"../z_kaleido_scope_PAL.c\x00" as *const u8 as
                         *const libc::c_char, 2032 as libc::c_int);
}
#[no_mangle]
pub unsafe extern "C" fn KaleidoScope_UpdateNamePanel(mut globalCtx:
                                                          *mut GlobalContext) {
    let mut pauseCtx: *mut PauseContext = &mut (*globalCtx).pauseCtx;
    let mut sp2A: u16_0 = 0;
    if (*pauseCtx).namedItem as libc::c_int !=
           (*pauseCtx).cursorItem[(*pauseCtx).pageIndex as usize] as
               libc::c_int ||
           (*pauseCtx).pageIndex as libc::c_int == PAUSE_MAP as libc::c_int &&
               (*pauseCtx).cursorSpecialPos as libc::c_int != 0 as libc::c_int
       {
        (*pauseCtx).namedItem =
            (*pauseCtx).cursorItem[(*pauseCtx).pageIndex as usize];
        sp2A = (*pauseCtx).namedItem;
        osCreateMesgQueue(&mut (*pauseCtx).loadQueue,
                          &mut (*pauseCtx).loadMsg, 1 as libc::c_int);
        if (*pauseCtx).namedItem as libc::c_int != 999 as libc::c_int {
            if (*pauseCtx).pageIndex as libc::c_int ==
                   PAUSE_MAP as libc::c_int && sInDungeonScene == 0 {
                if gSaveContext.language != 0 {
                    sp2A = (sp2A as libc::c_int + 12 as libc::c_int) as u16_0
                }
                if gSaveContext.language as libc::c_int ==
                       LANGUAGE_FRA as libc::c_int {
                    sp2A = (sp2A as libc::c_int + 12 as libc::c_int) as u16_0
                }
                DmaMgr_SendRequest1((*pauseCtx).nameSegment as
                                        *mut libc::c_void,
                                    (_map_name_staticSegmentRomStart.as_mut_ptr()
                                         as
                                         u32_0).wrapping_add((sp2A as
                                                                  libc::c_int
                                                                  *
                                                                  0x400 as
                                                                      libc::c_int)
                                                                 as
                                                                 libc::c_uint),
                                    0x400 as libc::c_int as u32_0,
                                    b"../z_kaleido_scope_PAL.c\x00" as
                                        *const u8 as *const libc::c_char,
                                    2093 as libc::c_int);
            } else {
                osSyncPrintf(b"zoom_name=%d\n\x00" as *const u8 as
                                 *const libc::c_char,
                             (*pauseCtx).namedItem as libc::c_int);
                if gSaveContext.language != 0 {
                    sp2A = (sp2A as libc::c_int + 123 as libc::c_int) as u16_0
                }
                if gSaveContext.language as libc::c_int ==
                       LANGUAGE_FRA as libc::c_int {
                    sp2A = (sp2A as libc::c_int + 123 as libc::c_int) as u16_0
                }
                osSyncPrintf(b"J_N=%d  point=%d\n\x00" as *const u8 as
                                 *const libc::c_char,
                             gSaveContext.language as libc::c_int,
                             sp2A as libc::c_int);
                DmaMgr_SendRequest1((*pauseCtx).nameSegment as
                                        *mut libc::c_void,
                                    (_item_name_staticSegmentRomStart.as_mut_ptr()
                                         as
                                         u32_0).wrapping_add((sp2A as
                                                                  libc::c_int
                                                                  *
                                                                  0x400 as
                                                                      libc::c_int)
                                                                 as
                                                                 libc::c_uint),
                                    0x400 as libc::c_int as u32_0,
                                    b"../z_kaleido_scope_PAL.c\x00" as
                                        *const u8 as *const libc::c_char,
                                    2120 as libc::c_int);
            }
            (*pauseCtx).nameDisplayTimer = 0 as libc::c_int as u16_0
        }
    } else if (*pauseCtx).nameColorSet as libc::c_int == 0 as libc::c_int {
        if (*pauseCtx).pageIndex as libc::c_int == PAUSE_QUEST as libc::c_int
               &&
               (*pauseCtx).cursorSlot[PAUSE_QUEST as libc::c_int as usize] as
                   libc::c_int >= 6 as libc::c_int &&
               (*pauseCtx).cursorSlot[PAUSE_QUEST as libc::c_int as usize] as
                   libc::c_int <= 0x11 as libc::c_int &&
               (*pauseCtx).unk_1E4 as libc::c_int == 8 as libc::c_int ||
               (*pauseCtx).pageIndex as libc::c_int ==
                   PAUSE_ITEM as libc::c_int ||
               (*pauseCtx).pageIndex as libc::c_int ==
                   PAUSE_EQUIP as libc::c_int &&
                   (*pauseCtx).cursorX[PAUSE_EQUIP as libc::c_int as usize] as
                       libc::c_int != 0 as libc::c_int {
            if (*pauseCtx).namedItem as libc::c_int !=
                   ITEM_SOLD_OUT as libc::c_int {
                (*pauseCtx).nameDisplayTimer =
                    (*pauseCtx).nameDisplayTimer.wrapping_add(1);
                if (*pauseCtx).nameDisplayTimer as libc::c_int >
                       (*gGameInfo).data[(18 as libc::c_int * 6 as libc::c_int
                                              * 16 as libc::c_int +
                                              88 as libc::c_int) as usize] as
                           libc::c_int {
                    (*pauseCtx).nameDisplayTimer = 0 as libc::c_int as u16_0
                }
            }
        } else { (*pauseCtx).nameDisplayTimer = 0 as libc::c_int as u16_0 }
    } else { (*pauseCtx).nameDisplayTimer = 0 as libc::c_int as u16_0 };
}
#[no_mangle]
pub unsafe extern "C" fn func_808237B4(mut globalCtx: *mut GlobalContext,
                                       mut input: *mut Input) {
    let mut pauseCtx: *mut PauseContext = &mut (*globalCtx).pauseCtx;
    let mut cond: s32 = 0 as libc::c_int;
    let mut mode: s32 = 0;
    if (*gGameInfo).data[(10 as libc::c_int * 6 as libc::c_int *
                              16 as libc::c_int + 13 as libc::c_int) as usize]
           as libc::c_int != 0 &&
           !(!((*input).press.button as libc::c_int | !(0x20 as libc::c_int))
                 == 0 as libc::c_int) {
        cond = 1 as libc::c_int
    }
    if cond == 0 {
        mode = (*pauseCtx).mode as s32;
        (*pauseCtx).eye.x += D_8082ABAC[mode as usize];
        (*pauseCtx).eye.z += D_8082ABCC[mode as usize];
        if ((*pauseCtx).unk_1EA as libc::c_int) < 32 as libc::c_int {
            (*gGameInfo).data[(18 as libc::c_int * 6 as libc::c_int *
                                   16 as libc::c_int + 16 as libc::c_int) as
                                  usize] =
                ((*gGameInfo).data[(18 as libc::c_int * 6 as libc::c_int *
                                        16 as libc::c_int + 16 as libc::c_int)
                                       as usize] as libc::c_int -
                     (*gGameInfo).data[(18 as libc::c_int * 6 as libc::c_int *
                                            16 as libc::c_int +
                                            25 as libc::c_int) as usize] as
                         libc::c_int /
                         (*gGameInfo).data[(18 as libc::c_int *
                                                6 as libc::c_int *
                                                16 as libc::c_int +
                                                6 as libc::c_int) as usize] as
                             libc::c_int) as s16;
            (*gGameInfo).data[(18 as libc::c_int * 6 as libc::c_int *
                                   16 as libc::c_int + 17 as libc::c_int) as
                                  usize] =
                ((*gGameInfo).data[(18 as libc::c_int * 6 as libc::c_int *
                                        16 as libc::c_int + 17 as libc::c_int)
                                       as usize] as libc::c_int -
                     (*gGameInfo).data[(18 as libc::c_int * 6 as libc::c_int *
                                            16 as libc::c_int +
                                            26 as libc::c_int) as usize] as
                         libc::c_int /
                         (*gGameInfo).data[(18 as libc::c_int *
                                                6 as libc::c_int *
                                                16 as libc::c_int +
                                                6 as libc::c_int) as usize] as
                             libc::c_int) as s16
        } else {
            (*gGameInfo).data[(18 as libc::c_int * 6 as libc::c_int *
                                   16 as libc::c_int + 16 as libc::c_int) as
                                  usize] =
                ((*gGameInfo).data[(18 as libc::c_int * 6 as libc::c_int *
                                        16 as libc::c_int + 16 as libc::c_int)
                                       as usize] as libc::c_int +
                     (*gGameInfo).data[(18 as libc::c_int * 6 as libc::c_int *
                                            16 as libc::c_int +
                                            25 as libc::c_int) as usize] as
                         libc::c_int /
                         (*gGameInfo).data[(18 as libc::c_int *
                                                6 as libc::c_int *
                                                16 as libc::c_int +
                                                6 as libc::c_int) as usize] as
                             libc::c_int) as s16;
            (*gGameInfo).data[(18 as libc::c_int * 6 as libc::c_int *
                                   16 as libc::c_int + 17 as libc::c_int) as
                                  usize] =
                ((*gGameInfo).data[(18 as libc::c_int * 6 as libc::c_int *
                                        16 as libc::c_int + 17 as libc::c_int)
                                       as usize] as libc::c_int +
                     (*gGameInfo).data[(18 as libc::c_int * 6 as libc::c_int *
                                            16 as libc::c_int +
                                            26 as libc::c_int) as usize] as
                         libc::c_int /
                         (*gGameInfo).data[(18 as libc::c_int *
                                                6 as libc::c_int *
                                                16 as libc::c_int +
                                                6 as libc::c_int) as usize] as
                             libc::c_int) as s16
        }
        (*pauseCtx).unk_1EA =
            ((*pauseCtx).unk_1EA as libc::c_int + 4 as libc::c_int) as u16_0;
        if (*pauseCtx).unk_1EA as libc::c_int == 64 as libc::c_int {
            (*pauseCtx).unk_1EA = 0 as libc::c_int as u16_0;
            (*pauseCtx).pageIndex = D_8082ABEC[(*pauseCtx).mode as usize];
            (*pauseCtx).unk_1E4 = 0 as libc::c_int as u16_0
        }
    };
}
#[no_mangle]
pub unsafe extern "C" fn KaleidoScope_SetView(mut pauseCtx: *mut PauseContext,
                                              mut x: f32_0, mut y: f32_0,
                                              mut z: f32_0) {
    let mut eye: Vec3f = Vec3f{x: 0., y: 0., z: 0.,};
    let mut lookAt: Vec3f = Vec3f{x: 0., y: 0., z: 0.,};
    let mut up: Vec3f = Vec3f{x: 0., y: 0., z: 0.,};
    eye.x = x;
    eye.y = y;
    eye.z = z;
    lookAt.z = 0.0f32;
    lookAt.y = lookAt.z;
    lookAt.x = lookAt.y;
    up.z = 0.0f32;
    up.x = up.z;
    up.y = 1.0f32;
    func_800AA358(&mut (*pauseCtx).view, &mut eye, &mut lookAt, &mut up);
    func_800AAA50(&mut (*pauseCtx).view, 127 as libc::c_int);
}
static mut D_8082AE48: [[u8_0; 4]; 6] =
    [[10 as libc::c_int as u8_0, 70 as libc::c_int as u8_0,
      70 as libc::c_int as u8_0, 10 as libc::c_int as u8_0],
     [10 as libc::c_int as u8_0, 90 as libc::c_int as u8_0,
      90 as libc::c_int as u8_0, 10 as libc::c_int as u8_0],
     [80 as libc::c_int as u8_0, 140 as libc::c_int as u8_0,
      140 as libc::c_int as u8_0, 80 as libc::c_int as u8_0],
     [80 as libc::c_int as u8_0, 120 as libc::c_int as u8_0,
      120 as libc::c_int as u8_0, 80 as libc::c_int as u8_0],
     [80 as libc::c_int as u8_0, 140 as libc::c_int as u8_0,
      140 as libc::c_int as u8_0, 80 as libc::c_int as u8_0],
     [50 as libc::c_int as u8_0, 110 as libc::c_int as u8_0,
      110 as libc::c_int as u8_0, 50 as libc::c_int as u8_0]];
static mut D_8082AE60: [[u8_0; 4]; 6] =
    [[50 as libc::c_int as u8_0, 100 as libc::c_int as u8_0,
      100 as libc::c_int as u8_0, 50 as libc::c_int as u8_0],
     [50 as libc::c_int as u8_0, 100 as libc::c_int as u8_0,
      100 as libc::c_int as u8_0, 50 as libc::c_int as u8_0],
     [40 as libc::c_int as u8_0, 60 as libc::c_int as u8_0,
      60 as libc::c_int as u8_0, 40 as libc::c_int as u8_0],
     [80 as libc::c_int as u8_0, 120 as libc::c_int as u8_0,
      120 as libc::c_int as u8_0, 80 as libc::c_int as u8_0],
     [40 as libc::c_int as u8_0, 60 as libc::c_int as u8_0,
      60 as libc::c_int as u8_0, 40 as libc::c_int as u8_0],
     [50 as libc::c_int as u8_0, 110 as libc::c_int as u8_0,
      110 as libc::c_int as u8_0, 50 as libc::c_int as u8_0]];
static mut D_8082AE78: [[u8_0; 4]; 6] =
    [[80 as libc::c_int as u8_0, 130 as libc::c_int as u8_0,
      130 as libc::c_int as u8_0, 80 as libc::c_int as u8_0],
     [40 as libc::c_int as u8_0, 60 as libc::c_int as u8_0,
      60 as libc::c_int as u8_0, 40 as libc::c_int as u8_0],
     [30 as libc::c_int as u8_0, 60 as libc::c_int as u8_0,
      60 as libc::c_int as u8_0, 30 as libc::c_int as u8_0],
     [50 as libc::c_int as u8_0, 70 as libc::c_int as u8_0,
      70 as libc::c_int as u8_0, 50 as libc::c_int as u8_0],
     [30 as libc::c_int as u8_0, 60 as libc::c_int as u8_0,
      60 as libc::c_int as u8_0, 30 as libc::c_int as u8_0],
     [50 as libc::c_int as u8_0, 110 as libc::c_int as u8_0,
      110 as libc::c_int as u8_0, 50 as libc::c_int as u8_0]];
static mut D_8082AE90: [s16; 2] =
    [0 as libc::c_int as s16, 0 as libc::c_int as s16];
static mut D_8082AE94: [s16; 2] =
    [0 as libc::c_int as s16, 0 as libc::c_int as s16];
static mut D_8082AE98: [s16; 18] =
    [0xffdc as libc::c_int as s16, 0xc as libc::c_int as s16,
     0xffee as libc::c_int as s16, 0x46 as libc::c_int as s16,
     0x46 as libc::c_int as s16, 0x46 as libc::c_int as s16,
     0xffa8 as libc::c_int as s16, 0xffa8 as libc::c_int as s16,
     0xffa8 as libc::c_int as s16, 0xffa8 as libc::c_int as s16,
     0xffa8 as libc::c_int as s16, 0xffa8 as libc::c_int as s16,
     0xffa8 as libc::c_int as s16, 0xffa8 as libc::c_int as s16,
     0xff96 as libc::c_int as s16, 0xffc2 as libc::c_int as s16,
     0xffd8 as libc::c_int as s16, 0 as libc::c_int as s16];
static mut D_8082AEBC: [s16; 2] =
    [0 as libc::c_int as s16, 0 as libc::c_int as s16];
static mut D_8082AEC0: [s16; 32] =
    [0x2f as libc::c_int as s16, 0xffcf as libc::c_int as s16,
     0xffef as libc::c_int as s16, 0xfff1 as libc::c_int as s16,
     0xfff7 as libc::c_int as s16, 0x18 as libc::c_int as s16,
     0x2b as libc::c_int as s16, 0xe as libc::c_int as s16,
     0x9 as libc::c_int as s16, 0x26 as libc::c_int as s16,
     0x52 as libc::c_int as s16, 0x47 as libc::c_int as s16,
     0xffb4 as libc::c_int as s16, 0xffa9 as libc::c_int as s16,
     0xff94 as libc::c_int as s16, 0xffca as libc::c_int as s16,
     0xffa3 as libc::c_int as s16, 0xffbd as libc::c_int as s16,
     0xffc8 as libc::c_int as s16, 0xffdf as libc::c_int as s16,
     0xfff6 as libc::c_int as s16, 0x1 as libc::c_int as s16,
     0xe as libc::c_int as s16, 0x18 as libc::c_int as s16,
     0x23 as libc::c_int as s16, 0x3a as libc::c_int as s16,
     0x4a as libc::c_int as s16, 0x59 as libc::c_int as s16,
     0 as libc::c_int as s16, 0xffc6 as libc::c_int as s16,
     0x13 as libc::c_int as s16, 0x1c as libc::c_int as s16];
static mut D_8082AF00: [s16; 6] =
    [0xffb4 as libc::c_int as s16, 0xffc6 as libc::c_int as s16,
     0xa as libc::c_int as s16, 0xffc6 as libc::c_int as s16,
     0xa as libc::c_int as s16, 0 as libc::c_int as s16];
static mut D_8082AF0C: [s16; 2] =
    [0 as libc::c_int as s16, 0 as libc::c_int as s16];
static mut D_8082AF10: [s16; 2] =
    [0 as libc::c_int as s16, 0 as libc::c_int as s16];
static mut D_8082AF14: [s16; 18] =
    [0x30 as libc::c_int as s16, 0x30 as libc::c_int as s16,
     0x60 as libc::c_int as s16, 0x18 as libc::c_int as s16,
     0x18 as libc::c_int as s16, 0x18 as libc::c_int as s16,
     0x18 as libc::c_int as s16, 0x18 as libc::c_int as s16,
     0x18 as libc::c_int as s16, 0x18 as libc::c_int as s16,
     0x18 as libc::c_int as s16, 0x18 as libc::c_int as s16,
     0x18 as libc::c_int as s16, 0x18 as libc::c_int as s16,
     0x10 as libc::c_int as s16, 0x10 as libc::c_int as s16,
     0x18 as libc::c_int as s16, 0 as libc::c_int as s16];
static mut D_8082AF38: [s16; 2] =
    [0 as libc::c_int as s16, 0 as libc::c_int as s16];
static mut D_8082AF3C: [s16; 6] =
    [0x98 as libc::c_int as s16, 0x30 as libc::c_int as s16,
     0x30 as libc::c_int as s16, 0x30 as libc::c_int as s16,
     0x30 as libc::c_int as s16, 0 as libc::c_int as s16];
static mut D_8082AF48: [s16; 2] =
    [0 as libc::c_int as s16, 0 as libc::c_int as s16];
static mut D_8082AF4C: [s16; 2] =
    [0 as libc::c_int as s16, 0 as libc::c_int as s16];
static mut D_8082AF50: [s16; 18] =
    [0x1c as libc::c_int as s16, 0x1c as libc::c_int as s16,
     0x2e as libc::c_int as s16, 0x1c as libc::c_int as s16,
     0xfffe as libc::c_int as s16, 0xffe0 as libc::c_int as s16,
     0x32 as libc::c_int as s16, 0x24 as libc::c_int as s16,
     0x16 as libc::c_int as s16, 0x8 as libc::c_int as s16,
     0xfffa as libc::c_int as s16, 0xffec as libc::c_int as s16,
     0xffde as libc::c_int as s16, 0xffd0 as libc::c_int as s16,
     0x12 as libc::c_int as s16, 0x12 as libc::c_int as s16,
     0x32 as libc::c_int as s16, 0 as libc::c_int as s16];
static mut D_8082AF74: [s16; 2] =
    [0 as libc::c_int as s16, 0 as libc::c_int as s16];
static mut D_8082AF78: [s16; 32] =
    [0xf as libc::c_int as s16, 0x28 as libc::c_int as s16,
     0xb as libc::c_int as s16, 0x2d as libc::c_int as s16,
     0x34 as libc::c_int as s16, 0x25 as libc::c_int as s16,
     0x24 as libc::c_int as s16, 0x39 as libc::c_int as s16,
     0x36 as libc::c_int as s16, 0x21 as libc::c_int as s16,
     0x1f as libc::c_int as s16, 0x2d as libc::c_int as s16,
     0x20 as libc::c_int as s16, 0x2a as libc::c_int as s16,
     0x31 as libc::c_int as s16, 0xfff6 as libc::c_int as s16,
     0x1f as libc::c_int as s16, 0x1b as libc::c_int as s16,
     0xf as libc::c_int as s16, 0xffcf as libc::c_int as s16,
     0x8 as libc::c_int as s16, 0x26 as libc::c_int as s16,
     0x7 as libc::c_int as s16, 0x2f as libc::c_int as s16,
     0x1e as libc::c_int as s16, 0x1 as libc::c_int as s16,
     0xfff7 as libc::c_int as s16, 0x19 as libc::c_int as s16,
     0 as libc::c_int as s16, 0x1 as libc::c_int as s16,
     0xffe0 as libc::c_int as s16, 0xffe6 as libc::c_int as s16];
static mut D_8082AFB8: [s16; 6] =
    [0x24 as libc::c_int as s16, 0xa as libc::c_int as s16,
     0xa as libc::c_int as s16, 0xfffa as libc::c_int as s16,
     0xfffa as libc::c_int as s16, 0 as libc::c_int as s16];
static mut D_8082AFC4: [s16; 2] =
    [0 as libc::c_int as s16, 0 as libc::c_int as s16];
static mut D_8082AFC8: [s16; 2] =
    [0 as libc::c_int as s16, 0 as libc::c_int as s16];
static mut D_8082AFCC: [s16; 18] =
    [0x55 as libc::c_int as s16, 0x55 as libc::c_int as s16,
     0x10 as libc::c_int as s16, 0x18 as libc::c_int as s16,
     0x18 as libc::c_int as s16, 0x18 as libc::c_int as s16,
     0x10 as libc::c_int as s16, 0x10 as libc::c_int as s16,
     0x10 as libc::c_int as s16, 0x10 as libc::c_int as s16,
     0x10 as libc::c_int as s16, 0x10 as libc::c_int as s16,
     0x10 as libc::c_int as s16, 0x10 as libc::c_int as s16,
     0x10 as libc::c_int as s16, 0x10 as libc::c_int as s16,
     0x18 as libc::c_int as s16, 0 as libc::c_int as s16];
static mut D_8082AFF0: [s16; 2] =
    [0 as libc::c_int as s16, 0 as libc::c_int as s16];
static mut D_8082AFF4: [s16; 6] =
    [0x10 as libc::c_int as s16, 0x30 as libc::c_int as s16,
     0x30 as libc::c_int as s16, 0x10 as libc::c_int as s16,
     0x10 as libc::c_int as s16, 0 as libc::c_int as s16];
static mut D_8082B000: [*mut s16; 6] =
    unsafe {
        [D_8082AE90.as_ptr() as *mut _, D_8082AE94.as_ptr() as *mut _,
         D_8082AE98.as_ptr() as *mut _, D_8082AEBC.as_ptr() as *mut _,
         D_8082AEC0.as_ptr() as *mut _, D_8082AF00.as_ptr() as *mut _]
    };
static mut D_8082B018: [*mut s16; 6] =
    unsafe {
        [D_8082AF0C.as_ptr() as *mut _, D_8082AF10.as_ptr() as *mut _,
         D_8082AF14.as_ptr() as *mut _, D_8082AF38.as_ptr() as *mut _,
         D_8082AAEC.as_ptr() as *mut _, D_8082AF3C.as_ptr() as *mut _]
    };
static mut D_8082B030: [*mut s16; 6] =
    unsafe {
        [D_8082AF48.as_ptr() as *mut _, D_8082AF4C.as_ptr() as *mut _,
         D_8082AF50.as_ptr() as *mut _, D_8082AF74.as_ptr() as *mut _,
         D_8082AF78.as_ptr() as *mut _, D_8082AFB8.as_ptr() as *mut _]
    };
static mut D_8082B048: [*mut s16; 6] =
    unsafe {
        [D_8082AFC4.as_ptr() as *mut _, D_8082AFC8.as_ptr() as *mut _,
         D_8082AFCC.as_ptr() as *mut _, D_8082AFF0.as_ptr() as *mut _,
         D_8082AB2C.as_ptr() as *mut _, D_8082AFF4.as_ptr() as *mut _]
    };
static mut D_8082B060: [s16; 22] =
    [0xffc6 as libc::c_int as s16, 0xb as libc::c_int as s16,
     0x1e as libc::c_int as s16, 0x1e as libc::c_int as s16,
     0xf as libc::c_int as s16, 0x26 as libc::c_int as s16,
     0xffc2 as libc::c_int as s16, 0x3c as libc::c_int as s16,
     0x3d as libc::c_int as s16, 0xffb2 as libc::c_int as s16,
     0xfed4 as libc::c_int as s16, 0xffaa as libc::c_int as s16,
     0xffbf as libc::c_int as s16, 0xfed4 as libc::c_int as s16,
     0xfed4 as libc::c_int as s16, 0xffeb as libc::c_int as s16,
     0xe as libc::c_int as s16, 0xd as libc::c_int as s16,
     0x14 as libc::c_int as s16, 0xffde as libc::c_int as s16,
     0xfed4 as libc::c_int as s16, 0 as libc::c_int as s16];
static mut D_8082B08C: [s16; 22] =
    [0x59 as libc::c_int as s16, 0x14 as libc::c_int as s16,
     0xe as libc::c_int as s16, 0x23 as libc::c_int as s16,
     0x20 as libc::c_int as s16, 0x11 as libc::c_int as s16,
     0x32 as libc::c_int as s16, 0x10 as libc::c_int as s16,
     0x15 as libc::c_int as s16, 0x14 as libc::c_int as s16,
     0xffff as libc::c_int as s16, 0x20 as libc::c_int as s16,
     0x10 as libc::c_int as s16, 0xffff as libc::c_int as s16,
     0xffff as libc::c_int as s16, 0x13 as libc::c_int as s16,
     0x13 as libc::c_int as s16, 0x15 as libc::c_int as s16,
     0x10 as libc::c_int as s16, 0x14 as libc::c_int as s16,
     0xffff as libc::c_int as s16, 0 as libc::c_int as s16];
static mut D_8082B0B8: [s16; 22] =
    [0x1 as libc::c_int as s16, 0xf as libc::c_int as s16,
     0x14 as libc::c_int as s16, 0x9 as libc::c_int as s16,
     0xffe2 as libc::c_int as s16, 0xffef as libc::c_int as s16,
     0xffde as libc::c_int as s16, 0xf as libc::c_int as s16,
     0x1e as libc::c_int as s16, 0x1 as libc::c_int as s16,
     0xfed4 as libc::c_int as s16, 0x2a as libc::c_int as s16,
     0x7 as libc::c_int as s16, 0xfed4 as libc::c_int as s16,
     0xfed4 as libc::c_int as s16, 0x18 as libc::c_int as s16,
     0x24 as libc::c_int as s16, 0x35 as libc::c_int as s16,
     0x25 as libc::c_int as s16, 0xfff3 as libc::c_int as s16,
     0xfed4 as libc::c_int as s16, 0 as libc::c_int as s16];
static mut D_8082B0E4: [s16; 22] =
    [0x24 as libc::c_int as s16, 0xf as libc::c_int as s16,
     0x10 as libc::c_int as s16, 0x17 as libc::c_int as s16,
     0x17 as libc::c_int as s16, 0x10 as libc::c_int as s16,
     0x18 as libc::c_int as s16, 0xd as libc::c_int as s16,
     0x11 as libc::c_int as s16, 0x12 as libc::c_int as s16,
     0x1 as libc::c_int as s16, 0x19 as libc::c_int as s16,
     0xd as libc::c_int as s16, 0x1 as libc::c_int as s16,
     0x1 as libc::c_int as s16, 0xd as libc::c_int as s16,
     0x15 as libc::c_int as s16, 0xf as libc::c_int as s16,
     0xd as libc::c_int as s16, 0xc as libc::c_int as s16,
     0x1 as libc::c_int as s16, 0 as libc::c_int as s16];
#[no_mangle]
pub unsafe extern "C" fn func_80823A0C(mut globalCtx: *mut GlobalContext,
                                       mut vtx: *mut Vtx, mut arg2: s16,
                                       mut arg3: s16) -> s16 {
    static mut D_8082B110: s16 = 0 as libc::c_int as s16;
    static mut D_8082B114: s16 = 1 as libc::c_int as s16;
    static mut D_8082B118: s16 = 0 as libc::c_int as s16;
    let mut pauseCtx: *mut PauseContext = &mut (*globalCtx).pauseCtx;
    let mut ptr1: *mut s16 = 0 as *mut s16;
    let mut ptr2: *mut s16 = 0 as *mut s16;
    let mut ptr3: *mut s16 = 0 as *mut s16;
    let mut ptr4: *mut s16 = 0 as *mut s16;
    let mut phi_s2: s16 = 0;
    let mut phi_t0: s16 = 0;
    let mut phi_a1: s16 = 0;
    let mut phi_a2: s16 = 0;
    let mut phi_t3: s16 = 0;
    let mut phi_t1: s16 = 0;
    phi_t0 = -(200 as libc::c_int) as s16;
    phi_t1 = 0 as libc::c_int as s16;
    phi_t3 = 0 as libc::c_int as s16;
    while (phi_t3 as libc::c_int) < 3 as libc::c_int {
        phi_t0 = (phi_t0 as libc::c_int + 80 as libc::c_int) as s16;
        phi_a1 = 80 as libc::c_int as s16;
        phi_a2 = 0 as libc::c_int as s16;
        while (phi_a2 as libc::c_int) < 5 as libc::c_int {
            let ref mut fresh235 =
                (*vtx.offset((phi_t1 as libc::c_int + 2 as libc::c_int) as
                                 isize)).v.ob[0 as libc::c_int as usize];
            *fresh235 = phi_t0;
            (*vtx.offset((phi_t1 as libc::c_int + 0 as libc::c_int) as
                             isize)).v.ob[0 as libc::c_int as usize] =
                *fresh235;
            let ref mut fresh236 =
                (*vtx.offset((phi_t1 as libc::c_int + 3 as libc::c_int) as
                                 isize)).v.ob[0 as libc::c_int as usize];
            *fresh236 =
                ((*vtx.offset((phi_t1 as libc::c_int + 0 as libc::c_int) as
                                  isize)).v.ob[0 as libc::c_int as usize] as
                     libc::c_int + 80 as libc::c_int) as libc::c_short;
            (*vtx.offset((phi_t1 as libc::c_int + 1 as libc::c_int) as
                             isize)).v.ob[0 as libc::c_int as usize] =
                *fresh236;
            let ref mut fresh237 =
                (*vtx.offset((phi_t1 as libc::c_int + 1 as libc::c_int) as
                                 isize)).v.ob[1 as libc::c_int as usize];
            *fresh237 =
                (phi_a1 as libc::c_int + (*pauseCtx).offsetY as libc::c_int)
                    as libc::c_short;
            (*vtx.offset((phi_t1 as libc::c_int + 0 as libc::c_int) as
                             isize)).v.ob[1 as libc::c_int as usize] =
                *fresh237;
            let ref mut fresh238 =
                (*vtx.offset((phi_t1 as libc::c_int + 3 as libc::c_int) as
                                 isize)).v.ob[1 as libc::c_int as usize];
            *fresh238 =
                ((*vtx.offset((phi_t1 as libc::c_int + 0 as libc::c_int) as
                                  isize)).v.ob[1 as libc::c_int as usize] as
                     libc::c_int - 32 as libc::c_int) as libc::c_short;
            (*vtx.offset((phi_t1 as libc::c_int + 2 as libc::c_int) as
                             isize)).v.ob[1 as libc::c_int as usize] =
                *fresh238;
            let ref mut fresh239 =
                (*vtx.offset((phi_t1 as libc::c_int + 3 as libc::c_int) as
                                 isize)).v.ob[2 as libc::c_int as usize];
            *fresh239 = 0 as libc::c_int as libc::c_short;
            let ref mut fresh240 =
                (*vtx.offset((phi_t1 as libc::c_int + 2 as libc::c_int) as
                                 isize)).v.ob[2 as libc::c_int as usize];
            *fresh240 = *fresh239;
            let ref mut fresh241 =
                (*vtx.offset((phi_t1 as libc::c_int + 1 as libc::c_int) as
                                 isize)).v.ob[2 as libc::c_int as usize];
            *fresh241 = *fresh240;
            (*vtx.offset((phi_t1 as libc::c_int + 0 as libc::c_int) as
                             isize)).v.ob[2 as libc::c_int as usize] =
                *fresh241;
            (*vtx.offset((phi_t1 as libc::c_int + 0 as libc::c_int) as
                             isize)).v.flag =
                0 as libc::c_int as libc::c_ushort;
            (*vtx.offset((phi_t1 as libc::c_int + 1 as libc::c_int) as
                             isize)).v.flag =
                0 as libc::c_int as libc::c_ushort;
            (*vtx.offset((phi_t1 as libc::c_int + 2 as libc::c_int) as
                             isize)).v.flag =
                0 as libc::c_int as libc::c_ushort;
            (*vtx.offset((phi_t1 as libc::c_int + 3 as libc::c_int) as
                             isize)).v.flag =
                0 as libc::c_int as libc::c_ushort;
            let ref mut fresh242 =
                (*vtx.offset((phi_t1 as libc::c_int + 2 as libc::c_int) as
                                 isize)).v.tc[0 as libc::c_int as usize];
            *fresh242 = 0 as libc::c_int as libc::c_short;
            let ref mut fresh243 =
                (*vtx.offset((phi_t1 as libc::c_int + 1 as libc::c_int) as
                                 isize)).v.tc[1 as libc::c_int as usize];
            *fresh243 = *fresh242;
            let ref mut fresh244 =
                (*vtx.offset((phi_t1 as libc::c_int + 0 as libc::c_int) as
                                 isize)).v.tc[1 as libc::c_int as usize];
            *fresh244 = *fresh243;
            (*vtx.offset((phi_t1 as libc::c_int + 0 as libc::c_int) as
                             isize)).v.tc[0 as libc::c_int as usize] =
                *fresh244;
            let ref mut fresh245 =
                (*vtx.offset((phi_t1 as libc::c_int + 3 as libc::c_int) as
                                 isize)).v.tc[0 as libc::c_int as usize];
            *fresh245 = 0xa00 as libc::c_int as libc::c_short;
            (*vtx.offset((phi_t1 as libc::c_int + 1 as libc::c_int) as
                             isize)).v.tc[0 as libc::c_int as usize] =
                *fresh245;
            let ref mut fresh246 =
                (*vtx.offset((phi_t1 as libc::c_int + 3 as libc::c_int) as
                                 isize)).v.tc[1 as libc::c_int as usize];
            *fresh246 = 0x400 as libc::c_int as libc::c_short;
            (*vtx.offset((phi_t1 as libc::c_int + 2 as libc::c_int) as
                             isize)).v.tc[1 as libc::c_int as usize] =
                *fresh246;
            let ref mut fresh247 =
                (*vtx.offset((phi_t1 as libc::c_int + 2 as libc::c_int) as
                                 isize)).v.cn[0 as libc::c_int as usize];
            *fresh247 =
                D_8082AE48[arg2 as
                               usize][(phi_t3 as libc::c_int +
                                           0 as libc::c_int) as usize];
            (*vtx.offset((phi_t1 as libc::c_int + 0 as libc::c_int) as
                             isize)).v.cn[0 as libc::c_int as usize] =
                *fresh247;
            let ref mut fresh248 =
                (*vtx.offset((phi_t1 as libc::c_int + 2 as libc::c_int) as
                                 isize)).v.cn[1 as libc::c_int as usize];
            *fresh248 =
                D_8082AE60[arg2 as
                               usize][(phi_t3 as libc::c_int +
                                           0 as libc::c_int) as usize];
            (*vtx.offset((phi_t1 as libc::c_int + 0 as libc::c_int) as
                             isize)).v.cn[1 as libc::c_int as usize] =
                *fresh248;
            let ref mut fresh249 =
                (*vtx.offset((phi_t1 as libc::c_int + 2 as libc::c_int) as
                                 isize)).v.cn[2 as libc::c_int as usize];
            *fresh249 =
                D_8082AE78[arg2 as
                               usize][(phi_t3 as libc::c_int +
                                           0 as libc::c_int) as usize];
            (*vtx.offset((phi_t1 as libc::c_int + 0 as libc::c_int) as
                             isize)).v.cn[2 as libc::c_int as usize] =
                *fresh249;
            let ref mut fresh250 =
                (*vtx.offset((phi_t1 as libc::c_int + 3 as libc::c_int) as
                                 isize)).v.cn[0 as libc::c_int as usize];
            *fresh250 =
                D_8082AE48[arg2 as
                               usize][(phi_t3 as libc::c_int +
                                           1 as libc::c_int) as usize];
            (*vtx.offset((phi_t1 as libc::c_int + 1 as libc::c_int) as
                             isize)).v.cn[0 as libc::c_int as usize] =
                *fresh250;
            let ref mut fresh251 =
                (*vtx.offset((phi_t1 as libc::c_int + 3 as libc::c_int) as
                                 isize)).v.cn[1 as libc::c_int as usize];
            *fresh251 =
                D_8082AE60[arg2 as
                               usize][(phi_t3 as libc::c_int +
                                           1 as libc::c_int) as usize];
            (*vtx.offset((phi_t1 as libc::c_int + 1 as libc::c_int) as
                             isize)).v.cn[1 as libc::c_int as usize] =
                *fresh251;
            let ref mut fresh252 =
                (*vtx.offset((phi_t1 as libc::c_int + 3 as libc::c_int) as
                                 isize)).v.cn[2 as libc::c_int as usize];
            *fresh252 =
                D_8082AE78[arg2 as
                               usize][(phi_t3 as libc::c_int +
                                           1 as libc::c_int) as usize];
            (*vtx.offset((phi_t1 as libc::c_int + 1 as libc::c_int) as
                             isize)).v.cn[2 as libc::c_int as usize] =
                *fresh252;
            let ref mut fresh253 =
                (*vtx.offset((phi_t1 as libc::c_int + 3 as libc::c_int) as
                                 isize)).v.cn[3 as libc::c_int as usize];
            *fresh253 = (*pauseCtx).alpha as libc::c_uchar;
            let ref mut fresh254 =
                (*vtx.offset((phi_t1 as libc::c_int + 1 as libc::c_int) as
                                 isize)).v.cn[3 as libc::c_int as usize];
            *fresh254 = *fresh253;
            let ref mut fresh255 =
                (*vtx.offset((phi_t1 as libc::c_int + 2 as libc::c_int) as
                                 isize)).v.cn[3 as libc::c_int as usize];
            *fresh255 = *fresh254;
            (*vtx.offset((phi_t1 as libc::c_int + 0 as libc::c_int) as
                             isize)).v.cn[3 as libc::c_int as usize] =
                *fresh255;
            phi_a2 += 1;
            phi_t1 = (phi_t1 as libc::c_int + 4 as libc::c_int) as s16;
            phi_a1 = (phi_a1 as libc::c_int - 32 as libc::c_int) as s16
        }
        phi_t3 += 1
    }
    phi_s2 = phi_t1;
    if arg3 as libc::c_int != 0 as libc::c_int {
        ptr1 = D_8082B000[arg2 as usize];
        ptr2 = D_8082B018[arg2 as usize];
        ptr3 = D_8082B030[arg2 as usize];
        ptr4 = D_8082B048[arg2 as usize];
        phi_t3 = 0 as libc::c_int as s16;
        while (phi_t3 as libc::c_int) < arg3 as libc::c_int {
            let ref mut fresh256 =
                (*vtx.offset((phi_t1 as libc::c_int + 0 as libc::c_int) as
                                 isize)).v.ob[0 as libc::c_int as usize];
            *fresh256 = *ptr1.offset(phi_t3 as isize);
            (*vtx.offset((phi_t1 as libc::c_int + 2 as libc::c_int) as
                             isize)).v.ob[0 as libc::c_int as usize] =
                *fresh256;
            let ref mut fresh257 =
                (*vtx.offset((phi_t1 as libc::c_int + 3 as libc::c_int) as
                                 isize)).v.ob[0 as libc::c_int as usize];
            *fresh257 =
                ((*vtx.offset((phi_t1 as libc::c_int + 0 as libc::c_int) as
                                  isize)).v.ob[0 as libc::c_int as usize] as
                     libc::c_int +
                     *ptr2.offset(phi_t3 as isize) as libc::c_int) as
                    libc::c_short;
            (*vtx.offset((phi_t1 as libc::c_int + 1 as libc::c_int) as
                             isize)).v.ob[0 as libc::c_int as usize] =
                *fresh257;
            if !((*pauseCtx).state as libc::c_int >= 8 as libc::c_int &&
                     (*pauseCtx).state as libc::c_int <= 0x11 as libc::c_int)
               {
                let ref mut fresh258 =
                    (*vtx.offset((phi_t1 as libc::c_int + 1 as libc::c_int) as
                                     isize)).v.ob[1 as libc::c_int as usize];
                *fresh258 =
                    (*ptr3.offset(phi_t3 as isize) as libc::c_int +
                         (*pauseCtx).offsetY as libc::c_int) as libc::c_short;
                (*vtx.offset((phi_t1 as libc::c_int + 0 as libc::c_int) as
                                 isize)).v.ob[1 as libc::c_int as usize] =
                    *fresh258
            } else {
                let ref mut fresh259 =
                    (*vtx.offset((phi_t1 as libc::c_int + 1 as libc::c_int) as
                                     isize)).v.ob[1 as libc::c_int as usize];
                *fresh259 =
                    ((*gGameInfo).data[(6 as libc::c_int * 6 as libc::c_int *
                                            16 as libc::c_int +
                                            60 as libc::c_int +
                                            phi_t3 as libc::c_int) as usize]
                         as libc::c_int + (*pauseCtx).offsetY as libc::c_int)
                        as libc::c_short;
                (*vtx.offset((phi_t1 as libc::c_int + 0 as libc::c_int) as
                                 isize)).v.ob[1 as libc::c_int as usize] =
                    *fresh259
            }
            let ref mut fresh260 =
                (*vtx.offset((phi_t1 as libc::c_int + 3 as libc::c_int) as
                                 isize)).v.ob[1 as libc::c_int as usize];
            *fresh260 =
                ((*vtx.offset((phi_t1 as libc::c_int + 0 as libc::c_int) as
                                  isize)).v.ob[1 as libc::c_int as usize] as
                     libc::c_int -
                     *ptr4.offset(phi_t3 as isize) as libc::c_int) as
                    libc::c_short;
            (*vtx.offset((phi_t1 as libc::c_int + 2 as libc::c_int) as
                             isize)).v.ob[1 as libc::c_int as usize] =
                *fresh260;
            let ref mut fresh261 =
                (*vtx.offset((phi_t1 as libc::c_int + 3 as libc::c_int) as
                                 isize)).v.ob[2 as libc::c_int as usize];
            *fresh261 = 0 as libc::c_int as libc::c_short;
            let ref mut fresh262 =
                (*vtx.offset((phi_t1 as libc::c_int + 2 as libc::c_int) as
                                 isize)).v.ob[2 as libc::c_int as usize];
            *fresh262 = *fresh261;
            let ref mut fresh263 =
                (*vtx.offset((phi_t1 as libc::c_int + 1 as libc::c_int) as
                                 isize)).v.ob[2 as libc::c_int as usize];
            *fresh263 = *fresh262;
            (*vtx.offset((phi_t1 as libc::c_int + 0 as libc::c_int) as
                             isize)).v.ob[2 as libc::c_int as usize] =
                *fresh263;
            let ref mut fresh264 =
                (*vtx.offset((phi_t1 as libc::c_int + 3 as libc::c_int) as
                                 isize)).v.flag;
            *fresh264 = 0 as libc::c_int as libc::c_ushort;
            let ref mut fresh265 =
                (*vtx.offset((phi_t1 as libc::c_int + 2 as libc::c_int) as
                                 isize)).v.flag;
            *fresh265 = *fresh264;
            let ref mut fresh266 =
                (*vtx.offset((phi_t1 as libc::c_int + 1 as libc::c_int) as
                                 isize)).v.flag;
            *fresh266 = *fresh265;
            (*vtx.offset((phi_t1 as libc::c_int + 0 as libc::c_int) as
                             isize)).v.flag = *fresh266;
            let ref mut fresh267 =
                (*vtx.offset((phi_t1 as libc::c_int + 2 as libc::c_int) as
                                 isize)).v.tc[0 as libc::c_int as usize];
            *fresh267 = 0 as libc::c_int as libc::c_short;
            let ref mut fresh268 =
                (*vtx.offset((phi_t1 as libc::c_int + 1 as libc::c_int) as
                                 isize)).v.tc[1 as libc::c_int as usize];
            *fresh268 = *fresh267;
            let ref mut fresh269 =
                (*vtx.offset((phi_t1 as libc::c_int + 0 as libc::c_int) as
                                 isize)).v.tc[1 as libc::c_int as usize];
            *fresh269 = *fresh268;
            (*vtx.offset((phi_t1 as libc::c_int + 0 as libc::c_int) as
                             isize)).v.tc[0 as libc::c_int as usize] =
                *fresh269;
            let ref mut fresh270 =
                (*vtx.offset((phi_t1 as libc::c_int + 3 as libc::c_int) as
                                 isize)).v.tc[0 as libc::c_int as usize];
            *fresh270 =
                ((*ptr2.offset(phi_t3 as isize) as libc::c_int) <<
                     5 as libc::c_int) as libc::c_short;
            (*vtx.offset((phi_t1 as libc::c_int + 1 as libc::c_int) as
                             isize)).v.tc[0 as libc::c_int as usize] =
                *fresh270;
            let ref mut fresh271 =
                (*vtx.offset((phi_t1 as libc::c_int + 3 as libc::c_int) as
                                 isize)).v.tc[1 as libc::c_int as usize];
            *fresh271 =
                ((*ptr4.offset(phi_t3 as isize) as libc::c_int) <<
                     5 as libc::c_int) as libc::c_short;
            (*vtx.offset((phi_t1 as libc::c_int + 2 as libc::c_int) as
                             isize)).v.tc[1 as libc::c_int as usize] =
                *fresh271;
            let ref mut fresh272 =
                (*vtx.offset((phi_t1 as libc::c_int + 3 as libc::c_int) as
                                 isize)).v.cn[2 as libc::c_int as usize];
            *fresh272 = 255 as libc::c_int as libc::c_uchar;
            let ref mut fresh273 =
                (*vtx.offset((phi_t1 as libc::c_int + 1 as libc::c_int) as
                                 isize)).v.cn[2 as libc::c_int as usize];
            *fresh273 = *fresh272;
            let ref mut fresh274 =
                (*vtx.offset((phi_t1 as libc::c_int + 3 as libc::c_int) as
                                 isize)).v.cn[1 as libc::c_int as usize];
            *fresh274 = *fresh273;
            let ref mut fresh275 =
                (*vtx.offset((phi_t1 as libc::c_int + 1 as libc::c_int) as
                                 isize)).v.cn[1 as libc::c_int as usize];
            *fresh275 = *fresh274;
            let ref mut fresh276 =
                (*vtx.offset((phi_t1 as libc::c_int + 3 as libc::c_int) as
                                 isize)).v.cn[0 as libc::c_int as usize];
            *fresh276 = *fresh275;
            let ref mut fresh277 =
                (*vtx.offset((phi_t1 as libc::c_int + 1 as libc::c_int) as
                                 isize)).v.cn[0 as libc::c_int as usize];
            *fresh277 = *fresh276;
            let ref mut fresh278 =
                (*vtx.offset((phi_t1 as libc::c_int + 2 as libc::c_int) as
                                 isize)).v.cn[2 as libc::c_int as usize];
            *fresh278 = *fresh277;
            let ref mut fresh279 =
                (*vtx.offset((phi_t1 as libc::c_int + 0 as libc::c_int) as
                                 isize)).v.cn[2 as libc::c_int as usize];
            *fresh279 = *fresh278;
            let ref mut fresh280 =
                (*vtx.offset((phi_t1 as libc::c_int + 2 as libc::c_int) as
                                 isize)).v.cn[1 as libc::c_int as usize];
            *fresh280 = *fresh279;
            let ref mut fresh281 =
                (*vtx.offset((phi_t1 as libc::c_int + 0 as libc::c_int) as
                                 isize)).v.cn[1 as libc::c_int as usize];
            *fresh281 = *fresh280;
            let ref mut fresh282 =
                (*vtx.offset((phi_t1 as libc::c_int + 2 as libc::c_int) as
                                 isize)).v.cn[0 as libc::c_int as usize];
            *fresh282 = *fresh281;
            (*vtx.offset((phi_t1 as libc::c_int + 0 as libc::c_int) as
                             isize)).v.cn[0 as libc::c_int as usize] =
                *fresh282;
            let ref mut fresh283 =
                (*vtx.offset((phi_t1 as libc::c_int + 3 as libc::c_int) as
                                 isize)).v.cn[3 as libc::c_int as usize];
            *fresh283 = (*pauseCtx).alpha as libc::c_uchar;
            let ref mut fresh284 =
                (*vtx.offset((phi_t1 as libc::c_int + 1 as libc::c_int) as
                                 isize)).v.cn[3 as libc::c_int as usize];
            *fresh284 = *fresh283;
            let ref mut fresh285 =
                (*vtx.offset((phi_t1 as libc::c_int + 2 as libc::c_int) as
                                 isize)).v.cn[3 as libc::c_int as usize];
            *fresh285 = *fresh284;
            (*vtx.offset((phi_t1 as libc::c_int + 0 as libc::c_int) as
                             isize)).v.cn[3 as libc::c_int as usize] =
                *fresh285;
            phi_t3 += 1;
            phi_t1 = (phi_t1 as libc::c_int + 4 as libc::c_int) as s16
        }
        if arg2 as libc::c_int == 4 as libc::c_int {
            phi_t1 = (phi_t1 as libc::c_int - 12 as libc::c_int) as s16;
            phi_t3 = gSaveContext.worldMapArea;
            let ref mut fresh286 =
                (*vtx.offset((phi_t1 as libc::c_int + 2 as libc::c_int) as
                                 isize)).v.ob[0 as libc::c_int as usize];
            *fresh286 = D_8082B060[phi_t3 as usize];
            (*vtx.offset((phi_t1 as libc::c_int + 0 as libc::c_int) as
                             isize)).v.ob[0 as libc::c_int as usize] =
                *fresh286;
            (phi_t3) != 0;
            let ref mut fresh287 =
                (*vtx.offset((phi_t1 as libc::c_int + 3 as libc::c_int) as
                                 isize)).v.ob[0 as libc::c_int as usize];
            *fresh287 =
                ((*vtx.offset((phi_t1 as libc::c_int + 0 as libc::c_int) as
                                  isize)).v.ob[0 as libc::c_int as usize] as
                     libc::c_int + D_8082B08C[phi_t3 as usize] as libc::c_int)
                    as libc::c_short;
            (*vtx.offset((phi_t1 as libc::c_int + 1 as libc::c_int) as
                             isize)).v.ob[0 as libc::c_int as usize] =
                *fresh287;
            let ref mut fresh288 =
                (*vtx.offset((phi_t1 as libc::c_int + 1 as libc::c_int) as
                                 isize)).v.ob[1 as libc::c_int as usize];
            *fresh288 =
                (D_8082B0B8[phi_t3 as usize] as libc::c_int +
                     (*pauseCtx).offsetY as libc::c_int) as libc::c_short;
            (*vtx.offset((phi_t1 as libc::c_int + 0 as libc::c_int) as
                             isize)).v.ob[1 as libc::c_int as usize] =
                *fresh288;
            let ref mut fresh289 =
                (*vtx.offset((phi_t1 as libc::c_int + 3 as libc::c_int) as
                                 isize)).v.ob[1 as libc::c_int as usize];
            *fresh289 =
                ((*vtx.offset((phi_t1 as libc::c_int + 0 as libc::c_int) as
                                  isize)).v.ob[1 as libc::c_int as usize] as
                     libc::c_int - D_8082B0E4[phi_t3 as usize] as libc::c_int)
                    as libc::c_short;
            (*vtx.offset((phi_t1 as libc::c_int + 2 as libc::c_int) as
                             isize)).v.ob[1 as libc::c_int as usize] =
                *fresh289;
            phi_t1 = (phi_t1 as libc::c_int + 12 as libc::c_int) as s16;
            if (*pauseCtx).tradeQuestLocation as libc::c_int !=
                   0xff as libc::c_int {
                if D_8082B114 as libc::c_int == 0 as libc::c_int {
                    D_8082B118 += 1;
                    match D_8082B118 as libc::c_int {
                        1 => {
                            D_8082B110 = 3 as libc::c_int as s16;
                            D_8082B114 = 8 as libc::c_int as s16
                        }
                        2 => {
                            D_8082B110 = 0 as libc::c_int as s16;
                            D_8082B114 = 6 as libc::c_int as s16;
                            D_8082B118 = 0 as libc::c_int as s16
                        }
                        _ => { }
                    }
                } else { D_8082B114 -= 1 }
                phi_t3 =
                    (phi_s2 as libc::c_int +
                         (*pauseCtx).tradeQuestLocation as libc::c_int *
                             4 as libc::c_int + 64 as libc::c_int) as s16;
                phi_a2 = (phi_s2 as libc::c_int + 116 as libc::c_int) as s16;
                let ref mut fresh290 =
                    (*vtx.offset((phi_a2 as libc::c_int + 2 as libc::c_int) as
                                     isize)).v.ob[0 as libc::c_int as usize];
                *fresh290 =
                    (*vtx.offset((phi_t3 as libc::c_int + 0 as libc::c_int) as
                                     isize)).v.ob[0 as libc::c_int as usize];
                (*vtx.offset((phi_a2 as libc::c_int + 0 as libc::c_int) as
                                 isize)).v.ob[0 as libc::c_int as usize] =
                    *fresh290;
                let ref mut fresh291 =
                    (*vtx.offset((phi_a2 as libc::c_int + 3 as libc::c_int) as
                                     isize)).v.ob[0 as libc::c_int as usize];
                *fresh291 =
                    ((*vtx.offset((phi_a2 as libc::c_int + 0 as libc::c_int)
                                      as
                                      isize)).v.ob[0 as libc::c_int as usize]
                         as libc::c_int + 8 as libc::c_int) as libc::c_short;
                (*vtx.offset((phi_a2 as libc::c_int + 1 as libc::c_int) as
                                 isize)).v.ob[0 as libc::c_int as usize] =
                    *fresh291;
                let ref mut fresh292 =
                    (*vtx.offset((phi_a2 as libc::c_int + 1 as libc::c_int) as
                                     isize)).v.ob[1 as libc::c_int as usize];
                *fresh292 =
                    ((*vtx.offset((phi_t3 as libc::c_int + 0 as libc::c_int)
                                      as
                                      isize)).v.ob[1 as libc::c_int as usize]
                         as libc::c_int - D_8082B110 as libc::c_int +
                         10 as libc::c_int) as libc::c_short;
                (*vtx.offset((phi_a2 as libc::c_int + 0 as libc::c_int) as
                                 isize)).v.ob[1 as libc::c_int as usize] =
                    *fresh292;
                let ref mut fresh293 =
                    (*vtx.offset((phi_a2 as libc::c_int + 3 as libc::c_int) as
                                     isize)).v.ob[2 as libc::c_int as usize];
                *fresh293 = 0 as libc::c_int as libc::c_short;
                let ref mut fresh294 =
                    (*vtx.offset((phi_a2 as libc::c_int + 2 as libc::c_int) as
                                     isize)).v.ob[2 as libc::c_int as usize];
                *fresh294 = *fresh293;
                let ref mut fresh295 =
                    (*vtx.offset((phi_a2 as libc::c_int + 1 as libc::c_int) as
                                     isize)).v.ob[2 as libc::c_int as usize];
                *fresh295 = *fresh294;
                (*vtx.offset((phi_a2 as libc::c_int + 0 as libc::c_int) as
                                 isize)).v.ob[2 as libc::c_int as usize] =
                    *fresh295;
                let ref mut fresh296 =
                    (*vtx.offset((phi_a2 as libc::c_int + 3 as libc::c_int) as
                                     isize)).v.ob[1 as libc::c_int as usize];
                *fresh296 =
                    ((*vtx.offset((phi_a2 as libc::c_int + 0 as libc::c_int)
                                      as
                                      isize)).v.ob[1 as libc::c_int as usize]
                         as libc::c_int - 8 as libc::c_int) as libc::c_short;
                (*vtx.offset((phi_a2 as libc::c_int + 2 as libc::c_int) as
                                 isize)).v.ob[1 as libc::c_int as usize] =
                    *fresh296;
                let ref mut fresh297 =
                    (*vtx.offset((phi_a2 as libc::c_int + 3 as libc::c_int) as
                                     isize)).v.flag;
                *fresh297 = 0 as libc::c_int as libc::c_ushort;
                let ref mut fresh298 =
                    (*vtx.offset((phi_a2 as libc::c_int + 2 as libc::c_int) as
                                     isize)).v.flag;
                *fresh298 = *fresh297;
                let ref mut fresh299 =
                    (*vtx.offset((phi_a2 as libc::c_int + 1 as libc::c_int) as
                                     isize)).v.flag;
                *fresh299 = *fresh298;
                (*vtx.offset((phi_a2 as libc::c_int + 0 as libc::c_int) as
                                 isize)).v.flag = *fresh299;
                let ref mut fresh300 =
                    (*vtx.offset((phi_a2 as libc::c_int + 2 as libc::c_int) as
                                     isize)).v.tc[0 as libc::c_int as usize];
                *fresh300 = 0 as libc::c_int as libc::c_short;
                let ref mut fresh301 =
                    (*vtx.offset((phi_a2 as libc::c_int + 1 as libc::c_int) as
                                     isize)).v.tc[1 as libc::c_int as usize];
                *fresh301 = *fresh300;
                let ref mut fresh302 =
                    (*vtx.offset(phi_t1 as
                                     isize)).v.tc[1 as libc::c_int as usize];
                *fresh302 = *fresh301;
                (*vtx.offset(phi_t1 as isize)).v.tc[0 as libc::c_int as usize]
                    = *fresh302;
                let ref mut fresh303 =
                    (*vtx.offset((phi_a2 as libc::c_int + 3 as libc::c_int) as
                                     isize)).v.tc[0 as libc::c_int as usize];
                *fresh303 = 0x100 as libc::c_int as libc::c_short;
                (*vtx.offset((phi_a2 as libc::c_int + 1 as libc::c_int) as
                                 isize)).v.tc[0 as libc::c_int as usize] =
                    *fresh303;
                let ref mut fresh304 =
                    (*vtx.offset((phi_a2 as libc::c_int + 3 as libc::c_int) as
                                     isize)).v.tc[1 as libc::c_int as usize];
                *fresh304 = 0x100 as libc::c_int as libc::c_short;
                (*vtx.offset((phi_a2 as libc::c_int + 2 as libc::c_int) as
                                 isize)).v.tc[1 as libc::c_int as usize] =
                    *fresh304;
                let ref mut fresh305 =
                    (*vtx.offset((phi_a2 as libc::c_int + 3 as libc::c_int) as
                                     isize)).v.cn[2 as libc::c_int as usize];
                *fresh305 = 255 as libc::c_int as libc::c_uchar;
                let ref mut fresh306 =
                    (*vtx.offset((phi_a2 as libc::c_int + 1 as libc::c_int) as
                                     isize)).v.cn[2 as libc::c_int as usize];
                *fresh306 = *fresh305;
                let ref mut fresh307 =
                    (*vtx.offset((phi_a2 as libc::c_int + 3 as libc::c_int) as
                                     isize)).v.cn[1 as libc::c_int as usize];
                *fresh307 = *fresh306;
                let ref mut fresh308 =
                    (*vtx.offset((phi_a2 as libc::c_int + 1 as libc::c_int) as
                                     isize)).v.cn[1 as libc::c_int as usize];
                *fresh308 = *fresh307;
                let ref mut fresh309 =
                    (*vtx.offset((phi_a2 as libc::c_int + 3 as libc::c_int) as
                                     isize)).v.cn[0 as libc::c_int as usize];
                *fresh309 = *fresh308;
                let ref mut fresh310 =
                    (*vtx.offset((phi_a2 as libc::c_int + 1 as libc::c_int) as
                                     isize)).v.cn[0 as libc::c_int as usize];
                *fresh310 = *fresh309;
                let ref mut fresh311 =
                    (*vtx.offset((phi_a2 as libc::c_int + 2 as libc::c_int) as
                                     isize)).v.cn[2 as libc::c_int as usize];
                *fresh311 = *fresh310;
                let ref mut fresh312 =
                    (*vtx.offset((phi_a2 as libc::c_int + 0 as libc::c_int) as
                                     isize)).v.cn[2 as libc::c_int as usize];
                *fresh312 = *fresh311;
                let ref mut fresh313 =
                    (*vtx.offset((phi_a2 as libc::c_int + 2 as libc::c_int) as
                                     isize)).v.cn[1 as libc::c_int as usize];
                *fresh313 = *fresh312;
                let ref mut fresh314 =
                    (*vtx.offset((phi_a2 as libc::c_int + 0 as libc::c_int) as
                                     isize)).v.cn[1 as libc::c_int as usize];
                *fresh314 = *fresh313;
                let ref mut fresh315 =
                    (*vtx.offset((phi_a2 as libc::c_int + 2 as libc::c_int) as
                                     isize)).v.cn[0 as libc::c_int as usize];
                *fresh315 = *fresh314;
                (*vtx.offset((phi_a2 as libc::c_int + 0 as libc::c_int) as
                                 isize)).v.cn[0 as libc::c_int as usize] =
                    *fresh315;
                let ref mut fresh316 =
                    (*vtx.offset((phi_a2 as libc::c_int + 3 as libc::c_int) as
                                     isize)).v.cn[3 as libc::c_int as usize];
                *fresh316 = (*pauseCtx).alpha as libc::c_uchar;
                let ref mut fresh317 =
                    (*vtx.offset((phi_a2 as libc::c_int + 1 as libc::c_int) as
                                     isize)).v.cn[3 as libc::c_int as usize];
                *fresh317 = *fresh316;
                let ref mut fresh318 =
                    (*vtx.offset((phi_a2 as libc::c_int + 2 as libc::c_int) as
                                     isize)).v.cn[3 as libc::c_int as usize];
                *fresh318 = *fresh317;
                (*vtx.offset((phi_a2 as libc::c_int + 0 as libc::c_int) as
                                 isize)).v.cn[3 as libc::c_int as usize] =
                    *fresh318
            }
        }
    }
    return phi_t1;
}
static mut D_8082B11C: [s16; 7] =
    [0 as libc::c_int as s16, 4 as libc::c_int as s16,
     8 as libc::c_int as s16, 12 as libc::c_int as s16,
     24 as libc::c_int as s16, 32 as libc::c_int as s16,
     56 as libc::c_int as s16];
static mut D_8082B12C: [s16; 4] =
    [-(114 as libc::c_int) as s16, 12 as libc::c_int as s16,
     44 as libc::c_int as s16, 76 as libc::c_int as s16];
static mut D_8082B134: [u8_0; 4] =
    [1 as libc::c_int as u8_0, 5 as libc::c_int as u8_0,
     9 as libc::c_int as u8_0, 13 as libc::c_int as u8_0];
static mut D_8082B138: [s16; 47] =
    [74 as libc::c_int as s16, 74 as libc::c_int as s16,
     46 as libc::c_int as s16, 18 as libc::c_int as s16,
     18 as libc::c_int as s16, 46 as libc::c_int as s16,
     -(108 as libc::c_int) as s16, -(90 as libc::c_int) as s16,
     -(72 as libc::c_int) as s16, -(54 as libc::c_int) as s16,
     -(36 as libc::c_int) as s16, -(18 as libc::c_int) as s16,
     -(108 as libc::c_int) as s16, -(90 as libc::c_int) as s16,
     -(72 as libc::c_int) as s16, -(54 as libc::c_int) as s16,
     -(36 as libc::c_int) as s16, -(18 as libc::c_int) as s16,
     20 as libc::c_int as s16, 46 as libc::c_int as s16,
     72 as libc::c_int as s16, -(110 as libc::c_int) as s16,
     -(86 as libc::c_int) as s16, -(110 as libc::c_int) as s16,
     -(54 as libc::c_int) as s16, -(98 as libc::c_int) as s16,
     -(86 as libc::c_int) as s16, -(74 as libc::c_int) as s16,
     -(62 as libc::c_int) as s16, -(50 as libc::c_int) as s16,
     -(38 as libc::c_int) as s16, -(26 as libc::c_int) as s16,
     -(14 as libc::c_int) as s16, -(98 as libc::c_int) as s16,
     -(86 as libc::c_int) as s16, -(74 as libc::c_int) as s16,
     -(62 as libc::c_int) as s16, -(50 as libc::c_int) as s16,
     -(38 as libc::c_int) as s16, -(26 as libc::c_int) as s16,
     -(14 as libc::c_int) as s16, -(88 as libc::c_int) as s16,
     -(81 as libc::c_int) as s16, -(72 as libc::c_int) as s16,
     -(90 as libc::c_int) as s16, -(83 as libc::c_int) as s16,
     -(74 as libc::c_int) as s16];
static mut D_8082B198: [s16; 47] =
    [38 as libc::c_int as s16, 6 as libc::c_int as s16,
     -(12 as libc::c_int) as s16, 6 as libc::c_int as s16,
     38 as libc::c_int as s16, 56 as libc::c_int as s16,
     -(20 as libc::c_int) as s16, -(20 as libc::c_int) as s16,
     -(20 as libc::c_int) as s16, -(20 as libc::c_int) as s16,
     -(20 as libc::c_int) as s16, -(20 as libc::c_int) as s16,
     2 as libc::c_int as s16, 2 as libc::c_int as s16,
     2 as libc::c_int as s16, 2 as libc::c_int as s16,
     2 as libc::c_int as s16, 2 as libc::c_int as s16,
     -(46 as libc::c_int) as s16, -(46 as libc::c_int) as s16,
     -(46 as libc::c_int) as s16, 58 as libc::c_int as s16,
     58 as libc::c_int as s16, 34 as libc::c_int as s16,
     58 as libc::c_int as s16, -(52 as libc::c_int) as s16,
     -(52 as libc::c_int) as s16, -(52 as libc::c_int) as s16,
     -(52 as libc::c_int) as s16, -(52 as libc::c_int) as s16,
     -(52 as libc::c_int) as s16, -(52 as libc::c_int) as s16,
     -(52 as libc::c_int) as s16, -(52 as libc::c_int) as s16,
     -(52 as libc::c_int) as s16, -(52 as libc::c_int) as s16,
     -(52 as libc::c_int) as s16, -(52 as libc::c_int) as s16,
     -(52 as libc::c_int) as s16, -(52 as libc::c_int) as s16,
     -(52 as libc::c_int) as s16, 34 as libc::c_int as s16,
     34 as libc::c_int as s16, 34 as libc::c_int as s16,
     36 as libc::c_int as s16, 36 as libc::c_int as s16,
     36 as libc::c_int as s16];
static mut D_8082B1F8: [s16; 47] =
    [24 as libc::c_int as s16, 24 as libc::c_int as s16,
     24 as libc::c_int as s16, 24 as libc::c_int as s16,
     24 as libc::c_int as s16, 24 as libc::c_int as s16,
     24 as libc::c_int as s16, 24 as libc::c_int as s16,
     24 as libc::c_int as s16, 24 as libc::c_int as s16,
     24 as libc::c_int as s16, 24 as libc::c_int as s16,
     24 as libc::c_int as s16, 24 as libc::c_int as s16,
     24 as libc::c_int as s16, 24 as libc::c_int as s16,
     24 as libc::c_int as s16, 24 as libc::c_int as s16,
     24 as libc::c_int as s16, 24 as libc::c_int as s16,
     24 as libc::c_int as s16, 24 as libc::c_int as s16,
     24 as libc::c_int as s16, 24 as libc::c_int as s16,
     48 as libc::c_int as s16, 16 as libc::c_int as s16,
     16 as libc::c_int as s16, 16 as libc::c_int as s16,
     16 as libc::c_int as s16, 16 as libc::c_int as s16,
     16 as libc::c_int as s16, 16 as libc::c_int as s16,
     16 as libc::c_int as s16, 16 as libc::c_int as s16,
     16 as libc::c_int as s16, 16 as libc::c_int as s16,
     16 as libc::c_int as s16, 16 as libc::c_int as s16,
     16 as libc::c_int as s16, 16 as libc::c_int as s16,
     16 as libc::c_int as s16, 16 as libc::c_int as s16,
     16 as libc::c_int as s16, 16 as libc::c_int as s16,
     16 as libc::c_int as s16, 16 as libc::c_int as s16,
     16 as libc::c_int as s16];
#[no_mangle]
pub unsafe extern "C" fn KaleidoScope_InitVertices(mut globalCtx:
                                                       *mut GlobalContext,
                                                   mut gfxCtx:
                                                       *mut GraphicsContext) {
    let mut pauseCtx: *mut PauseContext = &mut (*globalCtx).pauseCtx;
    let mut phi_t1: s16 = 0;
    let mut phi_t2: s16 = 0;
    let mut phi_t2_2: s16 = 0;
    let mut phi_t3: s16 = 0;
    let mut phi_t4: s16 = 0;
    let mut phi_t5: s16 = 0;
    (*pauseCtx).offsetY = 0 as libc::c_int as s16;
    if (*pauseCtx).state as libc::c_int == 4 as libc::c_int ||
           (*pauseCtx).state as libc::c_int >= 0x12 as libc::c_int ||
           (*pauseCtx).state as libc::c_int == 7 as libc::c_int &&
               ((*pauseCtx).unk_1EC as libc::c_int == 2 as libc::c_int ||
                    (*pauseCtx).unk_1EC as libc::c_int == 5 as libc::c_int) ||
           (*pauseCtx).state as libc::c_int >= 8 as libc::c_int &&
               (*pauseCtx).state as libc::c_int <= 0xd as libc::c_int {
        (*pauseCtx).offsetY = 80 as libc::c_int as s16
    }
    (*pauseCtx).itemPageVtx =
        Graph_Alloc(gfxCtx,
                    (60 as libc::c_int as
                         libc::c_uint).wrapping_mul(::std::mem::size_of::<Vtx>()
                                                        as libc::c_ulong) as
                        size_t) as *mut Vtx;
    func_80823A0C(globalCtx, (*pauseCtx).itemPageVtx, 0 as libc::c_int as s16,
                  0 as libc::c_int as s16);
    (*pauseCtx).equipPageVtx =
        Graph_Alloc(gfxCtx,
                    (60 as libc::c_int as
                         libc::c_uint).wrapping_mul(::std::mem::size_of::<Vtx>()
                                                        as libc::c_ulong) as
                        size_t) as *mut Vtx;
    func_80823A0C(globalCtx, (*pauseCtx).equipPageVtx,
                  1 as libc::c_int as s16, 0 as libc::c_int as s16);
    if sInDungeonScene == 0 {
        (*pauseCtx).mapPageVtx =
            Graph_Alloc(gfxCtx,
                        (248 as libc::c_int as
                             libc::c_uint).wrapping_mul(::std::mem::size_of::<Vtx>()
                                                            as libc::c_ulong)
                            as size_t) as *mut Vtx;
        phi_t3 =
            func_80823A0C(globalCtx, (*pauseCtx).mapPageVtx,
                          4 as libc::c_int as s16, 32 as libc::c_int as s16);
        phi_t2 = 0 as libc::c_int as s16;
        phi_t5 = 58 as libc::c_int as s16;
        while (phi_t2 as libc::c_int) < 15 as libc::c_int {
            (*(*pauseCtx).mapPageVtx.offset((phi_t3 as libc::c_int +
                                                 2 as libc::c_int) as
                                                isize)).v.ob[0 as libc::c_int
                                                                 as usize] =
                -(108 as libc::c_int) as libc::c_short;
            (*(*pauseCtx).mapPageVtx.offset((phi_t3 as libc::c_int +
                                                 0 as libc::c_int) as
                                                isize)).v.ob[0 as libc::c_int
                                                                 as usize] =
                (*(*pauseCtx).mapPageVtx.offset((phi_t3 as libc::c_int +
                                                     2 as libc::c_int) as
                                                    isize)).v.ob[0 as
                                                                     libc::c_int
                                                                     as
                                                                     usize];
            let ref mut fresh319 =
                (*(*pauseCtx).mapPageVtx.offset((phi_t3 as libc::c_int +
                                                     3 as libc::c_int) as
                                                    isize)).v.ob[0 as
                                                                     libc::c_int
                                                                     as
                                                                     usize];
            *fresh319 =
                ((*(*pauseCtx).mapPageVtx.offset((phi_t3 as libc::c_int +
                                                      0 as libc::c_int) as
                                                     isize)).v.ob[0 as
                                                                      libc::c_int
                                                                      as
                                                                      usize]
                     as libc::c_int + 216 as libc::c_int) as libc::c_short;
            (*(*pauseCtx).mapPageVtx.offset((phi_t3 as libc::c_int +
                                                 1 as libc::c_int) as
                                                isize)).v.ob[0 as libc::c_int
                                                                 as usize] =
                *fresh319;
            let ref mut fresh320 =
                (*(*pauseCtx).mapPageVtx.offset((phi_t3 as libc::c_int +
                                                     1 as libc::c_int) as
                                                    isize)).v.ob[1 as
                                                                     libc::c_int
                                                                     as
                                                                     usize];
            *fresh320 =
                (phi_t5 as libc::c_int + (*pauseCtx).offsetY as libc::c_int)
                    as libc::c_short;
            (*(*pauseCtx).mapPageVtx.offset((phi_t3 as libc::c_int +
                                                 0 as libc::c_int) as
                                                isize)).v.ob[1 as libc::c_int
                                                                 as usize] =
                *fresh320;
            let ref mut fresh321 =
                (*(*pauseCtx).mapPageVtx.offset((phi_t3 as libc::c_int +
                                                     3 as libc::c_int) as
                                                    isize)).v.ob[1 as
                                                                     libc::c_int
                                                                     as
                                                                     usize];
            *fresh321 =
                ((*(*pauseCtx).mapPageVtx.offset((phi_t3 as libc::c_int +
                                                      0 as libc::c_int) as
                                                     isize)).v.ob[1 as
                                                                      libc::c_int
                                                                      as
                                                                      usize]
                     as libc::c_int - 9 as libc::c_int) as libc::c_short;
            (*(*pauseCtx).mapPageVtx.offset((phi_t3 as libc::c_int +
                                                 2 as libc::c_int) as
                                                isize)).v.ob[1 as libc::c_int
                                                                 as usize] =
                *fresh321;
            let ref mut fresh322 =
                (*(*pauseCtx).mapPageVtx.offset((phi_t3 as libc::c_int +
                                                     3 as libc::c_int) as
                                                    isize)).v.ob[2 as
                                                                     libc::c_int
                                                                     as
                                                                     usize];
            *fresh322 = 0 as libc::c_int as libc::c_short;
            let ref mut fresh323 =
                (*(*pauseCtx).mapPageVtx.offset((phi_t3 as libc::c_int +
                                                     2 as libc::c_int) as
                                                    isize)).v.ob[2 as
                                                                     libc::c_int
                                                                     as
                                                                     usize];
            *fresh323 = *fresh322;
            let ref mut fresh324 =
                (*(*pauseCtx).mapPageVtx.offset((phi_t3 as libc::c_int +
                                                     1 as libc::c_int) as
                                                    isize)).v.ob[2 as
                                                                     libc::c_int
                                                                     as
                                                                     usize];
            *fresh324 = *fresh323;
            (*(*pauseCtx).mapPageVtx.offset((phi_t3 as libc::c_int +
                                                 0 as libc::c_int) as
                                                isize)).v.ob[2 as libc::c_int
                                                                 as usize] =
                *fresh324;
            let ref mut fresh325 =
                (*(*pauseCtx).mapPageVtx.offset((phi_t3 as libc::c_int +
                                                     3 as libc::c_int) as
                                                    isize)).v.flag;
            *fresh325 = 0 as libc::c_int as libc::c_ushort;
            let ref mut fresh326 =
                (*(*pauseCtx).mapPageVtx.offset((phi_t3 as libc::c_int +
                                                     2 as libc::c_int) as
                                                    isize)).v.flag;
            *fresh326 = *fresh325;
            let ref mut fresh327 =
                (*(*pauseCtx).mapPageVtx.offset((phi_t3 as libc::c_int +
                                                     1 as libc::c_int) as
                                                    isize)).v.flag;
            *fresh327 = *fresh326;
            (*(*pauseCtx).mapPageVtx.offset((phi_t3 as libc::c_int +
                                                 0 as libc::c_int) as
                                                isize)).v.flag = *fresh327;
            let ref mut fresh328 =
                (*(*pauseCtx).mapPageVtx.offset((phi_t3 as libc::c_int +
                                                     2 as libc::c_int) as
                                                    isize)).v.tc[0 as
                                                                     libc::c_int
                                                                     as
                                                                     usize];
            *fresh328 = 0 as libc::c_int as libc::c_short;
            let ref mut fresh329 =
                (*(*pauseCtx).mapPageVtx.offset((phi_t3 as libc::c_int +
                                                     1 as libc::c_int) as
                                                    isize)).v.tc[1 as
                                                                     libc::c_int
                                                                     as
                                                                     usize];
            *fresh329 = *fresh328;
            let ref mut fresh330 =
                (*(*pauseCtx).mapPageVtx.offset((phi_t3 as libc::c_int +
                                                     0 as libc::c_int) as
                                                    isize)).v.tc[1 as
                                                                     libc::c_int
                                                                     as
                                                                     usize];
            *fresh330 = *fresh329;
            (*(*pauseCtx).mapPageVtx.offset((phi_t3 as libc::c_int +
                                                 0 as libc::c_int) as
                                                isize)).v.tc[0 as libc::c_int
                                                                 as usize] =
                *fresh330;
            let ref mut fresh331 =
                (*(*pauseCtx).mapPageVtx.offset((phi_t3 as libc::c_int +
                                                     3 as libc::c_int) as
                                                    isize)).v.tc[0 as
                                                                     libc::c_int
                                                                     as
                                                                     usize];
            *fresh331 = 0x1b00 as libc::c_int as libc::c_short;
            (*(*pauseCtx).mapPageVtx.offset((phi_t3 as libc::c_int +
                                                 1 as libc::c_int) as
                                                isize)).v.tc[0 as libc::c_int
                                                                 as usize] =
                *fresh331;
            let ref mut fresh332 =
                (*(*pauseCtx).mapPageVtx.offset((phi_t3 as libc::c_int +
                                                     3 as libc::c_int) as
                                                    isize)).v.tc[1 as
                                                                     libc::c_int
                                                                     as
                                                                     usize];
            *fresh332 = 0x120 as libc::c_int as libc::c_short;
            (*(*pauseCtx).mapPageVtx.offset((phi_t3 as libc::c_int +
                                                 2 as libc::c_int) as
                                                isize)).v.tc[1 as libc::c_int
                                                                 as usize] =
                *fresh332;
            let ref mut fresh333 =
                (*(*pauseCtx).mapPageVtx.offset((phi_t3 as libc::c_int +
                                                     3 as libc::c_int) as
                                                    isize)).v.cn[3 as
                                                                     libc::c_int
                                                                     as
                                                                     usize];
            *fresh333 = (*pauseCtx).alpha as libc::c_uchar;
            let ref mut fresh334 =
                (*(*pauseCtx).mapPageVtx.offset((phi_t3 as libc::c_int +
                                                     1 as libc::c_int) as
                                                    isize)).v.cn[3 as
                                                                     libc::c_int
                                                                     as
                                                                     usize];
            *fresh334 = *fresh333;
            let ref mut fresh335 =
                (*(*pauseCtx).mapPageVtx.offset((phi_t3 as libc::c_int +
                                                     2 as libc::c_int) as
                                                    isize)).v.cn[3 as
                                                                     libc::c_int
                                                                     as
                                                                     usize];
            *fresh335 = *fresh334;
            let ref mut fresh336 =
                (*(*pauseCtx).mapPageVtx.offset((phi_t3 as libc::c_int +
                                                     0 as libc::c_int) as
                                                    isize)).v.cn[3 as
                                                                     libc::c_int
                                                                     as
                                                                     usize];
            *fresh336 = *fresh335;
            let ref mut fresh337 =
                (*(*pauseCtx).mapPageVtx.offset((phi_t3 as libc::c_int +
                                                     3 as libc::c_int) as
                                                    isize)).v.cn[2 as
                                                                     libc::c_int
                                                                     as
                                                                     usize];
            *fresh337 = *fresh336;
            let ref mut fresh338 =
                (*(*pauseCtx).mapPageVtx.offset((phi_t3 as libc::c_int +
                                                     1 as libc::c_int) as
                                                    isize)).v.cn[2 as
                                                                     libc::c_int
                                                                     as
                                                                     usize];
            *fresh338 = *fresh337;
            let ref mut fresh339 =
                (*(*pauseCtx).mapPageVtx.offset((phi_t3 as libc::c_int +
                                                     3 as libc::c_int) as
                                                    isize)).v.cn[1 as
                                                                     libc::c_int
                                                                     as
                                                                     usize];
            *fresh339 = *fresh338;
            let ref mut fresh340 =
                (*(*pauseCtx).mapPageVtx.offset((phi_t3 as libc::c_int +
                                                     1 as libc::c_int) as
                                                    isize)).v.cn[1 as
                                                                     libc::c_int
                                                                     as
                                                                     usize];
            *fresh340 = *fresh339;
            let ref mut fresh341 =
                (*(*pauseCtx).mapPageVtx.offset((phi_t3 as libc::c_int +
                                                     3 as libc::c_int) as
                                                    isize)).v.cn[0 as
                                                                     libc::c_int
                                                                     as
                                                                     usize];
            *fresh341 = *fresh340;
            let ref mut fresh342 =
                (*(*pauseCtx).mapPageVtx.offset((phi_t3 as libc::c_int +
                                                     1 as libc::c_int) as
                                                    isize)).v.cn[0 as
                                                                     libc::c_int
                                                                     as
                                                                     usize];
            *fresh342 = *fresh341;
            let ref mut fresh343 =
                (*(*pauseCtx).mapPageVtx.offset((phi_t3 as libc::c_int +
                                                     2 as libc::c_int) as
                                                    isize)).v.cn[2 as
                                                                     libc::c_int
                                                                     as
                                                                     usize];
            *fresh343 = *fresh342;
            let ref mut fresh344 =
                (*(*pauseCtx).mapPageVtx.offset((phi_t3 as libc::c_int +
                                                     0 as libc::c_int) as
                                                    isize)).v.cn[2 as
                                                                     libc::c_int
                                                                     as
                                                                     usize];
            *fresh344 = *fresh343;
            let ref mut fresh345 =
                (*(*pauseCtx).mapPageVtx.offset((phi_t3 as libc::c_int +
                                                     2 as libc::c_int) as
                                                    isize)).v.cn[1 as
                                                                     libc::c_int
                                                                     as
                                                                     usize];
            *fresh345 = *fresh344;
            let ref mut fresh346 =
                (*(*pauseCtx).mapPageVtx.offset((phi_t3 as libc::c_int +
                                                     0 as libc::c_int) as
                                                    isize)).v.cn[1 as
                                                                     libc::c_int
                                                                     as
                                                                     usize];
            *fresh346 = *fresh345;
            let ref mut fresh347 =
                (*(*pauseCtx).mapPageVtx.offset((phi_t3 as libc::c_int +
                                                     2 as libc::c_int) as
                                                    isize)).v.cn[0 as
                                                                     libc::c_int
                                                                     as
                                                                     usize];
            *fresh347 = *fresh346;
            (*(*pauseCtx).mapPageVtx.offset((phi_t3 as libc::c_int +
                                                 0 as libc::c_int) as
                                                isize)).v.cn[0 as libc::c_int
                                                                 as usize] =
                *fresh347;
            phi_t2 += 1;
            phi_t3 = (phi_t3 as libc::c_int + 4 as libc::c_int) as s16;
            phi_t5 = (phi_t5 as libc::c_int - 9 as libc::c_int) as s16
        }
        let ref mut fresh348 =
            (*(*pauseCtx).mapPageVtx.offset((phi_t3 as libc::c_int -
                                                 1 as libc::c_int) as
                                                isize)).v.ob[1 as libc::c_int
                                                                 as usize];
        *fresh348 =
            ((*(*pauseCtx).mapPageVtx.offset((phi_t3 as libc::c_int -
                                                  4 as libc::c_int) as
                                                 isize)).v.ob[1 as libc::c_int
                                                                  as usize] as
                 libc::c_int - 2 as libc::c_int) as libc::c_short;
        (*(*pauseCtx).mapPageVtx.offset((phi_t3 as libc::c_int -
                                             2 as libc::c_int) as
                                            isize)).v.ob[1 as libc::c_int as
                                                             usize] =
            *fresh348;
        let ref mut fresh349 =
            (*(*pauseCtx).mapPageVtx.offset((phi_t3 as libc::c_int -
                                                 1 as libc::c_int) as
                                                isize)).v.tc[1 as libc::c_int
                                                                 as usize];
        *fresh349 = 0x40 as libc::c_int as libc::c_short;
        (*(*pauseCtx).mapPageVtx.offset((phi_t3 as libc::c_int -
                                             2 as libc::c_int) as
                                            isize)).v.tc[1 as libc::c_int as
                                                             usize] =
            *fresh349
    } else {
        (*pauseCtx).mapPageVtx =
            Graph_Alloc(gfxCtx,
                        (128 as libc::c_int as
                             libc::c_uint).wrapping_mul(::std::mem::size_of::<Vtx>()
                                                            as libc::c_ulong)
                            as size_t) as *mut Vtx;
        func_80823A0C(globalCtx, (*pauseCtx).mapPageVtx,
                      2 as libc::c_int as s16, 17 as libc::c_int as s16);
    }
    (*pauseCtx).questPageVtx =
        Graph_Alloc(gfxCtx,
                    (60 as libc::c_int as
                         libc::c_uint).wrapping_mul(::std::mem::size_of::<Vtx>()
                                                        as libc::c_ulong) as
                        size_t) as *mut Vtx;
    func_80823A0C(globalCtx, (*pauseCtx).questPageVtx,
                  3 as libc::c_int as s16, 0 as libc::c_int as s16);
    (*pauseCtx).cursorVtx =
        Graph_Alloc(gfxCtx,
                    (20 as libc::c_int as
                         libc::c_uint).wrapping_mul(::std::mem::size_of::<Vtx>()
                                                        as libc::c_ulong) as
                        size_t) as *mut Vtx;
    phi_t2 = 0 as libc::c_int as s16;
    while (phi_t2 as libc::c_int) < 20 as libc::c_int {
        let ref mut fresh350 =
            (*(*pauseCtx).cursorVtx.offset(phi_t2 as
                                               isize)).v.ob[2 as libc::c_int
                                                                as usize];
        *fresh350 = 0 as libc::c_int as libc::c_short;
        let ref mut fresh351 =
            (*(*pauseCtx).cursorVtx.offset(phi_t2 as
                                               isize)).v.ob[1 as libc::c_int
                                                                as usize];
        *fresh351 = *fresh350;
        (*(*pauseCtx).cursorVtx.offset(phi_t2 as
                                           isize)).v.ob[0 as libc::c_int as
                                                            usize] =
            *fresh351;
        (*(*pauseCtx).cursorVtx.offset(phi_t2 as isize)).v.flag =
            0 as libc::c_int as libc::c_ushort;
        let ref mut fresh352 =
            (*(*pauseCtx).cursorVtx.offset(phi_t2 as
                                               isize)).v.tc[1 as libc::c_int
                                                                as usize];
        *fresh352 = 0 as libc::c_int as libc::c_short;
        (*(*pauseCtx).cursorVtx.offset(phi_t2 as
                                           isize)).v.tc[0 as libc::c_int as
                                                            usize] =
            *fresh352;
        let ref mut fresh353 =
            (*(*pauseCtx).cursorVtx.offset(phi_t2 as
                                               isize)).v.cn[3 as libc::c_int
                                                                as usize];
        *fresh353 = 255 as libc::c_int as libc::c_uchar;
        let ref mut fresh354 =
            (*(*pauseCtx).cursorVtx.offset(phi_t2 as
                                               isize)).v.cn[2 as libc::c_int
                                                                as usize];
        *fresh354 = *fresh353;
        let ref mut fresh355 =
            (*(*pauseCtx).cursorVtx.offset(phi_t2 as
                                               isize)).v.cn[1 as libc::c_int
                                                                as usize];
        *fresh355 = *fresh354;
        (*(*pauseCtx).cursorVtx.offset(phi_t2 as
                                           isize)).v.cn[0 as libc::c_int as
                                                            usize] =
            *fresh355;
        phi_t2 += 1
    }
    let ref mut fresh356 =
        (*(*pauseCtx).cursorVtx.offset(15 as libc::c_int as
                                           isize)).v.tc[1 as libc::c_int as
                                                            usize];
    *fresh356 = 0x200 as libc::c_int as libc::c_short;
    let ref mut fresh357 =
        (*(*pauseCtx).cursorVtx.offset(15 as libc::c_int as
                                           isize)).v.tc[0 as libc::c_int as
                                                            usize];
    *fresh357 = *fresh356;
    let ref mut fresh358 =
        (*(*pauseCtx).cursorVtx.offset(14 as libc::c_int as
                                           isize)).v.tc[1 as libc::c_int as
                                                            usize];
    *fresh358 = *fresh357;
    let ref mut fresh359 =
        (*(*pauseCtx).cursorVtx.offset(13 as libc::c_int as
                                           isize)).v.tc[0 as libc::c_int as
                                                            usize];
    *fresh359 = *fresh358;
    let ref mut fresh360 =
        (*(*pauseCtx).cursorVtx.offset(11 as libc::c_int as
                                           isize)).v.tc[1 as libc::c_int as
                                                            usize];
    *fresh360 = *fresh359;
    let ref mut fresh361 =
        (*(*pauseCtx).cursorVtx.offset(11 as libc::c_int as
                                           isize)).v.tc[0 as libc::c_int as
                                                            usize];
    *fresh361 = *fresh360;
    let ref mut fresh362 =
        (*(*pauseCtx).cursorVtx.offset(10 as libc::c_int as
                                           isize)).v.tc[1 as libc::c_int as
                                                            usize];
    *fresh362 = *fresh361;
    let ref mut fresh363 =
        (*(*pauseCtx).cursorVtx.offset(9 as libc::c_int as
                                           isize)).v.tc[0 as libc::c_int as
                                                            usize];
    *fresh363 = *fresh362;
    let ref mut fresh364 =
        (*(*pauseCtx).cursorVtx.offset(7 as libc::c_int as
                                           isize)).v.tc[1 as libc::c_int as
                                                            usize];
    *fresh364 = *fresh363;
    let ref mut fresh365 =
        (*(*pauseCtx).cursorVtx.offset(7 as libc::c_int as
                                           isize)).v.tc[0 as libc::c_int as
                                                            usize];
    *fresh365 = *fresh364;
    let ref mut fresh366 =
        (*(*pauseCtx).cursorVtx.offset(6 as libc::c_int as
                                           isize)).v.tc[1 as libc::c_int as
                                                            usize];
    *fresh366 = *fresh365;
    let ref mut fresh367 =
        (*(*pauseCtx).cursorVtx.offset(5 as libc::c_int as
                                           isize)).v.tc[0 as libc::c_int as
                                                            usize];
    *fresh367 = *fresh366;
    let ref mut fresh368 =
        (*(*pauseCtx).cursorVtx.offset(3 as libc::c_int as
                                           isize)).v.tc[1 as libc::c_int as
                                                            usize];
    *fresh368 = *fresh367;
    let ref mut fresh369 =
        (*(*pauseCtx).cursorVtx.offset(3 as libc::c_int as
                                           isize)).v.tc[0 as libc::c_int as
                                                            usize];
    *fresh369 = *fresh368;
    let ref mut fresh370 =
        (*(*pauseCtx).cursorVtx.offset(2 as libc::c_int as
                                           isize)).v.tc[1 as libc::c_int as
                                                            usize];
    *fresh370 = *fresh369;
    (*(*pauseCtx).cursorVtx.offset(1 as libc::c_int as
                                       isize)).v.tc[0 as libc::c_int as usize]
        = *fresh370;
    let ref mut fresh371 =
        (*(*pauseCtx).cursorVtx.offset(19 as libc::c_int as
                                           isize)).v.tc[1 as libc::c_int as
                                                            usize];
    *fresh371 = 0x400 as libc::c_int as libc::c_short;
    let ref mut fresh372 =
        (*(*pauseCtx).cursorVtx.offset(19 as libc::c_int as
                                           isize)).v.tc[0 as libc::c_int as
                                                            usize];
    *fresh372 = *fresh371;
    let ref mut fresh373 =
        (*(*pauseCtx).cursorVtx.offset(18 as libc::c_int as
                                           isize)).v.tc[1 as libc::c_int as
                                                            usize];
    *fresh373 = *fresh372;
    (*(*pauseCtx).cursorVtx.offset(17 as libc::c_int as
                                       isize)).v.tc[0 as libc::c_int as usize]
        = *fresh373;
    (*pauseCtx).itemVtx =
        Graph_Alloc(gfxCtx,
                    (164 as libc::c_int as
                         libc::c_uint).wrapping_mul(::std::mem::size_of::<Vtx>()
                                                        as libc::c_ulong) as
                        size_t) as *mut Vtx;
    phi_t4 = 0 as libc::c_int as s16;
    phi_t2 = 0 as libc::c_int as s16;
    phi_t5 = 58 as libc::c_int as s16;
    while (phi_t4 as libc::c_int) < 4 as libc::c_int {
        phi_t1 = -(96 as libc::c_int) as s16;
        phi_t3 = 0 as libc::c_int as s16;
        while (phi_t3 as libc::c_int) < 6 as libc::c_int {
            let ref mut fresh374 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  2 as libc::c_int) as
                                                 isize)).v.ob[0 as libc::c_int
                                                                  as usize];
            *fresh374 =
                (phi_t1 as libc::c_int + 2 as libc::c_int) as libc::c_short;
            (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                              0 as libc::c_int) as
                                             isize)).v.ob[0 as libc::c_int as
                                                              usize] =
                *fresh374;
            let ref mut fresh375 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  3 as libc::c_int) as
                                                 isize)).v.ob[0 as libc::c_int
                                                                  as usize];
            *fresh375 =
                ((*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                   0 as libc::c_int) as
                                                  isize)).v.ob[0 as
                                                                   libc::c_int
                                                                   as usize]
                     as libc::c_int + 0x1c as libc::c_int) as libc::c_short;
            (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                              1 as libc::c_int) as
                                             isize)).v.ob[0 as libc::c_int as
                                                              usize] =
                *fresh375;
            let ref mut fresh376 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  1 as libc::c_int) as
                                                 isize)).v.ob[1 as libc::c_int
                                                                  as usize];
            *fresh376 =
                (phi_t5 as libc::c_int + (*pauseCtx).offsetY as libc::c_int -
                     2 as libc::c_int) as libc::c_short;
            (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                              0 as libc::c_int) as
                                             isize)).v.ob[1 as libc::c_int as
                                                              usize] =
                *fresh376;
            let ref mut fresh377 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  3 as libc::c_int) as
                                                 isize)).v.ob[1 as libc::c_int
                                                                  as usize];
            *fresh377 =
                ((*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                   0 as libc::c_int) as
                                                  isize)).v.ob[1 as
                                                                   libc::c_int
                                                                   as usize]
                     as libc::c_int - 0x1c as libc::c_int) as libc::c_short;
            (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                              2 as libc::c_int) as
                                             isize)).v.ob[1 as libc::c_int as
                                                              usize] =
                *fresh377;
            let ref mut fresh378 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  3 as libc::c_int) as
                                                 isize)).v.ob[2 as libc::c_int
                                                                  as usize];
            *fresh378 = 0 as libc::c_int as libc::c_short;
            let ref mut fresh379 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  2 as libc::c_int) as
                                                 isize)).v.ob[2 as libc::c_int
                                                                  as usize];
            *fresh379 = *fresh378;
            let ref mut fresh380 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  1 as libc::c_int) as
                                                 isize)).v.ob[2 as libc::c_int
                                                                  as usize];
            *fresh380 = *fresh379;
            (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                              0 as libc::c_int) as
                                             isize)).v.ob[2 as libc::c_int as
                                                              usize] =
                *fresh380;
            let ref mut fresh381 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  3 as libc::c_int) as
                                                 isize)).v.flag;
            *fresh381 = 0 as libc::c_int as libc::c_ushort;
            let ref mut fresh382 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  2 as libc::c_int) as
                                                 isize)).v.flag;
            *fresh382 = *fresh381;
            let ref mut fresh383 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  1 as libc::c_int) as
                                                 isize)).v.flag;
            *fresh383 = *fresh382;
            (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                              0 as libc::c_int) as
                                             isize)).v.flag = *fresh383;
            let ref mut fresh384 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  2 as libc::c_int) as
                                                 isize)).v.tc[0 as libc::c_int
                                                                  as usize];
            *fresh384 = 0 as libc::c_int as libc::c_short;
            let ref mut fresh385 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  1 as libc::c_int) as
                                                 isize)).v.tc[1 as libc::c_int
                                                                  as usize];
            *fresh385 = *fresh384;
            let ref mut fresh386 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  0 as libc::c_int) as
                                                 isize)).v.tc[1 as libc::c_int
                                                                  as usize];
            *fresh386 = *fresh385;
            (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                              0 as libc::c_int) as
                                             isize)).v.tc[0 as libc::c_int as
                                                              usize] =
                *fresh386;
            let ref mut fresh387 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  3 as libc::c_int) as
                                                 isize)).v.tc[1 as libc::c_int
                                                                  as usize];
            *fresh387 = 0x400 as libc::c_int as libc::c_short;
            let ref mut fresh388 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  3 as libc::c_int) as
                                                 isize)).v.tc[0 as libc::c_int
                                                                  as usize];
            *fresh388 = *fresh387;
            let ref mut fresh389 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  2 as libc::c_int) as
                                                 isize)).v.tc[1 as libc::c_int
                                                                  as usize];
            *fresh389 = *fresh388;
            (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                              1 as libc::c_int) as
                                             isize)).v.tc[0 as libc::c_int as
                                                              usize] =
                *fresh389;
            let ref mut fresh390 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  3 as libc::c_int) as
                                                 isize)).v.cn[2 as libc::c_int
                                                                  as usize];
            *fresh390 = 255 as libc::c_int as libc::c_uchar;
            let ref mut fresh391 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  2 as libc::c_int) as
                                                 isize)).v.cn[2 as libc::c_int
                                                                  as usize];
            *fresh391 = *fresh390;
            let ref mut fresh392 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  1 as libc::c_int) as
                                                 isize)).v.cn[2 as libc::c_int
                                                                  as usize];
            *fresh392 = *fresh391;
            let ref mut fresh393 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  0 as libc::c_int) as
                                                 isize)).v.cn[2 as libc::c_int
                                                                  as usize];
            *fresh393 = *fresh392;
            let ref mut fresh394 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  3 as libc::c_int) as
                                                 isize)).v.cn[1 as libc::c_int
                                                                  as usize];
            *fresh394 = *fresh393;
            let ref mut fresh395 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  2 as libc::c_int) as
                                                 isize)).v.cn[1 as libc::c_int
                                                                  as usize];
            *fresh395 = *fresh394;
            let ref mut fresh396 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  1 as libc::c_int) as
                                                 isize)).v.cn[1 as libc::c_int
                                                                  as usize];
            *fresh396 = *fresh395;
            let ref mut fresh397 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  0 as libc::c_int) as
                                                 isize)).v.cn[1 as libc::c_int
                                                                  as usize];
            *fresh397 = *fresh396;
            let ref mut fresh398 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  3 as libc::c_int) as
                                                 isize)).v.cn[0 as libc::c_int
                                                                  as usize];
            *fresh398 = *fresh397;
            let ref mut fresh399 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  2 as libc::c_int) as
                                                 isize)).v.cn[0 as libc::c_int
                                                                  as usize];
            *fresh399 = *fresh398;
            let ref mut fresh400 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  1 as libc::c_int) as
                                                 isize)).v.cn[0 as libc::c_int
                                                                  as usize];
            *fresh400 = *fresh399;
            (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                              0 as libc::c_int) as
                                             isize)).v.cn[0 as libc::c_int as
                                                              usize] =
                *fresh400;
            let ref mut fresh401 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  3 as libc::c_int) as
                                                 isize)).v.cn[3 as libc::c_int
                                                                  as usize];
            *fresh401 = 255 as libc::c_int as libc::c_uchar;
            let ref mut fresh402 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  2 as libc::c_int) as
                                                 isize)).v.cn[3 as libc::c_int
                                                                  as usize];
            *fresh402 = *fresh401;
            let ref mut fresh403 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  1 as libc::c_int) as
                                                 isize)).v.cn[3 as libc::c_int
                                                                  as usize];
            *fresh403 = *fresh402;
            (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                              0 as libc::c_int) as
                                             isize)).v.cn[3 as libc::c_int as
                                                              usize] =
                *fresh403;
            phi_t3 += 1;
            phi_t2 = (phi_t2 as libc::c_int + 4 as libc::c_int) as s16;
            phi_t1 = (phi_t1 as libc::c_int + 32 as libc::c_int) as s16
        }
        phi_t4 += 1;
        phi_t5 = (phi_t5 as libc::c_int - 32 as libc::c_int) as s16
    }
    phi_t3 = 1 as libc::c_int as s16;
    while (phi_t3 as libc::c_int) < 4 as libc::c_int {
        if gSaveContext.equips.cButtonSlots[(phi_t3 as libc::c_int -
                                                 1 as libc::c_int) as usize]
               as libc::c_int != ITEM_NONE as libc::c_int {
            phi_t4 =
                (gSaveContext.equips.cButtonSlots[(phi_t3 as libc::c_int -
                                                       1 as libc::c_int) as
                                                      usize] as libc::c_int *
                     4 as libc::c_int) as s16;
            let ref mut fresh404 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  2 as libc::c_int) as
                                                 isize)).v.ob[0 as libc::c_int
                                                                  as usize];
            *fresh404 =
                ((*(*pauseCtx).itemVtx.offset(phi_t4 as
                                                  isize)).v.ob[0 as
                                                                   libc::c_int
                                                                   as usize]
                     as libc::c_int - 2 as libc::c_int) as libc::c_short;
            (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                              0 as libc::c_int) as
                                             isize)).v.ob[0 as libc::c_int as
                                                              usize] =
                *fresh404;
            let ref mut fresh405 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  3 as libc::c_int) as
                                                 isize)).v.ob[0 as libc::c_int
                                                                  as usize];
            *fresh405 =
                ((*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                   0 as libc::c_int) as
                                                  isize)).v.ob[0 as
                                                                   libc::c_int
                                                                   as usize]
                     as libc::c_int + 32 as libc::c_int) as libc::c_short;
            (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                              1 as libc::c_int) as
                                             isize)).v.ob[0 as libc::c_int as
                                                              usize] =
                *fresh405;
            let ref mut fresh406 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  1 as libc::c_int) as
                                                 isize)).v.ob[1 as libc::c_int
                                                                  as usize];
            *fresh406 =
                ((*(*pauseCtx).itemVtx.offset(phi_t4 as
                                                  isize)).v.ob[1 as
                                                                   libc::c_int
                                                                   as usize]
                     as libc::c_int + 2 as libc::c_int) as libc::c_short;
            (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                              0 as libc::c_int) as
                                             isize)).v.ob[1 as libc::c_int as
                                                              usize] =
                *fresh406;
            let ref mut fresh407 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  3 as libc::c_int) as
                                                 isize)).v.ob[1 as libc::c_int
                                                                  as usize];
            *fresh407 =
                ((*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                   0 as libc::c_int) as
                                                  isize)).v.ob[1 as
                                                                   libc::c_int
                                                                   as usize]
                     as libc::c_int - 32 as libc::c_int) as libc::c_short;
            (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                              2 as libc::c_int) as
                                             isize)).v.ob[1 as libc::c_int as
                                                              usize] =
                *fresh407;
            let ref mut fresh408 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  3 as libc::c_int) as
                                                 isize)).v.ob[2 as libc::c_int
                                                                  as usize];
            *fresh408 = 0 as libc::c_int as libc::c_short;
            let ref mut fresh409 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  2 as libc::c_int) as
                                                 isize)).v.ob[2 as libc::c_int
                                                                  as usize];
            *fresh409 = *fresh408;
            let ref mut fresh410 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  1 as libc::c_int) as
                                                 isize)).v.ob[2 as libc::c_int
                                                                  as usize];
            *fresh410 = *fresh409;
            (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                              0 as libc::c_int) as
                                             isize)).v.ob[2 as libc::c_int as
                                                              usize] =
                *fresh410;
            let ref mut fresh411 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  3 as libc::c_int) as
                                                 isize)).v.flag;
            *fresh411 = 0 as libc::c_int as libc::c_ushort;
            let ref mut fresh412 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  2 as libc::c_int) as
                                                 isize)).v.flag;
            *fresh412 = *fresh411;
            let ref mut fresh413 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  1 as libc::c_int) as
                                                 isize)).v.flag;
            *fresh413 = *fresh412;
            (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                              0 as libc::c_int) as
                                             isize)).v.flag = *fresh413;
            let ref mut fresh414 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  2 as libc::c_int) as
                                                 isize)).v.tc[0 as libc::c_int
                                                                  as usize];
            *fresh414 = 0 as libc::c_int as libc::c_short;
            let ref mut fresh415 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  1 as libc::c_int) as
                                                 isize)).v.tc[1 as libc::c_int
                                                                  as usize];
            *fresh415 = *fresh414;
            let ref mut fresh416 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  0 as libc::c_int) as
                                                 isize)).v.tc[1 as libc::c_int
                                                                  as usize];
            *fresh416 = *fresh415;
            (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                              0 as libc::c_int) as
                                             isize)).v.tc[0 as libc::c_int as
                                                              usize] =
                *fresh416;
            let ref mut fresh417 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  3 as libc::c_int) as
                                                 isize)).v.tc[1 as libc::c_int
                                                                  as usize];
            *fresh417 = 0x400 as libc::c_int as libc::c_short;
            let ref mut fresh418 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  3 as libc::c_int) as
                                                 isize)).v.tc[0 as libc::c_int
                                                                  as usize];
            *fresh418 = *fresh417;
            let ref mut fresh419 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  2 as libc::c_int) as
                                                 isize)).v.tc[1 as libc::c_int
                                                                  as usize];
            *fresh419 = *fresh418;
            (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                              1 as libc::c_int) as
                                             isize)).v.tc[0 as libc::c_int as
                                                              usize] =
                *fresh419;
            let ref mut fresh420 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  3 as libc::c_int) as
                                                 isize)).v.cn[2 as libc::c_int
                                                                  as usize];
            *fresh420 = 255 as libc::c_int as libc::c_uchar;
            let ref mut fresh421 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  2 as libc::c_int) as
                                                 isize)).v.cn[2 as libc::c_int
                                                                  as usize];
            *fresh421 = *fresh420;
            let ref mut fresh422 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  1 as libc::c_int) as
                                                 isize)).v.cn[2 as libc::c_int
                                                                  as usize];
            *fresh422 = *fresh421;
            let ref mut fresh423 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  0 as libc::c_int) as
                                                 isize)).v.cn[2 as libc::c_int
                                                                  as usize];
            *fresh423 = *fresh422;
            let ref mut fresh424 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  3 as libc::c_int) as
                                                 isize)).v.cn[1 as libc::c_int
                                                                  as usize];
            *fresh424 = *fresh423;
            let ref mut fresh425 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  2 as libc::c_int) as
                                                 isize)).v.cn[1 as libc::c_int
                                                                  as usize];
            *fresh425 = *fresh424;
            let ref mut fresh426 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  1 as libc::c_int) as
                                                 isize)).v.cn[1 as libc::c_int
                                                                  as usize];
            *fresh426 = *fresh425;
            let ref mut fresh427 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  0 as libc::c_int) as
                                                 isize)).v.cn[1 as libc::c_int
                                                                  as usize];
            *fresh427 = *fresh426;
            let ref mut fresh428 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  3 as libc::c_int) as
                                                 isize)).v.cn[0 as libc::c_int
                                                                  as usize];
            *fresh428 = *fresh427;
            let ref mut fresh429 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  2 as libc::c_int) as
                                                 isize)).v.cn[0 as libc::c_int
                                                                  as usize];
            *fresh429 = *fresh428;
            let ref mut fresh430 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  1 as libc::c_int) as
                                                 isize)).v.cn[0 as libc::c_int
                                                                  as usize];
            *fresh430 = *fresh429;
            (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                              0 as libc::c_int) as
                                             isize)).v.cn[0 as libc::c_int as
                                                              usize] =
                *fresh430;
            let ref mut fresh431 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  3 as libc::c_int) as
                                                 isize)).v.cn[3 as libc::c_int
                                                                  as usize];
            *fresh431 = (*pauseCtx).alpha as libc::c_uchar;
            let ref mut fresh432 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  2 as libc::c_int) as
                                                 isize)).v.cn[3 as libc::c_int
                                                                  as usize];
            *fresh432 = *fresh431;
            let ref mut fresh433 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  1 as libc::c_int) as
                                                 isize)).v.cn[3 as libc::c_int
                                                                  as usize];
            *fresh433 = *fresh432;
            (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                              0 as libc::c_int) as
                                             isize)).v.cn[3 as libc::c_int as
                                                              usize] =
                *fresh433
        } else {
            let ref mut fresh434 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  2 as libc::c_int) as
                                                 isize)).v.ob[0 as libc::c_int
                                                                  as usize];
            *fresh434 = -(300 as libc::c_int) as libc::c_short;
            (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                              0 as libc::c_int) as
                                             isize)).v.ob[0 as libc::c_int as
                                                              usize] =
                *fresh434;
            let ref mut fresh435 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  3 as libc::c_int) as
                                                 isize)).v.ob[0 as libc::c_int
                                                                  as usize];
            *fresh435 =
                ((*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                   0 as libc::c_int) as
                                                  isize)).v.ob[0 as
                                                                   libc::c_int
                                                                   as usize]
                     as libc::c_int + 32 as libc::c_int) as libc::c_short;
            (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                              1 as libc::c_int) as
                                             isize)).v.ob[0 as libc::c_int as
                                                              usize] =
                *fresh435;
            let ref mut fresh436 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  1 as libc::c_int) as
                                                 isize)).v.ob[1 as libc::c_int
                                                                  as usize];
            *fresh436 = 300 as libc::c_int as libc::c_short;
            (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                              0 as libc::c_int) as
                                             isize)).v.ob[1 as libc::c_int as
                                                              usize] =
                *fresh436;
            let ref mut fresh437 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  3 as libc::c_int) as
                                                 isize)).v.ob[1 as libc::c_int
                                                                  as usize];
            *fresh437 =
                ((*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                   0 as libc::c_int) as
                                                  isize)).v.ob[1 as
                                                                   libc::c_int
                                                                   as usize]
                     as libc::c_int - 32 as libc::c_int) as libc::c_short;
            (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                              2 as libc::c_int) as
                                             isize)).v.ob[1 as libc::c_int as
                                                              usize] =
                *fresh437
        }
        phi_t3 += 1;
        phi_t2 = (phi_t2 as libc::c_int + 4 as libc::c_int) as s16
    }
    phi_t2 = 108 as libc::c_int as s16;
    phi_t3 = 0 as libc::c_int as s16;
    while (phi_t3 as libc::c_int) < 7 as libc::c_int {
        phi_t4 = D_8082B11C[phi_t3 as usize];
        let ref mut fresh438 =
            (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                              2 as libc::c_int) as
                                             isize)).v.ob[0 as libc::c_int as
                                                              usize];
        *fresh438 =
            (*(*pauseCtx).itemVtx.offset(phi_t4 as
                                             isize)).v.ob[0 as libc::c_int as
                                                              usize];
        (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                          0 as libc::c_int) as
                                         isize)).v.ob[0 as libc::c_int as
                                                          usize] = *fresh438;
        let ref mut fresh439 =
            (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                              3 as libc::c_int) as
                                             isize)).v.ob[0 as libc::c_int as
                                                              usize];
        *fresh439 =
            ((*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                               0 as libc::c_int) as
                                              isize)).v.ob[0 as libc::c_int as
                                                               usize] as
                 libc::c_int + 8 as libc::c_int) as libc::c_short;
        (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                          1 as libc::c_int) as
                                         isize)).v.ob[0 as libc::c_int as
                                                          usize] = *fresh439;
        let ref mut fresh440 =
            (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                              1 as libc::c_int) as
                                             isize)).v.ob[1 as libc::c_int as
                                                              usize];
        *fresh440 =
            ((*(*pauseCtx).itemVtx.offset(phi_t4 as
                                              isize)).v.ob[1 as libc::c_int as
                                                               usize] as
                 libc::c_int - 22 as libc::c_int) as libc::c_short;
        (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                          0 as libc::c_int) as
                                         isize)).v.ob[1 as libc::c_int as
                                                          usize] = *fresh440;
        let ref mut fresh441 =
            (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                              3 as libc::c_int) as
                                             isize)).v.ob[1 as libc::c_int as
                                                              usize];
        *fresh441 =
            ((*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                               0 as libc::c_int) as
                                              isize)).v.ob[1 as libc::c_int as
                                                               usize] as
                 libc::c_int - 8 as libc::c_int) as libc::c_short;
        (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                          2 as libc::c_int) as
                                         isize)).v.ob[1 as libc::c_int as
                                                          usize] = *fresh441;
        let ref mut fresh442 =
            (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                              6 as libc::c_int) as
                                             isize)).v.ob[0 as libc::c_int as
                                                              usize];
        *fresh442 =
            ((*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                               0 as libc::c_int) as
                                              isize)).v.ob[0 as libc::c_int as
                                                               usize] as
                 libc::c_int + 6 as libc::c_int) as libc::c_short;
        (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                          4 as libc::c_int) as
                                         isize)).v.ob[0 as libc::c_int as
                                                          usize] = *fresh442;
        let ref mut fresh443 =
            (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                              7 as libc::c_int) as
                                             isize)).v.ob[0 as libc::c_int as
                                                              usize];
        *fresh443 =
            ((*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                               4 as libc::c_int) as
                                              isize)).v.ob[0 as libc::c_int as
                                                               usize] as
                 libc::c_int + 8 as libc::c_int) as libc::c_short;
        (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                          5 as libc::c_int) as
                                         isize)).v.ob[0 as libc::c_int as
                                                          usize] = *fresh443;
        let ref mut fresh444 =
            (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                              5 as libc::c_int) as
                                             isize)).v.ob[1 as libc::c_int as
                                                              usize];
        *fresh444 =
            (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                              0 as libc::c_int) as
                                             isize)).v.ob[1 as libc::c_int as
                                                              usize];
        (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                          4 as libc::c_int) as
                                         isize)).v.ob[1 as libc::c_int as
                                                          usize] = *fresh444;
        let ref mut fresh445 =
            (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                              7 as libc::c_int) as
                                             isize)).v.ob[1 as libc::c_int as
                                                              usize];
        *fresh445 =
            ((*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                               4 as libc::c_int) as
                                              isize)).v.ob[1 as libc::c_int as
                                                               usize] as
                 libc::c_int - 8 as libc::c_int) as libc::c_short;
        (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                          6 as libc::c_int) as
                                         isize)).v.ob[1 as libc::c_int as
                                                          usize] = *fresh445;
        phi_t4 = 0 as libc::c_int as s16;
        while (phi_t4 as libc::c_int) < 2 as libc::c_int {
            let ref mut fresh446 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  3 as libc::c_int) as
                                                 isize)).v.ob[2 as libc::c_int
                                                                  as usize];
            *fresh446 = 0 as libc::c_int as libc::c_short;
            let ref mut fresh447 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  2 as libc::c_int) as
                                                 isize)).v.ob[2 as libc::c_int
                                                                  as usize];
            *fresh447 = *fresh446;
            let ref mut fresh448 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  1 as libc::c_int) as
                                                 isize)).v.ob[2 as libc::c_int
                                                                  as usize];
            *fresh448 = *fresh447;
            (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                              0 as libc::c_int) as
                                             isize)).v.ob[2 as libc::c_int as
                                                              usize] =
                *fresh448;
            let ref mut fresh449 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  3 as libc::c_int) as
                                                 isize)).v.flag;
            *fresh449 = 0 as libc::c_int as libc::c_ushort;
            let ref mut fresh450 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  2 as libc::c_int) as
                                                 isize)).v.flag;
            *fresh450 = *fresh449;
            let ref mut fresh451 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  1 as libc::c_int) as
                                                 isize)).v.flag;
            *fresh451 = *fresh450;
            (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                              0 as libc::c_int) as
                                             isize)).v.flag = *fresh451;
            let ref mut fresh452 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  2 as libc::c_int) as
                                                 isize)).v.tc[0 as libc::c_int
                                                                  as usize];
            *fresh452 = 0 as libc::c_int as libc::c_short;
            let ref mut fresh453 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  1 as libc::c_int) as
                                                 isize)).v.tc[1 as libc::c_int
                                                                  as usize];
            *fresh453 = *fresh452;
            let ref mut fresh454 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  0 as libc::c_int) as
                                                 isize)).v.tc[1 as libc::c_int
                                                                  as usize];
            *fresh454 = *fresh453;
            (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                              0 as libc::c_int) as
                                             isize)).v.tc[0 as libc::c_int as
                                                              usize] =
                *fresh454;
            let ref mut fresh455 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  3 as libc::c_int) as
                                                 isize)).v.tc[1 as libc::c_int
                                                                  as usize];
            *fresh455 = 0x100 as libc::c_int as libc::c_short;
            let ref mut fresh456 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  3 as libc::c_int) as
                                                 isize)).v.tc[0 as libc::c_int
                                                                  as usize];
            *fresh456 = *fresh455;
            let ref mut fresh457 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  2 as libc::c_int) as
                                                 isize)).v.tc[1 as libc::c_int
                                                                  as usize];
            *fresh457 = *fresh456;
            (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                              1 as libc::c_int) as
                                             isize)).v.tc[0 as libc::c_int as
                                                              usize] =
                *fresh457;
            let ref mut fresh458 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  3 as libc::c_int) as
                                                 isize)).v.cn[2 as libc::c_int
                                                                  as usize];
            *fresh458 = 255 as libc::c_int as libc::c_uchar;
            let ref mut fresh459 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  2 as libc::c_int) as
                                                 isize)).v.cn[2 as libc::c_int
                                                                  as usize];
            *fresh459 = *fresh458;
            let ref mut fresh460 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  1 as libc::c_int) as
                                                 isize)).v.cn[2 as libc::c_int
                                                                  as usize];
            *fresh460 = *fresh459;
            let ref mut fresh461 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  0 as libc::c_int) as
                                                 isize)).v.cn[2 as libc::c_int
                                                                  as usize];
            *fresh461 = *fresh460;
            let ref mut fresh462 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  3 as libc::c_int) as
                                                 isize)).v.cn[1 as libc::c_int
                                                                  as usize];
            *fresh462 = *fresh461;
            let ref mut fresh463 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  2 as libc::c_int) as
                                                 isize)).v.cn[1 as libc::c_int
                                                                  as usize];
            *fresh463 = *fresh462;
            let ref mut fresh464 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  1 as libc::c_int) as
                                                 isize)).v.cn[1 as libc::c_int
                                                                  as usize];
            *fresh464 = *fresh463;
            let ref mut fresh465 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  0 as libc::c_int) as
                                                 isize)).v.cn[1 as libc::c_int
                                                                  as usize];
            *fresh465 = *fresh464;
            let ref mut fresh466 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  3 as libc::c_int) as
                                                 isize)).v.cn[0 as libc::c_int
                                                                  as usize];
            *fresh466 = *fresh465;
            let ref mut fresh467 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  2 as libc::c_int) as
                                                 isize)).v.cn[0 as libc::c_int
                                                                  as usize];
            *fresh467 = *fresh466;
            let ref mut fresh468 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  1 as libc::c_int) as
                                                 isize)).v.cn[0 as libc::c_int
                                                                  as usize];
            *fresh468 = *fresh467;
            (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                              0 as libc::c_int) as
                                             isize)).v.cn[0 as libc::c_int as
                                                              usize] =
                *fresh468;
            let ref mut fresh469 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  3 as libc::c_int) as
                                                 isize)).v.cn[3 as libc::c_int
                                                                  as usize];
            *fresh469 = (*pauseCtx).alpha as libc::c_uchar;
            let ref mut fresh470 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  2 as libc::c_int) as
                                                 isize)).v.cn[3 as libc::c_int
                                                                  as usize];
            *fresh470 = *fresh469;
            let ref mut fresh471 =
                (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                                  1 as libc::c_int) as
                                                 isize)).v.cn[3 as libc::c_int
                                                                  as usize];
            *fresh471 = *fresh470;
            (*(*pauseCtx).itemVtx.offset((phi_t2 as libc::c_int +
                                              0 as libc::c_int) as
                                             isize)).v.cn[3 as libc::c_int as
                                                              usize] =
                *fresh471;
            phi_t4 += 1;
            phi_t2 = (phi_t2 as libc::c_int + 4 as libc::c_int) as s16
        }
        phi_t3 += 1
    }
    (*pauseCtx).equipVtx =
        Graph_Alloc(gfxCtx,
                    (112 as libc::c_int as
                         libc::c_uint).wrapping_mul(::std::mem::size_of::<Vtx>()
                                                        as libc::c_ulong) as
                        size_t) as *mut Vtx;
    phi_t4 = 0 as libc::c_int as s16;
    phi_t2 = 0 as libc::c_int as s16;
    phi_t5 = 58 as libc::c_int as s16;
    while (phi_t2 as libc::c_int) < 4 as libc::c_int {
        phi_t3 = 0 as libc::c_int as s16;
        while (phi_t3 as libc::c_int) < 4 as libc::c_int {
            let ref mut fresh472 =
                (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                   2 as libc::c_int) as
                                                  isize)).v.ob[0 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh472 =
                (D_8082B12C[phi_t3 as usize] as libc::c_int +
                     2 as libc::c_int) as libc::c_short;
            (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                               0 as libc::c_int) as
                                              isize)).v.ob[0 as libc::c_int as
                                                               usize] =
                *fresh472;
            let ref mut fresh473 =
                (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                   3 as libc::c_int) as
                                                  isize)).v.ob[0 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh473 =
                ((*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                    0 as libc::c_int) as
                                                   isize)).v.ob[0 as
                                                                    libc::c_int
                                                                    as usize]
                     as libc::c_int + 28 as libc::c_int) as libc::c_short;
            (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                               1 as libc::c_int) as
                                              isize)).v.ob[0 as libc::c_int as
                                                               usize] =
                *fresh473;
            let ref mut fresh474 =
                (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                   1 as libc::c_int) as
                                                  isize)).v.ob[1 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh474 =
                (phi_t5 as libc::c_int + (*pauseCtx).offsetY as libc::c_int -
                     2 as libc::c_int) as libc::c_short;
            (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                               0 as libc::c_int) as
                                              isize)).v.ob[1 as libc::c_int as
                                                               usize] =
                *fresh474;
            let ref mut fresh475 =
                (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                   3 as libc::c_int) as
                                                  isize)).v.ob[1 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh475 =
                ((*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                    0 as libc::c_int) as
                                                   isize)).v.ob[1 as
                                                                    libc::c_int
                                                                    as usize]
                     as libc::c_int - 28 as libc::c_int) as libc::c_short;
            (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                               2 as libc::c_int) as
                                              isize)).v.ob[1 as libc::c_int as
                                                               usize] =
                *fresh475;
            let ref mut fresh476 =
                (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                   3 as libc::c_int) as
                                                  isize)).v.ob[2 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh476 = 0 as libc::c_int as libc::c_short;
            let ref mut fresh477 =
                (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                   2 as libc::c_int) as
                                                  isize)).v.ob[2 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh477 = *fresh476;
            let ref mut fresh478 =
                (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                   1 as libc::c_int) as
                                                  isize)).v.ob[2 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh478 = *fresh477;
            (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                               0 as libc::c_int) as
                                              isize)).v.ob[2 as libc::c_int as
                                                               usize] =
                *fresh478;
            let ref mut fresh479 =
                (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                   3 as libc::c_int) as
                                                  isize)).v.flag;
            *fresh479 = 0 as libc::c_int as libc::c_ushort;
            let ref mut fresh480 =
                (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                   2 as libc::c_int) as
                                                  isize)).v.flag;
            *fresh480 = *fresh479;
            let ref mut fresh481 =
                (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                   1 as libc::c_int) as
                                                  isize)).v.flag;
            *fresh481 = *fresh480;
            (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                               0 as libc::c_int) as
                                              isize)).v.flag = *fresh481;
            let ref mut fresh482 =
                (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                   2 as libc::c_int) as
                                                  isize)).v.tc[0 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh482 = 0 as libc::c_int as libc::c_short;
            let ref mut fresh483 =
                (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                   1 as libc::c_int) as
                                                  isize)).v.tc[1 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh483 = *fresh482;
            let ref mut fresh484 =
                (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                   0 as libc::c_int) as
                                                  isize)).v.tc[1 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh484 = *fresh483;
            (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                               0 as libc::c_int) as
                                              isize)).v.tc[0 as libc::c_int as
                                                               usize] =
                *fresh484;
            let ref mut fresh485 =
                (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                   3 as libc::c_int) as
                                                  isize)).v.tc[1 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh485 = 0x400 as libc::c_int as libc::c_short;
            let ref mut fresh486 =
                (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                   3 as libc::c_int) as
                                                  isize)).v.tc[0 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh486 = *fresh485;
            let ref mut fresh487 =
                (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                   2 as libc::c_int) as
                                                  isize)).v.tc[1 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh487 = *fresh486;
            (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                               1 as libc::c_int) as
                                              isize)).v.tc[0 as libc::c_int as
                                                               usize] =
                *fresh487;
            let ref mut fresh488 =
                (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                   3 as libc::c_int) as
                                                  isize)).v.cn[2 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh488 = 255 as libc::c_int as libc::c_uchar;
            let ref mut fresh489 =
                (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                   2 as libc::c_int) as
                                                  isize)).v.cn[2 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh489 = *fresh488;
            let ref mut fresh490 =
                (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                   1 as libc::c_int) as
                                                  isize)).v.cn[2 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh490 = *fresh489;
            let ref mut fresh491 =
                (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                   0 as libc::c_int) as
                                                  isize)).v.cn[2 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh491 = *fresh490;
            let ref mut fresh492 =
                (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                   3 as libc::c_int) as
                                                  isize)).v.cn[1 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh492 = *fresh491;
            let ref mut fresh493 =
                (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                   2 as libc::c_int) as
                                                  isize)).v.cn[1 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh493 = *fresh492;
            let ref mut fresh494 =
                (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                   1 as libc::c_int) as
                                                  isize)).v.cn[1 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh494 = *fresh493;
            let ref mut fresh495 =
                (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                   0 as libc::c_int) as
                                                  isize)).v.cn[1 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh495 = *fresh494;
            let ref mut fresh496 =
                (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                   3 as libc::c_int) as
                                                  isize)).v.cn[0 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh496 = *fresh495;
            let ref mut fresh497 =
                (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                   2 as libc::c_int) as
                                                  isize)).v.cn[0 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh497 = *fresh496;
            let ref mut fresh498 =
                (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                   1 as libc::c_int) as
                                                  isize)).v.cn[0 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh498 = *fresh497;
            (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                               0 as libc::c_int) as
                                              isize)).v.cn[0 as libc::c_int as
                                                               usize] =
                *fresh498;
            let ref mut fresh499 =
                (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                   3 as libc::c_int) as
                                                  isize)).v.cn[3 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh499 = (*pauseCtx).alpha as libc::c_uchar;
            let ref mut fresh500 =
                (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                   2 as libc::c_int) as
                                                  isize)).v.cn[3 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh500 = *fresh499;
            let ref mut fresh501 =
                (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                   1 as libc::c_int) as
                                                  isize)).v.cn[3 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh501 = *fresh500;
            (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                               0 as libc::c_int) as
                                              isize)).v.cn[3 as libc::c_int as
                                                               usize] =
                *fresh501;
            phi_t3 += 1;
            phi_t4 = (phi_t4 as libc::c_int + 4 as libc::c_int) as s16
        }
        phi_t2 += 1;
        phi_t5 = (phi_t5 as libc::c_int - 32 as libc::c_int) as s16
    }
    phi_t3 = 0 as libc::c_int as s16;
    while (phi_t3 as libc::c_int) < 4 as libc::c_int {
        if (gSaveContext.equips.equipment as libc::c_int &
                gEquipMasks[phi_t3 as usize] as libc::c_int) >>
               gEquipShifts[phi_t3 as usize] as libc::c_int !=
               0 as libc::c_int {
            phi_t2 =
                ((((gSaveContext.equips.equipment as libc::c_int &
                        gEquipMasks[phi_t3 as usize] as libc::c_int) >>
                       gEquipShifts[phi_t3 as usize] as libc::c_int) +
                      D_8082B134[phi_t3 as usize] as libc::c_int -
                      1 as libc::c_int) * 4 as libc::c_int) as s16;
            let ref mut fresh502 =
                (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                   2 as libc::c_int) as
                                                  isize)).v.ob[0 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh502 =
                ((*(*pauseCtx).equipVtx.offset(phi_t2 as
                                                   isize)).v.ob[0 as
                                                                    libc::c_int
                                                                    as usize]
                     as libc::c_int - 2 as libc::c_int) as libc::c_short;
            (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                               0 as libc::c_int) as
                                              isize)).v.ob[0 as libc::c_int as
                                                               usize] =
                *fresh502;
            let ref mut fresh503 =
                (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                   3 as libc::c_int) as
                                                  isize)).v.ob[0 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh503 =
                ((*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                    0 as libc::c_int) as
                                                   isize)).v.ob[0 as
                                                                    libc::c_int
                                                                    as usize]
                     as libc::c_int + 32 as libc::c_int) as libc::c_short;
            (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                               1 as libc::c_int) as
                                              isize)).v.ob[0 as libc::c_int as
                                                               usize] =
                *fresh503;
            let ref mut fresh504 =
                (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                   1 as libc::c_int) as
                                                  isize)).v.ob[1 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh504 =
                ((*(*pauseCtx).equipVtx.offset(phi_t2 as
                                                   isize)).v.ob[1 as
                                                                    libc::c_int
                                                                    as usize]
                     as libc::c_int + 2 as libc::c_int) as libc::c_short;
            (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                               0 as libc::c_int) as
                                              isize)).v.ob[1 as libc::c_int as
                                                               usize] =
                *fresh504;
            let ref mut fresh505 =
                (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                   3 as libc::c_int) as
                                                  isize)).v.ob[1 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh505 =
                ((*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                    0 as libc::c_int) as
                                                   isize)).v.ob[1 as
                                                                    libc::c_int
                                                                    as usize]
                     as libc::c_int - 32 as libc::c_int) as libc::c_short;
            (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                               2 as libc::c_int) as
                                              isize)).v.ob[1 as libc::c_int as
                                                               usize] =
                *fresh505;
            let ref mut fresh506 =
                (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                   3 as libc::c_int) as
                                                  isize)).v.ob[2 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh506 = 0 as libc::c_int as libc::c_short;
            let ref mut fresh507 =
                (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                   2 as libc::c_int) as
                                                  isize)).v.ob[2 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh507 = *fresh506;
            let ref mut fresh508 =
                (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                   1 as libc::c_int) as
                                                  isize)).v.ob[2 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh508 = *fresh507;
            (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                               0 as libc::c_int) as
                                              isize)).v.ob[2 as libc::c_int as
                                                               usize] =
                *fresh508;
            let ref mut fresh509 =
                (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                   3 as libc::c_int) as
                                                  isize)).v.flag;
            *fresh509 = 0 as libc::c_int as libc::c_ushort;
            let ref mut fresh510 =
                (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                   2 as libc::c_int) as
                                                  isize)).v.flag;
            *fresh510 = *fresh509;
            let ref mut fresh511 =
                (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                   1 as libc::c_int) as
                                                  isize)).v.flag;
            *fresh511 = *fresh510;
            (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                               0 as libc::c_int) as
                                              isize)).v.flag = *fresh511;
            let ref mut fresh512 =
                (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                   2 as libc::c_int) as
                                                  isize)).v.tc[0 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh512 = 0 as libc::c_int as libc::c_short;
            let ref mut fresh513 =
                (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                   1 as libc::c_int) as
                                                  isize)).v.tc[1 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh513 = *fresh512;
            let ref mut fresh514 =
                (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                   0 as libc::c_int) as
                                                  isize)).v.tc[1 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh514 = *fresh513;
            (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                               0 as libc::c_int) as
                                              isize)).v.tc[0 as libc::c_int as
                                                               usize] =
                *fresh514;
            let ref mut fresh515 =
                (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                   3 as libc::c_int) as
                                                  isize)).v.tc[1 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh515 = 0x400 as libc::c_int as libc::c_short;
            let ref mut fresh516 =
                (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                   3 as libc::c_int) as
                                                  isize)).v.tc[0 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh516 = *fresh515;
            let ref mut fresh517 =
                (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                   2 as libc::c_int) as
                                                  isize)).v.tc[1 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh517 = *fresh516;
            (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                               1 as libc::c_int) as
                                              isize)).v.tc[0 as libc::c_int as
                                                               usize] =
                *fresh517;
            let ref mut fresh518 =
                (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                   3 as libc::c_int) as
                                                  isize)).v.cn[2 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh518 = 255 as libc::c_int as libc::c_uchar;
            let ref mut fresh519 =
                (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                   2 as libc::c_int) as
                                                  isize)).v.cn[2 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh519 = *fresh518;
            let ref mut fresh520 =
                (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                   1 as libc::c_int) as
                                                  isize)).v.cn[2 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh520 = *fresh519;
            let ref mut fresh521 =
                (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                   0 as libc::c_int) as
                                                  isize)).v.cn[2 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh521 = *fresh520;
            let ref mut fresh522 =
                (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                   3 as libc::c_int) as
                                                  isize)).v.cn[1 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh522 = *fresh521;
            let ref mut fresh523 =
                (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                   2 as libc::c_int) as
                                                  isize)).v.cn[1 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh523 = *fresh522;
            let ref mut fresh524 =
                (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                   1 as libc::c_int) as
                                                  isize)).v.cn[1 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh524 = *fresh523;
            let ref mut fresh525 =
                (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                   0 as libc::c_int) as
                                                  isize)).v.cn[1 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh525 = *fresh524;
            let ref mut fresh526 =
                (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                   3 as libc::c_int) as
                                                  isize)).v.cn[0 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh526 = *fresh525;
            let ref mut fresh527 =
                (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                   2 as libc::c_int) as
                                                  isize)).v.cn[0 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh527 = *fresh526;
            let ref mut fresh528 =
                (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                   1 as libc::c_int) as
                                                  isize)).v.cn[0 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh528 = *fresh527;
            (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                               0 as libc::c_int) as
                                              isize)).v.cn[0 as libc::c_int as
                                                               usize] =
                *fresh528;
            let ref mut fresh529 =
                (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                   3 as libc::c_int) as
                                                  isize)).v.cn[3 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh529 = (*pauseCtx).alpha as libc::c_uchar;
            let ref mut fresh530 =
                (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                   2 as libc::c_int) as
                                                  isize)).v.cn[3 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh530 = *fresh529;
            let ref mut fresh531 =
                (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                   1 as libc::c_int) as
                                                  isize)).v.cn[3 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh531 = *fresh530;
            (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                               0 as libc::c_int) as
                                              isize)).v.cn[3 as libc::c_int as
                                                               usize] =
                *fresh531
        }
        phi_t3 += 1;
        phi_t4 = (phi_t4 as libc::c_int + 4 as libc::c_int) as s16
    }
    phi_t1 = 112 as libc::c_int as s16;
    phi_t5 = 50 as libc::c_int as s16;
    loop  {
        let ref mut fresh532 =
            (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                               2 as libc::c_int) as
                                              isize)).v.ob[0 as libc::c_int as
                                                               usize];
        *fresh532 = -(64 as libc::c_int) as libc::c_short;
        (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                           0 as libc::c_int) as
                                          isize)).v.ob[0 as libc::c_int as
                                                           usize] = *fresh532;
        let ref mut fresh533 =
            (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                               3 as libc::c_int) as
                                              isize)).v.ob[0 as libc::c_int as
                                                               usize];
        *fresh533 =
            ((*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                0 as libc::c_int) as
                                               isize)).v.ob[0 as libc::c_int
                                                                as usize] as
                 libc::c_int + 64 as libc::c_int) as libc::c_short;
        (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                           1 as libc::c_int) as
                                          isize)).v.ob[0 as libc::c_int as
                                                           usize] = *fresh533;
        let ref mut fresh534 =
            (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                               1 as libc::c_int) as
                                              isize)).v.ob[1 as libc::c_int as
                                                               usize];
        *fresh534 =
            (phi_t5 as libc::c_int + (*pauseCtx).offsetY as libc::c_int) as
                libc::c_short;
        (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                           0 as libc::c_int) as
                                          isize)).v.ob[1 as libc::c_int as
                                                           usize] = *fresh534;
        let ref mut fresh535 =
            (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                               3 as libc::c_int) as
                                              isize)).v.ob[1 as libc::c_int as
                                                               usize];
        *fresh535 =
            ((*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                0 as libc::c_int) as
                                               isize)).v.ob[1 as libc::c_int
                                                                as usize] as
                 libc::c_int - 32 as libc::c_int) as libc::c_short;
        (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                           2 as libc::c_int) as
                                          isize)).v.ob[1 as libc::c_int as
                                                           usize] = *fresh535;
        let ref mut fresh536 =
            (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                               3 as libc::c_int) as
                                              isize)).v.ob[2 as libc::c_int as
                                                               usize];
        *fresh536 = 0 as libc::c_int as libc::c_short;
        let ref mut fresh537 =
            (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                               2 as libc::c_int) as
                                              isize)).v.ob[2 as libc::c_int as
                                                               usize];
        *fresh537 = *fresh536;
        let ref mut fresh538 =
            (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                               1 as libc::c_int) as
                                              isize)).v.ob[2 as libc::c_int as
                                                               usize];
        *fresh538 = *fresh537;
        (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                           0 as libc::c_int) as
                                          isize)).v.ob[2 as libc::c_int as
                                                           usize] = *fresh538;
        let ref mut fresh539 =
            (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                               3 as libc::c_int) as
                                              isize)).v.flag;
        *fresh539 = 0 as libc::c_int as libc::c_ushort;
        let ref mut fresh540 =
            (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                               2 as libc::c_int) as
                                              isize)).v.flag;
        *fresh540 = *fresh539;
        let ref mut fresh541 =
            (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                               1 as libc::c_int) as
                                              isize)).v.flag;
        *fresh541 = *fresh540;
        (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                           0 as libc::c_int) as isize)).v.flag
            = *fresh541;
        let ref mut fresh542 =
            (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                               2 as libc::c_int) as
                                              isize)).v.tc[0 as libc::c_int as
                                                               usize];
        *fresh542 = 0 as libc::c_int as libc::c_short;
        let ref mut fresh543 =
            (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                               1 as libc::c_int) as
                                              isize)).v.tc[1 as libc::c_int as
                                                               usize];
        *fresh543 = *fresh542;
        let ref mut fresh544 =
            (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                               0 as libc::c_int) as
                                              isize)).v.tc[1 as libc::c_int as
                                                               usize];
        *fresh544 = *fresh543;
        (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                           0 as libc::c_int) as
                                          isize)).v.tc[0 as libc::c_int as
                                                           usize] = *fresh544;
        let ref mut fresh545 =
            (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                               3 as libc::c_int) as
                                              isize)).v.tc[0 as libc::c_int as
                                                               usize];
        *fresh545 = 0x800 as libc::c_int as libc::c_short;
        (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                           1 as libc::c_int) as
                                          isize)).v.tc[0 as libc::c_int as
                                                           usize] = *fresh545;
        let ref mut fresh546 =
            (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                               3 as libc::c_int) as
                                              isize)).v.tc[1 as libc::c_int as
                                                               usize];
        *fresh546 = 0x400 as libc::c_int as libc::c_short;
        (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                           2 as libc::c_int) as
                                          isize)).v.tc[1 as libc::c_int as
                                                           usize] = *fresh546;
        let ref mut fresh547 =
            (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                               3 as libc::c_int) as
                                              isize)).v.cn[2 as libc::c_int as
                                                               usize];
        *fresh547 = 255 as libc::c_int as libc::c_uchar;
        let ref mut fresh548 =
            (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                               2 as libc::c_int) as
                                              isize)).v.cn[2 as libc::c_int as
                                                               usize];
        *fresh548 = *fresh547;
        let ref mut fresh549 =
            (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                               1 as libc::c_int) as
                                              isize)).v.cn[2 as libc::c_int as
                                                               usize];
        *fresh549 = *fresh548;
        let ref mut fresh550 =
            (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                               0 as libc::c_int) as
                                              isize)).v.cn[2 as libc::c_int as
                                                               usize];
        *fresh550 = *fresh549;
        let ref mut fresh551 =
            (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                               3 as libc::c_int) as
                                              isize)).v.cn[1 as libc::c_int as
                                                               usize];
        *fresh551 = *fresh550;
        let ref mut fresh552 =
            (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                               2 as libc::c_int) as
                                              isize)).v.cn[1 as libc::c_int as
                                                               usize];
        *fresh552 = *fresh551;
        let ref mut fresh553 =
            (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                               1 as libc::c_int) as
                                              isize)).v.cn[1 as libc::c_int as
                                                               usize];
        *fresh553 = *fresh552;
        let ref mut fresh554 =
            (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                               0 as libc::c_int) as
                                              isize)).v.cn[1 as libc::c_int as
                                                               usize];
        *fresh554 = *fresh553;
        let ref mut fresh555 =
            (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                               3 as libc::c_int) as
                                              isize)).v.cn[0 as libc::c_int as
                                                               usize];
        *fresh555 = *fresh554;
        let ref mut fresh556 =
            (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                               2 as libc::c_int) as
                                              isize)).v.cn[0 as libc::c_int as
                                                               usize];
        *fresh556 = *fresh555;
        let ref mut fresh557 =
            (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                               1 as libc::c_int) as
                                              isize)).v.cn[0 as libc::c_int as
                                                               usize];
        *fresh557 = *fresh556;
        (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                           0 as libc::c_int) as
                                          isize)).v.cn[0 as libc::c_int as
                                                           usize] = *fresh557;
        let ref mut fresh558 =
            (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                               3 as libc::c_int) as
                                              isize)).v.cn[3 as libc::c_int as
                                                               usize];
        *fresh558 = (*pauseCtx).alpha as libc::c_uchar;
        let ref mut fresh559 =
            (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                               2 as libc::c_int) as
                                              isize)).v.cn[3 as libc::c_int as
                                                               usize];
        *fresh559 = *fresh558;
        let ref mut fresh560 =
            (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                               1 as libc::c_int) as
                                              isize)).v.cn[3 as libc::c_int as
                                                               usize];
        *fresh560 = *fresh559;
        (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                           0 as libc::c_int) as
                                          isize)).v.cn[3 as libc::c_int as
                                                           usize] = *fresh560;
        phi_t1 = (phi_t1 as libc::c_int - 32 as libc::c_int) as s16;
        phi_t5 = (phi_t5 as libc::c_int - 32 as libc::c_int) as s16;
        if (phi_t1 as libc::c_int) < 0 as libc::c_int {
            let ref mut fresh561 =
                (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                   3 as libc::c_int) as
                                                  isize)).v.ob[1 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh561 =
                ((*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                    0 as libc::c_int) as
                                                   isize)).v.ob[1 as
                                                                    libc::c_int
                                                                    as usize]
                     as libc::c_int - 0x10 as libc::c_int) as libc::c_short;
            (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                               2 as libc::c_int) as
                                              isize)).v.ob[1 as libc::c_int as
                                                               usize] =
                *fresh561;
            let ref mut fresh562 =
                (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                                   3 as libc::c_int) as
                                                  isize)).v.tc[1 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh562 = 0x200 as libc::c_int as libc::c_short;
            (*(*pauseCtx).equipVtx.offset((phi_t4 as libc::c_int +
                                               2 as libc::c_int) as
                                              isize)).v.tc[1 as libc::c_int as
                                                               usize] =
                *fresh562;
            break ;
        } else { phi_t4 = (phi_t4 as libc::c_int + 4 as libc::c_int) as s16 }
    }
    (*pauseCtx).questVtx =
        Graph_Alloc(gfxCtx,
                    (188 as libc::c_int as
                         libc::c_uint).wrapping_mul(::std::mem::size_of::<Vtx>()
                                                        as libc::c_ulong) as
                        size_t) as *mut Vtx;
    phi_t4 = 0 as libc::c_int as s16;
    phi_t3 = 0 as libc::c_int as s16;
    while (phi_t3 as libc::c_int) < 47 as libc::c_int {
        phi_t2_2 = D_8082B1F8[phi_t3 as usize];
        if (phi_t3 as libc::c_int) < 6 as libc::c_int ||
               phi_t3 as libc::c_int >= 41 as libc::c_int {
            let ref mut fresh563 =
                (*(*pauseCtx).questVtx.offset((phi_t4 as libc::c_int +
                                                   2 as libc::c_int) as
                                                  isize)).v.ob[0 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh563 = D_8082B138[phi_t3 as usize];
            (*(*pauseCtx).questVtx.offset((phi_t4 as libc::c_int +
                                               0 as libc::c_int) as
                                              isize)).v.ob[0 as libc::c_int as
                                                               usize] =
                *fresh563;
            let ref mut fresh564 =
                (*(*pauseCtx).questVtx.offset((phi_t4 as libc::c_int +
                                                   3 as libc::c_int) as
                                                  isize)).v.ob[0 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh564 =
                ((*(*pauseCtx).questVtx.offset((phi_t4 as libc::c_int +
                                                    0 as libc::c_int) as
                                                   isize)).v.ob[0 as
                                                                    libc::c_int
                                                                    as usize]
                     as libc::c_int +
                     D_8082B1F8[phi_t3 as usize] as libc::c_int) as
                    libc::c_short;
            (*(*pauseCtx).questVtx.offset((phi_t4 as libc::c_int +
                                               1 as libc::c_int) as
                                              isize)).v.ob[0 as libc::c_int as
                                                               usize] =
                *fresh564;
            let ref mut fresh565 =
                (*(*pauseCtx).questVtx.offset((phi_t4 as libc::c_int +
                                                   1 as libc::c_int) as
                                                  isize)).v.ob[1 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh565 =
                (D_8082B198[phi_t3 as usize] as libc::c_int +
                     (*pauseCtx).offsetY as libc::c_int) as libc::c_short;
            (*(*pauseCtx).questVtx.offset((phi_t4 as libc::c_int +
                                               0 as libc::c_int) as
                                              isize)).v.ob[1 as libc::c_int as
                                                               usize] =
                *fresh565;
            let ref mut fresh566 =
                (*(*pauseCtx).questVtx.offset((phi_t4 as libc::c_int +
                                                   3 as libc::c_int) as
                                                  isize)).v.ob[1 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh566 =
                ((*(*pauseCtx).questVtx.offset((phi_t4 as libc::c_int +
                                                    0 as libc::c_int) as
                                                   isize)).v.ob[1 as
                                                                    libc::c_int
                                                                    as usize]
                     as libc::c_int -
                     D_8082B1F8[phi_t3 as usize] as libc::c_int) as
                    libc::c_short;
            (*(*pauseCtx).questVtx.offset((phi_t4 as libc::c_int +
                                               2 as libc::c_int) as
                                              isize)).v.ob[1 as libc::c_int as
                                                               usize] =
                *fresh566;
            if phi_t3 as libc::c_int >= 41 as libc::c_int {
                let ref mut fresh567 =
                    (*(*pauseCtx).questVtx.offset((phi_t4 as libc::c_int +
                                                       3 as libc::c_int) as
                                                      isize)).v.ob[0 as
                                                                       libc::c_int
                                                                       as
                                                                       usize];
                *fresh567 =
                    ((*(*pauseCtx).questVtx.offset((phi_t4 as libc::c_int +
                                                        0 as libc::c_int) as
                                                       isize)).v.ob[0 as
                                                                        libc::c_int
                                                                        as
                                                                        usize]
                         as libc::c_int + 8 as libc::c_int) as libc::c_short;
                (*(*pauseCtx).questVtx.offset((phi_t4 as libc::c_int +
                                                   1 as libc::c_int) as
                                                  isize)).v.ob[0 as
                                                                   libc::c_int
                                                                   as usize] =
                    *fresh567;
                let ref mut fresh568 =
                    (*(*pauseCtx).questVtx.offset((phi_t4 as libc::c_int +
                                                       1 as libc::c_int) as
                                                      isize)).v.ob[1 as
                                                                       libc::c_int
                                                                       as
                                                                       usize];
                *fresh568 =
                    (D_8082B198[phi_t3 as usize] as libc::c_int +
                         (*pauseCtx).offsetY as libc::c_int -
                         6 as libc::c_int) as libc::c_short;
                (*(*pauseCtx).questVtx.offset((phi_t4 as libc::c_int +
                                                   0 as libc::c_int) as
                                                  isize)).v.ob[1 as
                                                                   libc::c_int
                                                                   as usize] =
                    *fresh568;
                let ref mut fresh569 =
                    (*(*pauseCtx).questVtx.offset((phi_t4 as libc::c_int +
                                                       3 as libc::c_int) as
                                                      isize)).v.ob[1 as
                                                                       libc::c_int
                                                                       as
                                                                       usize];
                *fresh569 =
                    ((*(*pauseCtx).questVtx.offset((phi_t4 as libc::c_int +
                                                        0 as libc::c_int) as
                                                       isize)).v.ob[1 as
                                                                        libc::c_int
                                                                        as
                                                                        usize]
                         as libc::c_int - 16 as libc::c_int) as libc::c_short;
                (*(*pauseCtx).questVtx.offset((phi_t4 as libc::c_int +
                                                   2 as libc::c_int) as
                                                  isize)).v.ob[1 as
                                                                   libc::c_int
                                                                   as usize] =
                    *fresh569;
                phi_t2_2 = 8 as libc::c_int as s16
            }
        } else {
            if phi_t3 as libc::c_int >= 6 as libc::c_int &&
                   phi_t3 as libc::c_int <= 17 as libc::c_int {
                phi_t2_2 = 16 as libc::c_int as s16
            }
            let ref mut fresh570 =
                (*(*pauseCtx).questVtx.offset((phi_t4 as libc::c_int +
                                                   2 as libc::c_int) as
                                                  isize)).v.ob[0 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh570 =
                (D_8082B138[phi_t3 as usize] as libc::c_int +
                     2 as libc::c_int) as libc::c_short;
            (*(*pauseCtx).questVtx.offset((phi_t4 as libc::c_int +
                                               0 as libc::c_int) as
                                              isize)).v.ob[0 as libc::c_int as
                                                               usize] =
                *fresh570;
            let ref mut fresh571 =
                (*(*pauseCtx).questVtx.offset((phi_t4 as libc::c_int +
                                                   3 as libc::c_int) as
                                                  isize)).v.ob[0 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh571 =
                ((*(*pauseCtx).questVtx.offset((phi_t4 as libc::c_int +
                                                    0 as libc::c_int) as
                                                   isize)).v.ob[0 as
                                                                    libc::c_int
                                                                    as usize]
                     as libc::c_int + phi_t2_2 as libc::c_int -
                     4 as libc::c_int) as libc::c_short;
            (*(*pauseCtx).questVtx.offset((phi_t4 as libc::c_int +
                                               1 as libc::c_int) as
                                              isize)).v.ob[0 as libc::c_int as
                                                               usize] =
                *fresh571;
            let ref mut fresh572 =
                (*(*pauseCtx).questVtx.offset((phi_t4 as libc::c_int +
                                                   1 as libc::c_int) as
                                                  isize)).v.ob[1 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh572 =
                (D_8082B198[phi_t3 as usize] as libc::c_int +
                     (*pauseCtx).offsetY as libc::c_int - 2 as libc::c_int) as
                    libc::c_short;
            (*(*pauseCtx).questVtx.offset((phi_t4 as libc::c_int +
                                               0 as libc::c_int) as
                                              isize)).v.ob[1 as libc::c_int as
                                                               usize] =
                *fresh572;
            let ref mut fresh573 =
                (*(*pauseCtx).questVtx.offset((phi_t4 as libc::c_int +
                                                   3 as libc::c_int) as
                                                  isize)).v.ob[1 as
                                                                   libc::c_int
                                                                   as usize];
            *fresh573 =
                ((*(*pauseCtx).questVtx.offset((phi_t4 as libc::c_int +
                                                    0 as libc::c_int) as
                                                   isize)).v.ob[1 as
                                                                    libc::c_int
                                                                    as usize]
                     as libc::c_int -
                     D_8082B1F8[phi_t3 as usize] as libc::c_int +
                     4 as libc::c_int) as libc::c_short;
            (*(*pauseCtx).questVtx.offset((phi_t4 as libc::c_int +
                                               2 as libc::c_int) as
                                              isize)).v.ob[1 as libc::c_int as
                                                               usize] =
                *fresh573
        }
        let ref mut fresh574 =
            (*(*pauseCtx).questVtx.offset((phi_t4 as libc::c_int +
                                               3 as libc::c_int) as
                                              isize)).v.ob[2 as libc::c_int as
                                                               usize];
        *fresh574 = 0 as libc::c_int as libc::c_short;
        let ref mut fresh575 =
            (*(*pauseCtx).questVtx.offset((phi_t4 as libc::c_int +
                                               2 as libc::c_int) as
                                              isize)).v.ob[2 as libc::c_int as
                                                               usize];
        *fresh575 = *fresh574;
        let ref mut fresh576 =
            (*(*pauseCtx).questVtx.offset((phi_t4 as libc::c_int +
                                               1 as libc::c_int) as
                                              isize)).v.ob[2 as libc::c_int as
                                                               usize];
        *fresh576 = *fresh575;
        (*(*pauseCtx).questVtx.offset((phi_t4 as libc::c_int +
                                           0 as libc::c_int) as
                                          isize)).v.ob[2 as libc::c_int as
                                                           usize] = *fresh576;
        let ref mut fresh577 =
            (*(*pauseCtx).questVtx.offset((phi_t4 as libc::c_int +
                                               3 as libc::c_int) as
                                              isize)).v.flag;
        *fresh577 = 0 as libc::c_int as libc::c_ushort;
        let ref mut fresh578 =
            (*(*pauseCtx).questVtx.offset((phi_t4 as libc::c_int +
                                               2 as libc::c_int) as
                                              isize)).v.flag;
        *fresh578 = *fresh577;
        let ref mut fresh579 =
            (*(*pauseCtx).questVtx.offset((phi_t4 as libc::c_int +
                                               1 as libc::c_int) as
                                              isize)).v.flag;
        *fresh579 = *fresh578;
        (*(*pauseCtx).questVtx.offset((phi_t4 as libc::c_int +
                                           0 as libc::c_int) as isize)).v.flag
            = *fresh579;
        let ref mut fresh580 =
            (*(*pauseCtx).questVtx.offset((phi_t4 as libc::c_int +
                                               2 as libc::c_int) as
                                              isize)).v.tc[0 as libc::c_int as
                                                               usize];
        *fresh580 = 0 as libc::c_int as libc::c_short;
        let ref mut fresh581 =
            (*(*pauseCtx).questVtx.offset((phi_t4 as libc::c_int +
                                               1 as libc::c_int) as
                                              isize)).v.tc[1 as libc::c_int as
                                                               usize];
        *fresh581 = *fresh580;
        let ref mut fresh582 =
            (*(*pauseCtx).questVtx.offset((phi_t4 as libc::c_int +
                                               0 as libc::c_int) as
                                              isize)).v.tc[1 as libc::c_int as
                                                               usize];
        *fresh582 = *fresh581;
        (*(*pauseCtx).questVtx.offset((phi_t4 as libc::c_int +
                                           0 as libc::c_int) as
                                          isize)).v.tc[0 as libc::c_int as
                                                           usize] = *fresh582;
        let ref mut fresh583 =
            (*(*pauseCtx).questVtx.offset((phi_t4 as libc::c_int +
                                               3 as libc::c_int) as
                                              isize)).v.tc[0 as libc::c_int as
                                                               usize];
        *fresh583 =
            ((phi_t2_2 as libc::c_int) << 5 as libc::c_int) as libc::c_short;
        (*(*pauseCtx).questVtx.offset((phi_t4 as libc::c_int +
                                           1 as libc::c_int) as
                                          isize)).v.tc[0 as libc::c_int as
                                                           usize] = *fresh583;
        let ref mut fresh584 =
            (*(*pauseCtx).questVtx.offset((phi_t4 as libc::c_int +
                                               3 as libc::c_int) as
                                              isize)).v.tc[1 as libc::c_int as
                                                               usize];
        *fresh584 =
            ((D_8082B1F8[phi_t3 as usize] as libc::c_int) << 5 as libc::c_int)
                as libc::c_short;
        (*(*pauseCtx).questVtx.offset((phi_t4 as libc::c_int +
                                           2 as libc::c_int) as
                                          isize)).v.tc[1 as libc::c_int as
                                                           usize] = *fresh584;
        let ref mut fresh585 =
            (*(*pauseCtx).questVtx.offset((phi_t4 as libc::c_int +
                                               3 as libc::c_int) as
                                              isize)).v.cn[2 as libc::c_int as
                                                               usize];
        *fresh585 = 255 as libc::c_int as libc::c_uchar;
        let ref mut fresh586 =
            (*(*pauseCtx).questVtx.offset((phi_t4 as libc::c_int +
                                               2 as libc::c_int) as
                                              isize)).v.cn[2 as libc::c_int as
                                                               usize];
        *fresh586 = *fresh585;
        let ref mut fresh587 =
            (*(*pauseCtx).questVtx.offset((phi_t4 as libc::c_int +
                                               1 as libc::c_int) as
                                              isize)).v.cn[2 as libc::c_int as
                                                               usize];
        *fresh587 = *fresh586;
        let ref mut fresh588 =
            (*(*pauseCtx).questVtx.offset((phi_t4 as libc::c_int +
                                               0 as libc::c_int) as
                                              isize)).v.cn[2 as libc::c_int as
                                                               usize];
        *fresh588 = *fresh587;
        let ref mut fresh589 =
            (*(*pauseCtx).questVtx.offset((phi_t4 as libc::c_int +
                                               3 as libc::c_int) as
                                              isize)).v.cn[1 as libc::c_int as
                                                               usize];
        *fresh589 = *fresh588;
        let ref mut fresh590 =
            (*(*pauseCtx).questVtx.offset((phi_t4 as libc::c_int +
                                               2 as libc::c_int) as
                                              isize)).v.cn[1 as libc::c_int as
                                                               usize];
        *fresh590 = *fresh589;
        let ref mut fresh591 =
            (*(*pauseCtx).questVtx.offset((phi_t4 as libc::c_int +
                                               1 as libc::c_int) as
                                              isize)).v.cn[1 as libc::c_int as
                                                               usize];
        *fresh591 = *fresh590;
        let ref mut fresh592 =
            (*(*pauseCtx).questVtx.offset((phi_t4 as libc::c_int +
                                               0 as libc::c_int) as
                                              isize)).v.cn[1 as libc::c_int as
                                                               usize];
        *fresh592 = *fresh591;
        let ref mut fresh593 =
            (*(*pauseCtx).questVtx.offset((phi_t4 as libc::c_int +
                                               3 as libc::c_int) as
                                              isize)).v.cn[0 as libc::c_int as
                                                               usize];
        *fresh593 = *fresh592;
        let ref mut fresh594 =
            (*(*pauseCtx).questVtx.offset((phi_t4 as libc::c_int +
                                               2 as libc::c_int) as
                                              isize)).v.cn[0 as libc::c_int as
                                                               usize];
        *fresh594 = *fresh593;
        let ref mut fresh595 =
            (*(*pauseCtx).questVtx.offset((phi_t4 as libc::c_int +
                                               1 as libc::c_int) as
                                              isize)).v.cn[0 as libc::c_int as
                                                               usize];
        *fresh595 = *fresh594;
        (*(*pauseCtx).questVtx.offset((phi_t4 as libc::c_int +
                                           0 as libc::c_int) as
                                          isize)).v.cn[0 as libc::c_int as
                                                           usize] = *fresh595;
        let ref mut fresh596 =
            (*(*pauseCtx).questVtx.offset((phi_t4 as libc::c_int +
                                               3 as libc::c_int) as
                                              isize)).v.cn[3 as libc::c_int as
                                                               usize];
        *fresh596 = (*pauseCtx).alpha as libc::c_uchar;
        let ref mut fresh597 =
            (*(*pauseCtx).questVtx.offset((phi_t4 as libc::c_int +
                                               2 as libc::c_int) as
                                              isize)).v.cn[3 as libc::c_int as
                                                               usize];
        *fresh597 = *fresh596;
        let ref mut fresh598 =
            (*(*pauseCtx).questVtx.offset((phi_t4 as libc::c_int +
                                               1 as libc::c_int) as
                                              isize)).v.cn[3 as libc::c_int as
                                                               usize];
        *fresh598 = *fresh597;
        (*(*pauseCtx).questVtx.offset((phi_t4 as libc::c_int +
                                           0 as libc::c_int) as
                                          isize)).v.cn[3 as libc::c_int as
                                                           usize] = *fresh598;
        phi_t3 += 1;
        phi_t4 = (phi_t4 as libc::c_int + 4 as libc::c_int) as s16
    }
    (*pauseCtx).infoPanelVtx =
        Graph_Alloc(gfxCtx,
                    (28 as libc::c_int as
                         libc::c_uint).wrapping_mul(::std::mem::size_of::<Vtx>()
                                                        as libc::c_ulong) as
                        size_t) as *mut Vtx;
    (*pauseCtx).saveVtx =
        Graph_Alloc(gfxCtx,
                    (80 as libc::c_int as
                         libc::c_uint).wrapping_mul(::std::mem::size_of::<Vtx>()
                                                        as libc::c_ulong) as
                        size_t) as *mut Vtx;
    func_80823A0C(globalCtx, (*pauseCtx).saveVtx, 5 as libc::c_int as s16,
                  5 as libc::c_int as s16);
}
#[no_mangle]
pub unsafe extern "C" fn KaleidoScope_DrawGameOver(mut globalCtx:
                                                       *mut GlobalContext) {
    let mut gfxCtx: *mut GraphicsContext = (*globalCtx).state.gfxCtx;
    let mut __gfxCtx: *mut GraphicsContext = 0 as *mut GraphicsContext;
    let mut dispRefs: [*mut Gfx; 4] = [0 as *mut Gfx; 4];
    __gfxCtx = gfxCtx;
    Graph_OpenDisps(dispRefs.as_mut_ptr(), gfxCtx,
                    b"../z_kaleido_scope_PAL.c\x00" as *const u8 as
                        *const libc::c_char, 3122 as libc::c_int);
    func_800944C4(gfxCtx);
    let fresh599 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g: *mut Gfx = fresh599;
    (*_g).words.w0 =
        (0xe3 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            ((32 as libc::c_int - 20 as libc::c_int - 2 as libc::c_int) as
                 u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            ((2 as libc::c_int - 1 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g).words.w1 =
        ((1 as libc::c_int) << 20 as libc::c_int) as libc::c_uint;
    let fresh600 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_0: *mut Gfx = fresh600;
    (*_g_0).words.w0 =
        (0xe2 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            ((32 as libc::c_int - 3 as libc::c_int - 29 as libc::c_int) as
                 u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            ((29 as libc::c_int - 1 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_0).words.w1 =
        ((0 as libc::c_int) << 30 as libc::c_int |
             (3 as libc::c_int) << 26 as libc::c_int |
             (0 as libc::c_int) << 22 as libc::c_int |
             (2 as libc::c_int) << 18 as libc::c_int |
             (0x40 as libc::c_int | 0x200 as libc::c_int |
                  0x4000 as libc::c_int | 0 as libc::c_int |
                  (0 as libc::c_int) << 28 as libc::c_int |
                  (0 as libc::c_int) << 24 as libc::c_int |
                  (1 as libc::c_int) << 20 as libc::c_int |
                  (0 as libc::c_int) << 16 as libc::c_int)) as libc::c_uint;
    let fresh601 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_1: *mut Gfx = fresh601;
    (*_g_1).words.w0 =
        (0xfc as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (((2 as libc::c_int as u32_0 &
                   (((0x1 as libc::c_int) << 4 as libc::c_int) -
                        1 as libc::c_int) as libc::c_uint) <<
                  20 as libc::c_int |
                  (14 as libc::c_int as u32_0 &
                       (((0x1 as libc::c_int) << 5 as libc::c_int) -
                            1 as libc::c_int) as libc::c_uint) <<
                      15 as libc::c_int |
                  (7 as libc::c_int as u32_0 &
                       (((0x1 as libc::c_int) << 3 as libc::c_int) -
                            1 as libc::c_int) as libc::c_uint) <<
                      12 as libc::c_int |
                  (7 as libc::c_int as u32_0 &
                       (((0x1 as libc::c_int) << 3 as libc::c_int) -
                            1 as libc::c_int) as libc::c_uint) <<
                      9 as libc::c_int |
                  ((3 as libc::c_int as u32_0 &
                        (((0x1 as libc::c_int) << 4 as libc::c_int) -
                             1 as libc::c_int) as libc::c_uint) <<
                       5 as libc::c_int |
                       (0 as libc::c_int as u32_0 &
                            (((0x1 as libc::c_int) << 5 as libc::c_int) -
                                 1 as libc::c_int) as libc::c_uint) <<
                           0 as libc::c_int)) &
                 (((0x1 as libc::c_int) << 24 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_1).words.w1 =
        (1 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 4 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 28 as libc::c_int |
            (1 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 3 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 15 as libc::c_int
            |
            (7 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 3 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 12 as libc::c_int
            |
            (1 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 3 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 9 as libc::c_int |
            ((5 as libc::c_int as u32_0 &
                  (((0x1 as libc::c_int) << 4 as libc::c_int) -
                       1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int
                 |
                 (0 as libc::c_int as u32_0 &
                      (((0x1 as libc::c_int) << 3 as libc::c_int) -
                           1 as libc::c_int) as libc::c_uint) <<
                     21 as libc::c_int |
                 (3 as libc::c_int as u32_0 &
                      (((0x1 as libc::c_int) << 3 as libc::c_int) -
                           1 as libc::c_int) as libc::c_uint) <<
                     18 as libc::c_int |
                 (5 as libc::c_int as u32_0 &
                      (((0x1 as libc::c_int) << 3 as libc::c_int) -
                           1 as libc::c_int) as libc::c_uint) <<
                     6 as libc::c_int |
                 (7 as libc::c_int as u32_0 &
                      (((0x1 as libc::c_int) << 3 as libc::c_int) -
                           1 as libc::c_int) as libc::c_uint) <<
                     3 as libc::c_int |
                 (7 as libc::c_int as u32_0 &
                      (((0x1 as libc::c_int) << 3 as libc::c_int) -
                           1 as libc::c_int) as libc::c_uint) <<
                     0 as libc::c_int);
    let fresh602 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_2: *mut Gfx = fresh602;
    (*_g_2).words.w0 =
        (0xfa as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (80 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_2).words.w1 =
        (D_8082AB8C as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (D_8082AB90 as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (D_8082AB94 as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (D_8082AB98 as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh603 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_3: *mut Gfx = fresh603;
    (*_g_3).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_3).words.w1 =
        (D_8082AB9C as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (D_8082ABA0 as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (D_8082ABA4 as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (255 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*gGameInfo).data[(20 as libc::c_int * 6 as libc::c_int *
                           16 as libc::c_int + 89 as libc::c_int) as usize] =
        ((*gGameInfo).data[(20 as libc::c_int * 6 as libc::c_int *
                                16 as libc::c_int + 89 as libc::c_int) as
                               usize] as libc::c_int - 2 as libc::c_int) as
            s16;
    let fresh604 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_4: *mut Gfx = fresh604;
    (*_g_4).words.w0 =
        (0xfd as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (3 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 3 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 21 as libc::c_int
            |
            (2 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 2 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 19 as libc::c_int
            |
            ((1 as libc::c_int - 1 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_4).words.w1 = gGameOverP1Tex.as_mut_ptr() as libc::c_uint;
    let fresh605 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_5: *mut Gfx = fresh605;
    (*_g_5).words.w0 =
        (0xf5 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (3 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 3 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 21 as libc::c_int
            |
            (2 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 2 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 19 as libc::c_int
            |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 9 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 9 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 9 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_5).words.w1 =
        (7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 3 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 20 as libc::c_int
            |
            ((0 as libc::c_int | 0 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 2 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 18 as libc::c_int
            |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 14 as libc::c_int
            |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 10 as libc::c_int
            |
            ((0 as libc::c_int | 0 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 2 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 4 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh606 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_6: *mut Gfx = fresh606;
    (*_g_6).words.w0 =
        (0xe6 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_6).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh607 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_7: *mut Gfx = fresh607;
    (*_g_7).words.w0 =
        (0xf3 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 12 as libc::c_int
            |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_7).words.w1 =
        (7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 3 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            ((if ((64 as libc::c_int * 32 as libc::c_int + 1 as libc::c_int >>
                       1 as libc::c_int) - 1 as libc::c_int) <
                     2047 as libc::c_int {
                  (64 as libc::c_int * 32 as libc::c_int + 1 as libc::c_int >>
                       1 as libc::c_int) - 1 as libc::c_int
              } else { 2047 as libc::c_int }) as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 12 as libc::c_int
            |
            (((((1 as libc::c_int) << 11 as libc::c_int) +
                   (if 1 as libc::c_int >
                           64 as libc::c_int * 1 as libc::c_int /
                               8 as libc::c_int {
                        1 as libc::c_int
                    } else {
                        (64 as libc::c_int * 1 as libc::c_int) /
                            8 as libc::c_int
                    }) - 1 as libc::c_int) /
                  (if 1 as libc::c_int >
                          64 as libc::c_int * 1 as libc::c_int /
                              8 as libc::c_int {
                       1 as libc::c_int
                   } else {
                       (64 as libc::c_int * 1 as libc::c_int) /
                           8 as libc::c_int
                   })) as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh608 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_8: *mut Gfx = fresh608;
    (*_g_8).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_8).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh609 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_9: *mut Gfx = fresh609;
    (*_g_9).words.w0 =
        (0xf5 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (3 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 3 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 21 as libc::c_int
            |
            (1 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 2 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 19 as libc::c_int
            |
            ((64 as libc::c_int * 1 as libc::c_int + 7 as libc::c_int >>
                  3 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 9 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 9 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 9 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_9).words.w1 =
        (0 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 3 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 20 as libc::c_int
            |
            ((0 as libc::c_int | 0 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 2 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 18 as libc::c_int
            |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 14 as libc::c_int
            |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 10 as libc::c_int
            |
            ((0 as libc::c_int | 0 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 2 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 4 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh610 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_10: *mut Gfx = fresh610;
    (*_g_10).words.w0 =
        (0xf2 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 12 as libc::c_int
            |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_10).words.w1 =
        (0 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 3 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (((64 as libc::c_int - 1 as libc::c_int) << 2 as libc::c_int) as
                 u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 12 as libc::c_int
            |
            (((32 as libc::c_int - 1 as libc::c_int) << 2 as libc::c_int) as
                 u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh611 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_11: *mut Gfx = fresh611;
    (*_g_11).words.w0 =
        (0xfd as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (3 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 3 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 21 as libc::c_int
            |
            (2 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 2 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 19 as libc::c_int
            |
            ((1 as libc::c_int - 1 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_11).words.w1 = gGameOverMaskTex.as_mut_ptr() as libc::c_uint;
    let fresh612 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_12: *mut Gfx = fresh612;
    (*_g_12).words.w0 =
        (0xf5 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (3 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 3 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 21 as libc::c_int
            |
            (2 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 2 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 19 as libc::c_int
            |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 9 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 9 as libc::c_int |
            (256 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 9 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_12).words.w1 =
        (7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 3 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 20 as libc::c_int
            |
            ((0 as libc::c_int | 0 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 2 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 18 as libc::c_int
            |
            (5 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 14 as libc::c_int
            |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 10 as libc::c_int
            |
            ((0 as libc::c_int | 0 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 2 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 4 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh613 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_13: *mut Gfx = fresh613;
    (*_g_13).words.w0 =
        (0xe6 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_13).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh614 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_14: *mut Gfx = fresh614;
    (*_g_14).words.w0 =
        (0xf3 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 12 as libc::c_int
            |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_14).words.w1 =
        (7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 3 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            ((if ((64 as libc::c_int * 32 as libc::c_int + 1 as libc::c_int >>
                       1 as libc::c_int) - 1 as libc::c_int) <
                     2047 as libc::c_int {
                  (64 as libc::c_int * 32 as libc::c_int + 1 as libc::c_int >>
                       1 as libc::c_int) - 1 as libc::c_int
              } else { 2047 as libc::c_int }) as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 12 as libc::c_int
            |
            (((((1 as libc::c_int) << 11 as libc::c_int) +
                   (if 1 as libc::c_int >
                           64 as libc::c_int * 1 as libc::c_int /
                               8 as libc::c_int {
                        1 as libc::c_int
                    } else {
                        (64 as libc::c_int * 1 as libc::c_int) /
                            8 as libc::c_int
                    }) - 1 as libc::c_int) /
                  (if 1 as libc::c_int >
                          64 as libc::c_int * 1 as libc::c_int /
                              8 as libc::c_int {
                       1 as libc::c_int
                   } else {
                       (64 as libc::c_int * 1 as libc::c_int) /
                           8 as libc::c_int
                   })) as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh615 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_15: *mut Gfx = fresh615;
    (*_g_15).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_15).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh616 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_16: *mut Gfx = fresh616;
    (*_g_16).words.w0 =
        (0xf5 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (3 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 3 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 21 as libc::c_int
            |
            (1 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 2 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 19 as libc::c_int
            |
            ((64 as libc::c_int * 1 as libc::c_int + 7 as libc::c_int >>
                  3 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 9 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 9 as libc::c_int |
            (256 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 9 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_16).words.w1 =
        (1 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 3 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 20 as libc::c_int
            |
            ((0 as libc::c_int | 0 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 2 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 18 as libc::c_int
            |
            (5 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 14 as libc::c_int
            |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 10 as libc::c_int
            |
            ((0 as libc::c_int | 0 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 2 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 4 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh617 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_17: *mut Gfx = fresh617;
    (*_g_17).words.w0 =
        (0xf2 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 12 as libc::c_int
            |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_17).words.w1 =
        (1 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 3 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (((64 as libc::c_int - 1 as libc::c_int) << 2 as libc::c_int) as
                 u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 12 as libc::c_int
            |
            (((32 as libc::c_int - 1 as libc::c_int) << 2 as libc::c_int) as
                 u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh618 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_18: *mut Gfx = fresh618;
    (*_g_18).words.w0 =
        (0xf2 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 12 as libc::c_int
            |
            (((*gGameInfo).data[(20 as libc::c_int * 6 as libc::c_int *
                                     16 as libc::c_int + 89 as libc::c_int) as
                                    usize] as libc::c_int &
                  0x7f as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_18).words.w1 =
        (1 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 3 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (252 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 12 as libc::c_int
            |
            ((((*gGameInfo).data[(20 as libc::c_int * 6 as libc::c_int *
                                      16 as libc::c_int + 89 as libc::c_int)
                                     as usize] as libc::c_int &
                   0x7f as libc::c_int) + 0x7c as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh619 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_19: *mut Gfx = fresh619;
    (*_g_19).words.w0 =
        (0xe4 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            ((((*gGameInfo).data[(20 as libc::c_int * 6 as libc::c_int *
                                      16 as libc::c_int + 87 as libc::c_int)
                                     as usize] as libc::c_int +
                   64 as libc::c_int) << 2 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 12 as libc::c_int
            |
            ((((*gGameInfo).data[(20 as libc::c_int * 6 as libc::c_int *
                                      16 as libc::c_int + 88 as libc::c_int)
                                     as usize] as libc::c_int +
                   32 as libc::c_int) << 2 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_19).words.w1 =
        (0 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 3 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            ((((*gGameInfo).data[(20 as libc::c_int * 6 as libc::c_int *
                                      16 as libc::c_int + 87 as libc::c_int)
                                     as usize] as libc::c_int) <<
                  2 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 12 as libc::c_int
            |
            ((((*gGameInfo).data[(20 as libc::c_int * 6 as libc::c_int *
                                      16 as libc::c_int + 88 as libc::c_int)
                                     as usize] as libc::c_int) <<
                  2 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh620 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_20: *mut Gfx = fresh620;
    (*_g_20).words.w0 =
        (0xe1 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_20).words.w1 =
        (0 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 16 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 16 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh621 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_21: *mut Gfx = fresh621;
    (*_g_21).words.w0 =
        (0xf1 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_21).words.w1 =
        (((1 as libc::c_int) << 10 as libc::c_int) as u32_0 &
             (((0x1 as libc::c_int) << 16 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 16 as libc::c_int |
            (((1 as libc::c_int) << 10 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh622 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_22: *mut Gfx = fresh622;
    (*_g_22).words.w0 =
        (0xfd as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (3 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 3 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 21 as libc::c_int
            |
            (2 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 2 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 19 as libc::c_int
            |
            ((1 as libc::c_int - 1 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_22).words.w1 = gGameOverP2Tex.as_mut_ptr() as libc::c_uint;
    let fresh623 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_23: *mut Gfx = fresh623;
    (*_g_23).words.w0 =
        (0xf5 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (3 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 3 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 21 as libc::c_int
            |
            (2 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 2 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 19 as libc::c_int
            |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 9 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 9 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 9 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_23).words.w1 =
        (7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 3 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 20 as libc::c_int
            |
            ((0 as libc::c_int | 0x2 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 2 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 18 as libc::c_int
            |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 14 as libc::c_int
            |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 10 as libc::c_int
            |
            ((0 as libc::c_int | 0x2 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 2 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 4 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh624 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_24: *mut Gfx = fresh624;
    (*_g_24).words.w0 =
        (0xe6 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_24).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh625 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_25: *mut Gfx = fresh625;
    (*_g_25).words.w0 =
        (0xf3 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 12 as libc::c_int
            |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_25).words.w1 =
        (7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 3 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            ((if ((64 as libc::c_int * 32 as libc::c_int + 1 as libc::c_int >>
                       1 as libc::c_int) - 1 as libc::c_int) <
                     2047 as libc::c_int {
                  (64 as libc::c_int * 32 as libc::c_int + 1 as libc::c_int >>
                       1 as libc::c_int) - 1 as libc::c_int
              } else { 2047 as libc::c_int }) as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 12 as libc::c_int
            |
            (((((1 as libc::c_int) << 11 as libc::c_int) +
                   (if 1 as libc::c_int >
                           64 as libc::c_int * 1 as libc::c_int /
                               8 as libc::c_int {
                        1 as libc::c_int
                    } else {
                        (64 as libc::c_int * 1 as libc::c_int) /
                            8 as libc::c_int
                    }) - 1 as libc::c_int) /
                  (if 1 as libc::c_int >
                          64 as libc::c_int * 1 as libc::c_int /
                              8 as libc::c_int {
                       1 as libc::c_int
                   } else {
                       (64 as libc::c_int * 1 as libc::c_int) /
                           8 as libc::c_int
                   })) as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh626 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_26: *mut Gfx = fresh626;
    (*_g_26).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_26).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh627 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_27: *mut Gfx = fresh627;
    (*_g_27).words.w0 =
        (0xf5 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (3 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 3 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 21 as libc::c_int
            |
            (1 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 2 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 19 as libc::c_int
            |
            ((64 as libc::c_int * 1 as libc::c_int + 7 as libc::c_int >>
                  3 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 9 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 9 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 9 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_27).words.w1 =
        (0 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 3 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 20 as libc::c_int
            |
            ((0 as libc::c_int | 0x2 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 2 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 18 as libc::c_int
            |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 14 as libc::c_int
            |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 10 as libc::c_int
            |
            ((0 as libc::c_int | 0x2 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 2 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 4 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh628 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_28: *mut Gfx = fresh628;
    (*_g_28).words.w0 =
        (0xf2 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 12 as libc::c_int
            |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_28).words.w1 =
        (0 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 3 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (((64 as libc::c_int - 1 as libc::c_int) << 2 as libc::c_int) as
                 u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 12 as libc::c_int
            |
            (((32 as libc::c_int - 1 as libc::c_int) << 2 as libc::c_int) as
                 u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh629 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_29: *mut Gfx = fresh629;
    (*_g_29).words.w0 =
        (0xe4 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            ((((*gGameInfo).data[(20 as libc::c_int * 6 as libc::c_int *
                                      16 as libc::c_int + 87 as libc::c_int)
                                     as usize] as libc::c_int +
                   128 as libc::c_int) << 2 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 12 as libc::c_int
            |
            ((((*gGameInfo).data[(20 as libc::c_int * 6 as libc::c_int *
                                      16 as libc::c_int + 88 as libc::c_int)
                                     as usize] as libc::c_int +
                   32 as libc::c_int) << 2 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_29).words.w1 =
        (0 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 3 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            ((((*gGameInfo).data[(20 as libc::c_int * 6 as libc::c_int *
                                      16 as libc::c_int + 87 as libc::c_int)
                                     as usize] as libc::c_int +
                   64 as libc::c_int) << 2 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 12 as libc::c_int
            |
            ((((*gGameInfo).data[(20 as libc::c_int * 6 as libc::c_int *
                                      16 as libc::c_int + 88 as libc::c_int)
                                     as usize] as libc::c_int) <<
                  2 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh630 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_30: *mut Gfx = fresh630;
    (*_g_30).words.w0 =
        (0xe1 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_30).words.w1 =
        (0 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 16 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 16 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh631 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_31: *mut Gfx = fresh631;
    (*_g_31).words.w0 =
        (0xf1 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_31).words.w1 =
        (((1 as libc::c_int) << 10 as libc::c_int) as u32_0 &
             (((0x1 as libc::c_int) << 16 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 16 as libc::c_int |
            (((1 as libc::c_int) << 10 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh632 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_32: *mut Gfx = fresh632;
    (*_g_32).words.w0 =
        (0xfd as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (3 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 3 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 21 as libc::c_int
            |
            (2 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 2 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 19 as libc::c_int
            |
            ((1 as libc::c_int - 1 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_32).words.w1 = gGameOverP3Tex.as_mut_ptr() as libc::c_uint;
    let fresh633 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_33: *mut Gfx = fresh633;
    (*_g_33).words.w0 =
        (0xf5 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (3 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 3 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 21 as libc::c_int
            |
            (2 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 2 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 19 as libc::c_int
            |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 9 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 9 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 9 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_33).words.w1 =
        (7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 3 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 20 as libc::c_int
            |
            ((0 as libc::c_int | 0x2 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 2 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 18 as libc::c_int
            |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 14 as libc::c_int
            |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 10 as libc::c_int
            |
            ((0 as libc::c_int | 0x2 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 2 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 4 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh634 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_34: *mut Gfx = fresh634;
    (*_g_34).words.w0 =
        (0xe6 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_34).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh635 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_35: *mut Gfx = fresh635;
    (*_g_35).words.w0 =
        (0xf3 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 12 as libc::c_int
            |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_35).words.w1 =
        (7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 3 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            ((if ((64 as libc::c_int * 32 as libc::c_int + 1 as libc::c_int >>
                       1 as libc::c_int) - 1 as libc::c_int) <
                     2047 as libc::c_int {
                  (64 as libc::c_int * 32 as libc::c_int + 1 as libc::c_int >>
                       1 as libc::c_int) - 1 as libc::c_int
              } else { 2047 as libc::c_int }) as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 12 as libc::c_int
            |
            (((((1 as libc::c_int) << 11 as libc::c_int) +
                   (if 1 as libc::c_int >
                           64 as libc::c_int * 1 as libc::c_int /
                               8 as libc::c_int {
                        1 as libc::c_int
                    } else {
                        (64 as libc::c_int * 1 as libc::c_int) /
                            8 as libc::c_int
                    }) - 1 as libc::c_int) /
                  (if 1 as libc::c_int >
                          64 as libc::c_int * 1 as libc::c_int /
                              8 as libc::c_int {
                       1 as libc::c_int
                   } else {
                       (64 as libc::c_int * 1 as libc::c_int) /
                           8 as libc::c_int
                   })) as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh636 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_36: *mut Gfx = fresh636;
    (*_g_36).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_36).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh637 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_37: *mut Gfx = fresh637;
    (*_g_37).words.w0 =
        (0xf5 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (3 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 3 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 21 as libc::c_int
            |
            (1 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 2 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 19 as libc::c_int
            |
            ((64 as libc::c_int * 1 as libc::c_int + 7 as libc::c_int >>
                  3 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 9 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 9 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 9 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_37).words.w1 =
        (0 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 3 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 20 as libc::c_int
            |
            ((0 as libc::c_int | 0x2 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 2 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 18 as libc::c_int
            |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 14 as libc::c_int
            |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 10 as libc::c_int
            |
            ((0 as libc::c_int | 0x2 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 2 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 4 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh638 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_38: *mut Gfx = fresh638;
    (*_g_38).words.w0 =
        (0xf2 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 12 as libc::c_int
            |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_38).words.w1 =
        (0 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 3 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (((64 as libc::c_int - 1 as libc::c_int) << 2 as libc::c_int) as
                 u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 12 as libc::c_int
            |
            (((32 as libc::c_int - 1 as libc::c_int) << 2 as libc::c_int) as
                 u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh639 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_39: *mut Gfx = fresh639;
    (*_g_39).words.w0 =
        (0xe4 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            ((((*gGameInfo).data[(20 as libc::c_int * 6 as libc::c_int *
                                      16 as libc::c_int + 87 as libc::c_int)
                                     as usize] as libc::c_int +
                   192 as libc::c_int) << 2 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 12 as libc::c_int
            |
            ((((*gGameInfo).data[(20 as libc::c_int * 6 as libc::c_int *
                                      16 as libc::c_int + 88 as libc::c_int)
                                     as usize] as libc::c_int +
                   32 as libc::c_int) << 2 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_39).words.w1 =
        (0 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 3 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            ((((*gGameInfo).data[(20 as libc::c_int * 6 as libc::c_int *
                                      16 as libc::c_int + 87 as libc::c_int)
                                     as usize] as libc::c_int +
                   128 as libc::c_int) << 2 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 12 as libc::c_int
            |
            ((((*gGameInfo).data[(20 as libc::c_int * 6 as libc::c_int *
                                      16 as libc::c_int + 88 as libc::c_int)
                                     as usize] as libc::c_int) <<
                  2 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh640 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_40: *mut Gfx = fresh640;
    (*_g_40).words.w0 =
        (0xe1 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_40).words.w1 =
        (0 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 16 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 16 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh641 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_41: *mut Gfx = fresh641;
    (*_g_41).words.w0 =
        (0xf1 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_41).words.w1 =
        (((1 as libc::c_int) << 10 as libc::c_int) as u32_0 &
             (((0x1 as libc::c_int) << 16 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 16 as libc::c_int |
            (((1 as libc::c_int) << 10 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    Graph_CloseDisps(dispRefs.as_mut_ptr(), gfxCtx,
                     b"../z_kaleido_scope_PAL.c\x00" as *const u8 as
                         *const libc::c_char, 3169 as libc::c_int);
}
#[no_mangle]
pub unsafe extern "C" fn KaleidoScope_Draw(mut globalCtx:
                                               *mut GlobalContext) {
    let mut input: *mut Input =
        &mut *(*globalCtx).state.input.as_mut_ptr().offset(0 as libc::c_int as
                                                               isize) as
            *mut Input;
    let mut pauseCtx: *mut PauseContext = &mut (*globalCtx).pauseCtx;
    let mut interfaceCtx: *mut InterfaceContext =
        &mut (*globalCtx).interfaceCtx;
    let mut __gfxCtx: *mut GraphicsContext = 0 as *mut GraphicsContext;
    let mut dispRefs: [*mut Gfx; 4] = [0 as *mut Gfx; 4];
    __gfxCtx = (*globalCtx).state.gfxCtx;
    Graph_OpenDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                    b"../z_kaleido_scope_PAL.c\x00" as *const u8 as
                        *const libc::c_char, 3188 as libc::c_int);
    (*pauseCtx).stickRelX = (*input).rel.stick_x as s16;
    (*pauseCtx).stickRelY = (*input).rel.stick_y as s16;
    let fresh642 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g: *mut Gfx = fresh642;
    (*_g).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x2 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g).words.w1 = (*interfaceCtx).parameterSegment as libc::c_uint;
    let fresh643 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_0: *mut Gfx = fresh643;
    (*_g_0).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x7 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_0).words.w1 = (*pauseCtx).playerSegment as libc::c_uint;
    let fresh644 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_1: *mut Gfx = fresh644;
    (*_g_1).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x8 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_1).words.w1 = (*pauseCtx).iconItemSegment as libc::c_uint;
    let fresh645 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_2: *mut Gfx = fresh645;
    (*_g_2).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x9 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_2).words.w1 = (*pauseCtx).iconItem24Segment as libc::c_uint;
    let fresh646 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_3: *mut Gfx = fresh646;
    (*_g_3).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0xa as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_3).words.w1 = (*pauseCtx).nameSegment as libc::c_uint;
    let fresh647 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_4: *mut Gfx = fresh647;
    (*_g_4).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0xc as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_4).words.w1 = (*pauseCtx).iconItemAltSegment as libc::c_uint;
    let fresh648 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_5: *mut Gfx = fresh648;
    (*_g_5).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0xd as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_5).words.w1 = (*pauseCtx).iconItemLangSegment as libc::c_uint;
    if (*pauseCtx).debugState as libc::c_int == 0 as libc::c_int {
        KaleidoScope_SetView(pauseCtx, (*pauseCtx).eye.x, (*pauseCtx).eye.y,
                             (*pauseCtx).eye.z);
        func_800949A8((*globalCtx).state.gfxCtx);
        KaleidoScope_InitVertices(globalCtx, (*globalCtx).state.gfxCtx);
        KaleidoScope_DrawPages(globalCtx, (*globalCtx).state.gfxCtx);
        func_800949A8((*globalCtx).state.gfxCtx);
        let fresh649 = (*__gfxCtx).polyOpa.p;
        (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
        let mut _g_6: *mut Gfx = fresh649;
        (*_g_6).words.w0 =
            (0xfc as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int
                |
                (((3 as libc::c_int as u32_0 &
                       (((0x1 as libc::c_int) << 4 as libc::c_int) -
                            1 as libc::c_int) as libc::c_uint) <<
                      20 as libc::c_int |
                      (1 as libc::c_int as u32_0 &
                           (((0x1 as libc::c_int) << 5 as libc::c_int) -
                                1 as libc::c_int) as libc::c_uint) <<
                          15 as libc::c_int |
                      (1 as libc::c_int as u32_0 &
                           (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                1 as libc::c_int) as libc::c_uint) <<
                          12 as libc::c_int |
                      (3 as libc::c_int as u32_0 &
                           (((0x1 as libc::c_int) << 3 as libc::c_int) -
                                1 as libc::c_int) as libc::c_uint) <<
                          9 as libc::c_int |
                      ((3 as libc::c_int as u32_0 &
                            (((0x1 as libc::c_int) << 4 as libc::c_int) -
                                 1 as libc::c_int) as libc::c_uint) <<
                           5 as libc::c_int |
                           (1 as libc::c_int as u32_0 &
                                (((0x1 as libc::c_int) << 5 as libc::c_int) -
                                     1 as libc::c_int) as libc::c_uint) <<
                               0 as libc::c_int)) &
                     (((0x1 as libc::c_int) << 24 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int;
        (*_g_6).words.w1 =
            (5 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 4 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 28 as libc::c_int
                |
                (5 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 3 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    15 as libc::c_int |
                (7 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 3 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    12 as libc::c_int |
                (7 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 3 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    9 as libc::c_int |
                ((5 as libc::c_int as u32_0 &
                      (((0x1 as libc::c_int) << 4 as libc::c_int) -
                           1 as libc::c_int) as libc::c_uint) <<
                     24 as libc::c_int |
                     (1 as libc::c_int as u32_0 &
                          (((0x1 as libc::c_int) << 3 as libc::c_int) -
                               1 as libc::c_int) as libc::c_uint) <<
                         21 as libc::c_int |
                     (3 as libc::c_int as u32_0 &
                          (((0x1 as libc::c_int) << 3 as libc::c_int) -
                               1 as libc::c_int) as libc::c_uint) <<
                         18 as libc::c_int |
                     (5 as libc::c_int as u32_0 &
                          (((0x1 as libc::c_int) << 3 as libc::c_int) -
                               1 as libc::c_int) as libc::c_uint) <<
                         6 as libc::c_int |
                     (7 as libc::c_int as u32_0 &
                          (((0x1 as libc::c_int) << 3 as libc::c_int) -
                               1 as libc::c_int) as libc::c_uint) <<
                         3 as libc::c_int |
                     (7 as libc::c_int as u32_0 &
                          (((0x1 as libc::c_int) << 3 as libc::c_int) -
                               1 as libc::c_int) as libc::c_uint) <<
                         0 as libc::c_int);
        KaleidoScope_SetView(pauseCtx, 0.0f32, 0.0f32, 64.0f32);
        if !((*pauseCtx).state as libc::c_int >= 8 as libc::c_int &&
                 (*pauseCtx).state as libc::c_int <= 0x11 as libc::c_int) {
            KaleidoScope_DrawInfoPanel(globalCtx);
        }
    }
    if (*pauseCtx).state as libc::c_int >= 0xb as libc::c_int &&
           (*pauseCtx).state as libc::c_int <= 0x11 as libc::c_int {
        KaleidoScope_DrawGameOver(globalCtx);
    }
    if (*pauseCtx).debugState as libc::c_int == 1 as libc::c_int ||
           (*pauseCtx).debugState as libc::c_int == 2 as libc::c_int {
        KaleidoScope_DrawDebugEditor(globalCtx);
    }
    Graph_CloseDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                     b"../z_kaleido_scope_PAL.c\x00" as *const u8 as
                         *const libc::c_char, 3254 as libc::c_int);
}
#[no_mangle]
pub unsafe extern "C" fn KaleidoScope_GrayOutTextureRGBA32(mut texture:
                                                               *mut u32_0,
                                                           mut pixelCount:
                                                               u16_0) {
    let mut rgb: u32_0 = 0;
    let mut gray: u16_0 = 0;
    let mut i: u16_0 = 0;
    i = 0 as libc::c_int as u16_0;
    while (i as libc::c_int) < pixelCount as libc::c_int {
        if *texture.offset(i as isize) & 0xffffff00 as libc::c_uint !=
               0 as libc::c_int as libc::c_uint {
            rgb = *texture.offset(i as isize) >> 8 as libc::c_int;
            gray =
                (((rgb & 0xff0000 as libc::c_int as libc::c_uint) >>
                      16 as
                          libc::c_int).wrapping_add((rgb &
                                                         0xff00 as libc::c_int
                                                             as libc::c_uint)
                                                        >>
                                                        7 as
                                                            libc::c_int).wrapping_add(rgb
                                                                                          &
                                                                                          0xff
                                                                                              as
                                                                                              libc::c_int
                                                                                              as
                                                                                              libc::c_uint).wrapping_div(7
                                                                                                                             as
                                                                                                                             libc::c_int
                                                                                                                             as
                                                                                                                             libc::c_uint)
                     & 0xff as libc::c_int as libc::c_uint) as u16_0;
            rgb = gray as u32_0;
            rgb <<= 8 as libc::c_int;
            rgb |= gray as libc::c_uint;
            rgb <<= 8 as libc::c_int;
            rgb |= gray as libc::c_uint;
            *texture.offset(i as isize) =
                rgb << 8 as libc::c_int |
                    *texture.offset(i as isize) &
                        0xff as libc::c_int as libc::c_uint
        }
        i = i.wrapping_add(1)
    };
}
#[no_mangle]
pub unsafe extern "C" fn func_808265BC(mut globalCtx: *mut GlobalContext) {
    let mut pauseCtx: *mut PauseContext = &mut (*globalCtx).pauseCtx;
    (*pauseCtx).eye.x +=
        D_8082ABAC[(*pauseCtx).mode as usize] *
            (*gGameInfo).data[(10 as libc::c_int * 6 as libc::c_int *
                                   16 as libc::c_int + 46 as libc::c_int) as
                                  usize] as libc::c_int as libc::c_float;
    (*pauseCtx).eye.z +=
        D_8082ABCC[(*pauseCtx).mode as usize] *
            (*gGameInfo).data[(10 as libc::c_int * 6 as libc::c_int *
                                   16 as libc::c_int + 46 as libc::c_int) as
                                  usize] as libc::c_int as libc::c_float;
    (*pauseCtx).unk_1EA =
        ((*pauseCtx).unk_1EA as libc::c_int +
             4 as libc::c_int *
                 (*gGameInfo).data[(10 as libc::c_int * 6 as libc::c_int *
                                        16 as libc::c_int + 46 as libc::c_int)
                                       as usize] as libc::c_int) as u16_0;
    if (*pauseCtx).unk_1EA as libc::c_int ==
           64 as libc::c_int *
               (*gGameInfo).data[(10 as libc::c_int * 6 as libc::c_int *
                                      16 as libc::c_int + 47 as libc::c_int)
                                     as usize] as libc::c_int {
        func_80084BF4(globalCtx, 1 as libc::c_int as u16_0);
        gSaveContext.buttonStatus[0 as libc::c_int as usize] =
            D_8082AB6C[(*pauseCtx).pageIndex as
                           usize][0 as libc::c_int as usize];
        gSaveContext.buttonStatus[1 as libc::c_int as usize] =
            D_8082AB6C[(*pauseCtx).pageIndex as
                           usize][1 as libc::c_int as usize];
        gSaveContext.buttonStatus[2 as libc::c_int as usize] =
            D_8082AB6C[(*pauseCtx).pageIndex as
                           usize][2 as libc::c_int as usize];
        gSaveContext.buttonStatus[3 as libc::c_int as usize] =
            D_8082AB6C[(*pauseCtx).pageIndex as
                           usize][3 as libc::c_int as usize];
        gSaveContext.buttonStatus[4 as libc::c_int as usize] =
            D_8082AB6C[(*pauseCtx).pageIndex as
                           usize][4 as libc::c_int as usize];
        (*pauseCtx).pageIndex = D_8082ABEC[(*pauseCtx).mode as usize];
        (*pauseCtx).unk_1E4 = 0 as libc::c_int as u16_0;
        (*pauseCtx).state = (*pauseCtx).state.wrapping_add(1);
        (*pauseCtx).alpha = 255 as libc::c_int as u16_0;
        Interface_LoadActionLabelB(globalCtx,
                                   DO_ACTION_SAVE as libc::c_int as u16_0);
    } else if (*pauseCtx).unk_1EA as libc::c_int == 64 as libc::c_int {
        (*pauseCtx).pageIndex = D_8082ABEC[(*pauseCtx).mode as usize];
        (*pauseCtx).mode =
            (((*pauseCtx).pageIndex as libc::c_int * 2 as libc::c_int) as
                 u16_0 as libc::c_int + 1 as libc::c_int) as u16_0
    };
}
#[no_mangle]
pub unsafe extern "C" fn KaleidoScope_UpdateCursorSize(mut globalCtx:
                                                           *mut GlobalContext) {
    let mut pauseCtx: *mut PauseContext = &mut (*globalCtx).pauseCtx;
    let mut temp1: s32 = 0;
    let mut temp2: s32 = 0;
    let mut temp3: s32 = 0;
    let mut temp4: s32 = 0;
    if (*pauseCtx).cursorSpecialPos as libc::c_int == 0 as libc::c_int {
        temp1 = -(1 as libc::c_int);
        temp2 = 1 as libc::c_int;
        temp3 = 14 as libc::c_int;
        temp4 = 14 as libc::c_int;
        if (*pauseCtx).pageIndex as libc::c_int == PAUSE_MAP as libc::c_int {
            if sInDungeonScene == 0 {
                temp1 = -(6 as libc::c_int);
                temp2 = 6 as libc::c_int;
                temp3 = 4 as libc::c_int;
                temp4 = 4 as libc::c_int
            } else if (*pauseCtx).cursorSlot[(*pauseCtx).pageIndex as usize]
                          as libc::c_int >= 3 as libc::c_int {
                temp1 = -(6 as libc::c_int);
                temp2 = 5 as libc::c_int;
                temp4 = 7 as libc::c_int;
                temp3 = 19 as libc::c_int
            } else {
                temp1 = -(3 as libc::c_int);
                temp2 = 3 as libc::c_int;
                temp3 = 13 as libc::c_int;
                temp4 = 13 as libc::c_int
            }
        } else if (*pauseCtx).pageIndex as libc::c_int ==
                      PAUSE_QUEST as libc::c_int {
            temp1 = -(4 as libc::c_int);
            temp2 = 4 as libc::c_int;
            temp3 = 12 as libc::c_int;
            temp4 = 12 as libc::c_int;
            if (*pauseCtx).cursorSlot[(*pauseCtx).pageIndex as usize] as
                   libc::c_int == 0x18 as libc::c_int {
                temp1 = -(2 as libc::c_int);
                temp2 = 2 as libc::c_int;
                temp3 = 32 as libc::c_int;
                temp4 = 32 as libc::c_int
            } else if (*pauseCtx).cursorSlot[(*pauseCtx).pageIndex as usize]
                          as libc::c_int == 0x17 as libc::c_int {
                temp1 = -(4 as libc::c_int);
                temp2 = 4 as libc::c_int;
                temp4 = 13 as libc::c_int;
                temp3 = 34 as libc::c_int
            } else if ((*pauseCtx).cursorSlot[(*pauseCtx).pageIndex as usize]
                           as libc::c_int) < 6 as libc::c_int {
                temp1 = -(1 as libc::c_int);
                temp2 = 1 as libc::c_int;
                temp3 = 10 as libc::c_int;
                temp4 = 10 as libc::c_int
            } else if (*pauseCtx).cursorSlot[(*pauseCtx).pageIndex as usize]
                          as libc::c_int >= 6 as libc::c_int &&
                          ((*pauseCtx).cursorSlot[(*pauseCtx).pageIndex as
                                                      usize] as libc::c_int) <
                              0x12 as libc::c_int {
                temp1 = -(5 as libc::c_int);
                temp2 = 3 as libc::c_int;
                temp3 = 8 as libc::c_int;
                temp4 = 8 as libc::c_int
            }
        }
    } else {
        temp1 = -(4 as libc::c_int);
        temp2 = 4 as libc::c_int;
        temp3 = 16 as libc::c_int;
        temp4 = 16 as libc::c_int
    }
    let ref mut fresh650 =
        (*(*pauseCtx).cursorVtx.offset(2 as libc::c_int as
                                           isize)).v.ob[0 as libc::c_int as
                                                            usize];
    *fresh650 =
        ((*(*pauseCtx).cursorVtx.offset(0 as libc::c_int as
                                            isize)).v.ob[0 as libc::c_int as
                                                             usize] as
             libc::c_int + temp1) as libc::c_short;
    (*(*pauseCtx).cursorVtx.offset(0 as libc::c_int as
                                       isize)).v.ob[0 as libc::c_int as usize]
        = *fresh650;
    let ref mut fresh651 =
        (*(*pauseCtx).cursorVtx.offset(3 as libc::c_int as
                                           isize)).v.ob[0 as libc::c_int as
                                                            usize];
    *fresh651 =
        ((*(*pauseCtx).cursorVtx.offset(0 as libc::c_int as
                                            isize)).v.ob[0 as libc::c_int as
                                                             usize] as
             libc::c_int + 16 as libc::c_int) as libc::c_short;
    (*(*pauseCtx).cursorVtx.offset(1 as libc::c_int as
                                       isize)).v.ob[0 as libc::c_int as usize]
        = *fresh651;
    let ref mut fresh652 =
        (*(*pauseCtx).cursorVtx.offset(1 as libc::c_int as
                                           isize)).v.ob[1 as libc::c_int as
                                                            usize];
    *fresh652 =
        ((*(*pauseCtx).cursorVtx.offset(0 as libc::c_int as
                                            isize)).v.ob[1 as libc::c_int as
                                                             usize] as
             libc::c_int + temp2) as libc::c_short;
    (*(*pauseCtx).cursorVtx.offset(0 as libc::c_int as
                                       isize)).v.ob[1 as libc::c_int as usize]
        = *fresh652;
    let ref mut fresh653 =
        (*(*pauseCtx).cursorVtx.offset(3 as libc::c_int as
                                           isize)).v.ob[1 as libc::c_int as
                                                            usize];
    *fresh653 =
        ((*(*pauseCtx).cursorVtx.offset(0 as libc::c_int as
                                            isize)).v.ob[1 as libc::c_int as
                                                             usize] as
             libc::c_int - 16 as libc::c_int) as libc::c_short;
    (*(*pauseCtx).cursorVtx.offset(2 as libc::c_int as
                                       isize)).v.ob[1 as libc::c_int as usize]
        = *fresh653;
    let ref mut fresh654 =
        (*(*pauseCtx).cursorVtx.offset(6 as libc::c_int as
                                           isize)).v.ob[0 as libc::c_int as
                                                            usize];
    *fresh654 =
        ((*(*pauseCtx).cursorVtx.offset(0 as libc::c_int as
                                            isize)).v.ob[0 as libc::c_int as
                                                             usize] as
             libc::c_int + temp3) as libc::c_short;
    (*(*pauseCtx).cursorVtx.offset(4 as libc::c_int as
                                       isize)).v.ob[0 as libc::c_int as usize]
        = *fresh654;
    let ref mut fresh655 =
        (*(*pauseCtx).cursorVtx.offset(7 as libc::c_int as
                                           isize)).v.ob[0 as libc::c_int as
                                                            usize];
    *fresh655 =
        ((*(*pauseCtx).cursorVtx.offset(4 as libc::c_int as
                                            isize)).v.ob[0 as libc::c_int as
                                                             usize] as
             libc::c_int + 16 as libc::c_int) as libc::c_short;
    (*(*pauseCtx).cursorVtx.offset(5 as libc::c_int as
                                       isize)).v.ob[0 as libc::c_int as usize]
        = *fresh655;
    let ref mut fresh656 =
        (*(*pauseCtx).cursorVtx.offset(5 as libc::c_int as
                                           isize)).v.ob[1 as libc::c_int as
                                                            usize];
    *fresh656 =
        (*(*pauseCtx).cursorVtx.offset(0 as libc::c_int as
                                           isize)).v.ob[1 as libc::c_int as
                                                            usize];
    (*(*pauseCtx).cursorVtx.offset(4 as libc::c_int as
                                       isize)).v.ob[1 as libc::c_int as usize]
        = *fresh656;
    let ref mut fresh657 =
        (*(*pauseCtx).cursorVtx.offset(7 as libc::c_int as
                                           isize)).v.ob[1 as libc::c_int as
                                                            usize];
    *fresh657 =
        ((*(*pauseCtx).cursorVtx.offset(4 as libc::c_int as
                                            isize)).v.ob[1 as libc::c_int as
                                                             usize] as
             libc::c_int - 16 as libc::c_int) as libc::c_short;
    (*(*pauseCtx).cursorVtx.offset(6 as libc::c_int as
                                       isize)).v.ob[1 as libc::c_int as usize]
        = *fresh657;
    let ref mut fresh658 =
        (*(*pauseCtx).cursorVtx.offset(10 as libc::c_int as
                                           isize)).v.ob[0 as libc::c_int as
                                                            usize];
    *fresh658 =
        (*(*pauseCtx).cursorVtx.offset(0 as libc::c_int as
                                           isize)).v.ob[0 as libc::c_int as
                                                            usize];
    (*(*pauseCtx).cursorVtx.offset(8 as libc::c_int as
                                       isize)).v.ob[0 as libc::c_int as usize]
        = *fresh658;
    let ref mut fresh659 =
        (*(*pauseCtx).cursorVtx.offset(11 as libc::c_int as
                                           isize)).v.ob[0 as libc::c_int as
                                                            usize];
    *fresh659 =
        ((*(*pauseCtx).cursorVtx.offset(8 as libc::c_int as
                                            isize)).v.ob[0 as libc::c_int as
                                                             usize] as
             libc::c_int + 16 as libc::c_int) as libc::c_short;
    (*(*pauseCtx).cursorVtx.offset(9 as libc::c_int as
                                       isize)).v.ob[0 as libc::c_int as usize]
        = *fresh659;
    let ref mut fresh660 =
        (*(*pauseCtx).cursorVtx.offset(9 as libc::c_int as
                                           isize)).v.ob[1 as libc::c_int as
                                                            usize];
    *fresh660 =
        ((*(*pauseCtx).cursorVtx.offset(0 as libc::c_int as
                                            isize)).v.ob[1 as libc::c_int as
                                                             usize] as
             libc::c_int - temp4) as libc::c_short;
    (*(*pauseCtx).cursorVtx.offset(8 as libc::c_int as
                                       isize)).v.ob[1 as libc::c_int as usize]
        = *fresh660;
    let ref mut fresh661 =
        (*(*pauseCtx).cursorVtx.offset(11 as libc::c_int as
                                           isize)).v.ob[1 as libc::c_int as
                                                            usize];
    *fresh661 =
        ((*(*pauseCtx).cursorVtx.offset(8 as libc::c_int as
                                            isize)).v.ob[1 as libc::c_int as
                                                             usize] as
             libc::c_int - 16 as libc::c_int) as libc::c_short;
    (*(*pauseCtx).cursorVtx.offset(10 as libc::c_int as
                                       isize)).v.ob[1 as libc::c_int as usize]
        = *fresh661;
    let ref mut fresh662 =
        (*(*pauseCtx).cursorVtx.offset(14 as libc::c_int as
                                           isize)).v.ob[0 as libc::c_int as
                                                            usize];
    *fresh662 =
        ((*(*pauseCtx).cursorVtx.offset(0 as libc::c_int as
                                            isize)).v.ob[0 as libc::c_int as
                                                             usize] as
             libc::c_int + temp3) as libc::c_short;
    (*(*pauseCtx).cursorVtx.offset(12 as libc::c_int as
                                       isize)).v.ob[0 as libc::c_int as usize]
        = *fresh662;
    let ref mut fresh663 =
        (*(*pauseCtx).cursorVtx.offset(15 as libc::c_int as
                                           isize)).v.ob[0 as libc::c_int as
                                                            usize];
    *fresh663 =
        ((*(*pauseCtx).cursorVtx.offset(12 as libc::c_int as
                                            isize)).v.ob[0 as libc::c_int as
                                                             usize] as
             libc::c_int + 16 as libc::c_int) as libc::c_short;
    (*(*pauseCtx).cursorVtx.offset(13 as libc::c_int as
                                       isize)).v.ob[0 as libc::c_int as usize]
        = *fresh663;
    let ref mut fresh664 =
        (*(*pauseCtx).cursorVtx.offset(13 as libc::c_int as
                                           isize)).v.ob[1 as libc::c_int as
                                                            usize];
    *fresh664 =
        ((*(*pauseCtx).cursorVtx.offset(0 as libc::c_int as
                                            isize)).v.ob[1 as libc::c_int as
                                                             usize] as
             libc::c_int - temp4) as libc::c_short;
    (*(*pauseCtx).cursorVtx.offset(12 as libc::c_int as
                                       isize)).v.ob[1 as libc::c_int as usize]
        = *fresh664;
    let ref mut fresh665 =
        (*(*pauseCtx).cursorVtx.offset(15 as libc::c_int as
                                           isize)).v.ob[1 as libc::c_int as
                                                            usize];
    *fresh665 =
        ((*(*pauseCtx).cursorVtx.offset(12 as libc::c_int as
                                            isize)).v.ob[1 as libc::c_int as
                                                             usize] as
             libc::c_int - 16 as libc::c_int) as libc::c_short;
    (*(*pauseCtx).cursorVtx.offset(14 as libc::c_int as
                                       isize)).v.ob[1 as libc::c_int as usize]
        = *fresh665;
}
#[no_mangle]
pub unsafe extern "C" fn KaleidoScope_LoadDungeonMap(mut globalCtx:
                                                         *mut GlobalContext) {
    let mut interfaceCtx: *mut InterfaceContext =
        &mut (*globalCtx).interfaceCtx;
    let mut pad: s32 = 0;
    DmaMgr_SendRequest1((*interfaceCtx).mapSegment as *mut libc::c_void,
                        (_map_48x85_staticSegmentRomStart.as_mut_ptr() as
                             u32_0).wrapping_add(((*gGameInfo).data[(20 as
                                                                         libc::c_int
                                                                         *
                                                                         6 as
                                                                             libc::c_int
                                                                         *
                                                                         16 as
                                                                             libc::c_int
                                                                         +
                                                                         13 as
                                                                             libc::c_int)
                                                                        as
                                                                        usize]
                                                      as libc::c_int *
                                                      2040 as libc::c_int) as
                                                     libc::c_uint),
                        2040 as libc::c_int as u32_0,
                        b"../z_kaleido_scope_PAL.c\x00" as *const u8 as
                            *const libc::c_char, 3467 as libc::c_int);
    DmaMgr_SendRequest1((*interfaceCtx).mapSegment.offset(0x800 as libc::c_int
                                                              as isize) as
                            *mut libc::c_void,
                        (_map_48x85_staticSegmentRomStart.as_mut_ptr() as
                             u32_0).wrapping_add((((*gGameInfo).data[(20 as
                                                                          libc::c_int
                                                                          *
                                                                          6 as
                                                                              libc::c_int
                                                                          *
                                                                          16
                                                                              as
                                                                              libc::c_int
                                                                          +
                                                                          13
                                                                              as
                                                                              libc::c_int)
                                                                         as
                                                                         usize]
                                                       as libc::c_int +
                                                       1 as libc::c_int) *
                                                      2040 as libc::c_int) as
                                                     libc::c_uint),
                        2040 as libc::c_int as u32_0,
                        b"../z_kaleido_scope_PAL.c\x00" as *const u8 as
                            *const libc::c_char, 3471 as libc::c_int);
}
#[no_mangle]
pub unsafe extern "C" fn KaleidoScope_UpdateDungeonMap(mut globalCtx:
                                                           *mut GlobalContext) {
    let mut pauseCtx: *mut PauseContext = &mut (*globalCtx).pauseCtx;
    let mut interfaceCtx: *mut InterfaceContext =
        &mut (*globalCtx).interfaceCtx;
    osSyncPrintf(b"\xef\xbc\xad\xef\xbc\xa1\xef\xbc\xb0 \xef\xbc\xa4\xef\xbc\xad\xef\xbc\xa1 = %d\n\x00"
                     as *const u8 as *const libc::c_char,
                 (*globalCtx).interfaceCtx.mapPaletteIndex as libc::c_int);
    KaleidoScope_LoadDungeonMap(globalCtx);
    Map_SetFloorPalettesData(globalCtx,
                             ((*pauseCtx).dungeonMapSlot as libc::c_int -
                                  3 as libc::c_int) as s16);
    if (*globalCtx).sceneNum as libc::c_int >= SCENE_YDAN as libc::c_int &&
           (*globalCtx).sceneNum as libc::c_int <=
               SCENE_TAKARAYA as libc::c_int {
        if (*gGameInfo).data[(20 as libc::c_int * 6 as libc::c_int *
                                  16 as libc::c_int + 30 as libc::c_int) as
                                 usize] as libc::c_int + 3 as libc::c_int ==
               (*pauseCtx).cursorPoint[PAUSE_MAP as libc::c_int as usize] as
                   libc::c_int {
            KaleidoScope_OverridePalIndexCI4((*interfaceCtx).mapSegment,
                                             2040 as libc::c_int,
                                             (*interfaceCtx).mapPaletteIndex
                                                 as s32, 14 as libc::c_int);
        }
    }
    if (*globalCtx).sceneNum as libc::c_int >= SCENE_YDAN as libc::c_int &&
           (*globalCtx).sceneNum as libc::c_int <=
               SCENE_TAKARAYA as libc::c_int {
        if (*gGameInfo).data[(20 as libc::c_int * 6 as libc::c_int *
                                  16 as libc::c_int + 30 as libc::c_int) as
                                 usize] as libc::c_int + 3 as libc::c_int ==
               (*pauseCtx).cursorPoint[PAUSE_MAP as libc::c_int as usize] as
                   libc::c_int {
            KaleidoScope_OverridePalIndexCI4((*interfaceCtx).mapSegment.offset(0x800
                                                                                   as
                                                                                   libc::c_int
                                                                                   as
                                                                                   isize),
                                             2040 as libc::c_int,
                                             (*interfaceCtx).mapPaletteIndex
                                                 as s32, 14 as libc::c_int);
        }
    };
}
#[no_mangle]
pub unsafe extern "C" fn KaleidoScope_Update(mut globalCtx:
                                                 *mut GlobalContext) {
    static mut D_8082B258: s16 = 0 as libc::c_int as s16;
    static mut D_8082B25C: s16 = 10 as libc::c_int as s16;
    static mut D_8082B260: s16 = 0 as libc::c_int as s16;
    let mut pauseCtx: *mut PauseContext = &mut (*globalCtx).pauseCtx;
    let mut interfaceCtx: *mut InterfaceContext =
        &mut (*globalCtx).interfaceCtx;
    let mut gameOverCtx: *mut GameOverContext = &mut (*globalCtx).gameOverCtx;
    let mut player: *mut Player =
        (*globalCtx).actorCtx.actorLists[ACTORCAT_PLAYER as libc::c_int as
                                             usize].head as *mut Player;
    let mut input: *mut Input =
        &mut *(*globalCtx).state.input.as_mut_ptr().offset(0 as libc::c_int as
                                                               isize) as
            *mut Input;
    let mut size: u32_0 = 0;
    let mut size0: u32_0 = 0;
    let mut size1: u32_0 = 0;
    let mut size2: u32_0 = 0;
    let mut i: u16_0 = 0;
    let mut stepR: s16 = 0;
    let mut stepG: s16 = 0;
    let mut stepB: s16 = 0;
    let mut stepA: s16 = 0;
    let mut pad: s32 = 0;
    if (*gGameInfo).data[(1 as libc::c_int * 6 as libc::c_int *
                              16 as libc::c_int + 94 as libc::c_int) as usize]
           as libc::c_int >= 3 as libc::c_int &&
           ((*pauseCtx).state as libc::c_int >= 4 as libc::c_int &&
                (*pauseCtx).state as libc::c_int <= 7 as libc::c_int ||
                (*pauseCtx).state as libc::c_int >= 0xa as libc::c_int &&
                    (*pauseCtx).state as libc::c_int <= 0x12 as libc::c_int) {
        if ((*pauseCtx).unk_1E4 == 0 ||
                (*pauseCtx).unk_1E4 as libc::c_int == 8 as libc::c_int) &&
               (*pauseCtx).state as libc::c_int == 6 as libc::c_int {
            (*pauseCtx).stickRelX = (*input).rel.stick_x as s16;
            (*pauseCtx).stickRelY = (*input).rel.stick_y as s16;
            KaleidoScope_UpdateCursorSize(globalCtx);
            KaleidoScope_HandlePageToggles(pauseCtx, input);
        } else if (*pauseCtx).pageIndex as libc::c_int ==
                      PAUSE_QUEST as libc::c_int &&
                      (((*pauseCtx).unk_1E4 as libc::c_int) < 3 as libc::c_int
                           ||
                           (*pauseCtx).unk_1E4 as libc::c_int ==
                               5 as libc::c_int) {
            KaleidoScope_UpdateCursorSize(globalCtx);
        }
        if (*pauseCtx).state as libc::c_int == 6 as libc::c_int {
            KaleidoScope_UpdateNamePanel(globalCtx);
        }
    }
    match (*pauseCtx).state as libc::c_int {
        3 => {
            D_808321A8[0 as libc::c_int as usize] =
                gSaveContext.buttonStatus[0 as libc::c_int as usize];
            D_808321A8[1 as libc::c_int as usize] =
                gSaveContext.buttonStatus[1 as libc::c_int as usize];
            D_808321A8[2 as libc::c_int as usize] =
                gSaveContext.buttonStatus[2 as libc::c_int as usize];
            D_808321A8[3 as libc::c_int as usize] =
                gSaveContext.buttonStatus[3 as libc::c_int as usize];
            D_808321A8[4 as libc::c_int as usize] =
                gSaveContext.buttonStatus[4 as libc::c_int as usize];
            (*pauseCtx).cursorX[PAUSE_MAP as libc::c_int as usize] =
                0 as libc::c_int as s16;
            (*pauseCtx).dungeonMapSlot =
                ((*gGameInfo).data[(20 as libc::c_int * 6 as libc::c_int *
                                        16 as libc::c_int + 30 as libc::c_int)
                                       as usize] as libc::c_int +
                     3 as libc::c_int) as s16;
            (*pauseCtx).cursorPoint[PAUSE_MAP as libc::c_int as usize] =
                (*pauseCtx).dungeonMapSlot;
            (*pauseCtx).cursorSlot[PAUSE_MAP as libc::c_int as usize] =
                (*pauseCtx).cursorPoint[PAUSE_MAP as libc::c_int as usize] as
                    u16_0;
            (*gGameInfo).data[(18 as libc::c_int * 6 as libc::c_int *
                                   16 as libc::c_int + 16 as libc::c_int) as
                                  usize] = -(175 as libc::c_int) as s16;
            (*gGameInfo).data[(18 as libc::c_int * 6 as libc::c_int *
                                   16 as libc::c_int + 17 as libc::c_int) as
                                  usize] = 155 as libc::c_int as s16;
            (*pauseCtx).unk_204 = -314.0f32;
            (*pauseCtx).playerSegment =
                (((*globalCtx).objectCtx.spaceStart as
                      u32_0).wrapping_add(0x30 as libc::c_int as libc::c_uint)
                     & !(0x3f as libc::c_int) as libc::c_uint) as
                    *mut libc::c_void as *mut u8_0;
            size1 =
                func_80091738(globalCtx, (*pauseCtx).playerSegment,
                              &mut (*pauseCtx).playerSkelAnime);
            osSyncPrintf(b"\xe3\x83\x97\xe3\x83\xac\xe3\x82\xa4\xe3\x83\xa4\xe3\x83\xbc size1\xef\xbc\x9d%x\n\x00"
                             as *const u8 as *const libc::c_char, size1);
            (*pauseCtx).iconItemSegment =
                (((*pauseCtx).playerSegment as
                      u32_0).wrapping_add(size1).wrapping_add(0xf as
                                                                  libc::c_int
                                                                  as
                                                                  libc::c_uint)
                     & !(0xf as libc::c_int) as libc::c_uint) as
                    *mut libc::c_void as *mut u8_0;
            size0 =
                (_icon_item_staticSegmentRomEnd.as_mut_ptr() as
                     u32_0).wrapping_sub(_icon_item_staticSegmentRomStart.as_mut_ptr()
                                             as u32_0);
            osSyncPrintf(b"icon_item size0=%x\n\x00" as *const u8 as
                             *const libc::c_char, size0);
            DmaMgr_SendRequest1((*pauseCtx).iconItemSegment as
                                    *mut libc::c_void,
                                _icon_item_staticSegmentRomStart.as_mut_ptr()
                                    as u32_0, size0,
                                b"../z_kaleido_scope_PAL.c\x00" as *const u8
                                    as *const libc::c_char,
                                3662 as libc::c_int);
            gSegments[8 as libc::c_int as usize] =
                (*pauseCtx).iconItemSegment.offset(-(0x80000000 as
                                                         libc::c_uint as
                                                         isize)) as u32_0;
            i = 0 as libc::c_int as u16_0;
            while (i as libc::c_uint) <
                      (::std::mem::size_of::<[u8_0; 86]>() as
                           libc::c_ulong).wrapping_div(::std::mem::size_of::<u8_0>()
                                                           as libc::c_ulong) {
                if gItemAgeReqs[i as usize] as libc::c_int != 9 as libc::c_int
                       &&
                       gItemAgeReqs[i as usize] as libc::c_int !=
                           gSaveContext.linkAge {
                    KaleidoScope_GrayOutTextureRGBA32(gSegments[((gItemIcons[i
                                                                                 as
                                                                                 usize]
                                                                      as
                                                                      u32_0)
                                                                     <<
                                                                     4 as
                                                                         libc::c_int
                                                                     >>
                                                                     28 as
                                                                         libc::c_int)
                                                                    as
                                                                    usize].wrapping_add(gItemIcons[i
                                                                                                       as
                                                                                                       usize]
                                                                                            as
                                                                                            u32_0
                                                                                            &
                                                                                            0xffffff
                                                                                                as
                                                                                                libc::c_int
                                                                                                as
                                                                                                libc::c_uint).wrapping_add(0x80000000
                                                                                                                               as
                                                                                                                               libc::c_uint)
                                                          as *mut libc::c_void
                                                          as *mut u32_0,
                                                      0x400 as libc::c_int as
                                                          u16_0);
                }
                i = i.wrapping_add(1)
            }
            (*pauseCtx).iconItem24Segment =
                (((*pauseCtx).iconItemSegment as
                      u32_0).wrapping_add(size0).wrapping_add(0xf as
                                                                  libc::c_int
                                                                  as
                                                                  libc::c_uint)
                     & !(0xf as libc::c_int) as libc::c_uint) as
                    *mut libc::c_void as *mut u8_0;
            size =
                (_icon_item_24_staticSegmentRomEnd.as_mut_ptr() as
                     u32_0).wrapping_sub(_icon_item_24_staticSegmentRomStart.as_mut_ptr()
                                             as u32_0);
            osSyncPrintf(b"icon_item24 size=%x\n\x00" as *const u8 as
                             *const libc::c_char, size);
            DmaMgr_SendRequest1((*pauseCtx).iconItem24Segment as
                                    *mut libc::c_void,
                                _icon_item_24_staticSegmentRomStart.as_mut_ptr()
                                    as u32_0, size,
                                b"../z_kaleido_scope_PAL.c\x00" as *const u8
                                    as *const libc::c_char,
                                3675 as libc::c_int);
            (*pauseCtx).iconItemAltSegment =
                (((*pauseCtx).iconItem24Segment as
                      u32_0).wrapping_add(size).wrapping_add(0xf as
                                                                 libc::c_int
                                                                 as
                                                                 libc::c_uint)
                     & !(0xf as libc::c_int) as libc::c_uint) as
                    *mut libc::c_void as *mut u8_0;
            match (*globalCtx).sceneNum as libc::c_int {
                0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 17 | 18 | 19 | 20 | 21
                | 22 | 23 | 24 => {
                    sInDungeonScene = 1 as libc::c_int as s16;
                    size2 =
                        (_icon_item_dungeon_staticSegmentRomEnd.as_mut_ptr()
                             as
                             u32_0).wrapping_sub(_icon_item_dungeon_staticSegmentRomStart.as_mut_ptr()
                                                     as u32_0);
                    osSyncPrintf(b"icon_item_dungeon dungeon-size2=%x\n\x00"
                                     as *const u8 as *const libc::c_char,
                                 size2);
                    DmaMgr_SendRequest1((*pauseCtx).iconItemAltSegment as
                                            *mut libc::c_void,
                                        _icon_item_dungeon_staticSegmentRomStart.as_mut_ptr()
                                            as u32_0, size2,
                                        b"../z_kaleido_scope_PAL.c\x00" as
                                            *const u8 as *const libc::c_char,
                                        3712 as libc::c_int);
                    (*interfaceCtx).mapPalette[28 as libc::c_int as usize] =
                        6 as libc::c_int as u8_0;
                    (*interfaceCtx).mapPalette[29 as libc::c_int as usize] =
                        99 as libc::c_int as u8_0;
                    KaleidoScope_UpdateDungeonMap(globalCtx);
                }
                _ => {
                    sInDungeonScene = 0 as libc::c_int as s16;
                    size2 =
                        (_icon_item_field_staticSegmentRomEnd.as_mut_ptr() as
                             u32_0).wrapping_sub(_icon_item_field_staticSegmentRomStart.as_mut_ptr()
                                                     as u32_0);
                    osSyncPrintf(b"icon_item_field field-size2=%x\n\x00" as
                                     *const u8 as *const libc::c_char, size2);
                    DmaMgr_SendRequest1((*pauseCtx).iconItemAltSegment as
                                            *mut libc::c_void,
                                        _icon_item_field_staticSegmentRomStart.as_mut_ptr()
                                            as u32_0, size2,
                                        b"../z_kaleido_scope_PAL.c\x00" as
                                            *const u8 as *const libc::c_char,
                                        3726 as libc::c_int);
                }
            }
            (*pauseCtx).iconItemLangSegment =
                (((*pauseCtx).iconItemAltSegment as
                      u32_0).wrapping_add(size2).wrapping_add(0xf as
                                                                  libc::c_int
                                                                  as
                                                                  libc::c_uint)
                     & !(0xf as libc::c_int) as libc::c_uint) as
                    *mut libc::c_void as *mut u8_0;
            if gSaveContext.language as libc::c_int ==
                   LANGUAGE_ENG as libc::c_int {
                size =
                    (_icon_item_nes_staticSegmentRomEnd.as_mut_ptr() as
                         u32_0).wrapping_sub(_icon_item_nes_staticSegmentRomStart.as_mut_ptr()
                                                 as u32_0);
                osSyncPrintf(b"icon_item_dungeon dungeon-size=%x\n\x00" as
                                 *const u8 as *const libc::c_char, size);
                DmaMgr_SendRequest1((*pauseCtx).iconItemLangSegment as
                                        *mut libc::c_void,
                                    _icon_item_nes_staticSegmentRomStart.as_mut_ptr()
                                        as u32_0, size,
                                    b"../z_kaleido_scope_PAL.c\x00" as
                                        *const u8 as *const libc::c_char,
                                    3739 as libc::c_int);
            } else if gSaveContext.language as libc::c_int ==
                          LANGUAGE_GER as libc::c_int {
                size =
                    (_icon_item_ger_staticSegmentRomEnd.as_mut_ptr() as
                         u32_0).wrapping_sub(_icon_item_ger_staticSegmentRomStart.as_mut_ptr()
                                                 as u32_0);
                osSyncPrintf(b"icon_item_dungeon dungeon-size=%x\n\x00" as
                                 *const u8 as *const libc::c_char, size);
                DmaMgr_SendRequest1((*pauseCtx).iconItemLangSegment as
                                        *mut libc::c_void,
                                    _icon_item_ger_staticSegmentRomStart.as_mut_ptr()
                                        as u32_0, size,
                                    b"../z_kaleido_scope_PAL.c\x00" as
                                        *const u8 as *const libc::c_char,
                                    3746 as libc::c_int);
            } else {
                size =
                    (_icon_item_fra_staticSegmentRomEnd.as_mut_ptr() as
                         u32_0).wrapping_sub(_icon_item_fra_staticSegmentRomStart.as_mut_ptr()
                                                 as u32_0);
                osSyncPrintf(b"icon_item_dungeon dungeon-size=%x\n\x00" as
                                 *const u8 as *const libc::c_char, size);
                DmaMgr_SendRequest1((*pauseCtx).iconItemLangSegment as
                                        *mut libc::c_void,
                                    _icon_item_fra_staticSegmentRomStart.as_mut_ptr()
                                        as u32_0, size,
                                    b"../z_kaleido_scope_PAL.c\x00" as
                                        *const u8 as *const libc::c_char,
                                    3753 as libc::c_int);
            }
            (*pauseCtx).nameSegment =
                (((*pauseCtx).iconItemLangSegment as
                      u32_0).wrapping_add(size).wrapping_add(0xf as
                                                                 libc::c_int
                                                                 as
                                                                 libc::c_uint)
                     & !(0xf as libc::c_int) as libc::c_uint) as
                    *mut libc::c_void as *mut u8_0;
            osSyncPrintf(b"\xe3\x82\xb5\xe3\x82\xa4\xe3\x82\xba\xef\xbc\x9d%x\n\x00"
                             as *const u8 as *const libc::c_char,
                         size2.wrapping_add(size1).wrapping_add(size0).wrapping_add(size));
            osSyncPrintf(b"item_name I_N_PT=%x\n\x00" as *const u8 as
                             *const libc::c_char, 0x800 as libc::c_int);
            Interface_SetDoAction(globalCtx,
                                  DO_ACTION_DECIDE as libc::c_int as u16_0);
            osSyncPrintf(b"\xe3\x82\xb5\xe3\x82\xa4\xe3\x82\xba\xef\xbc\x9d%x\n\x00"
                             as *const u8 as *const libc::c_char,
                         size2.wrapping_add(size1).wrapping_add(size0).wrapping_add(size).wrapping_add(0x800
                                                                                                           as
                                                                                                           libc::c_int
                                                                                                           as
                                                                                                           libc::c_uint));
            if (gSaveContext.worldMapArea as libc::c_int) < 22 as libc::c_int
               {
                if gSaveContext.language as libc::c_int ==
                       LANGUAGE_ENG as libc::c_int {
                    DmaMgr_SendRequest1((*pauseCtx).nameSegment.offset(0x400
                                                                           as
                                                                           libc::c_int
                                                                           as
                                                                           isize)
                                            as *mut libc::c_void,
                                        (_map_name_staticSegmentRomStart.as_mut_ptr()
                                             as
                                             u32_0).wrapping_add((gSaveContext.worldMapArea
                                                                      as
                                                                      libc::c_int
                                                                      *
                                                                      0xa00 as
                                                                          libc::c_int)
                                                                     as
                                                                     libc::c_uint).wrapping_add(0x9000
                                                                                                    as
                                                                                                    libc::c_int
                                                                                                    as
                                                                                                    libc::c_uint),
                                        0xa00 as libc::c_int as u32_0,
                                        b"../z_kaleido_scope_PAL.c\x00" as
                                            *const u8 as *const libc::c_char,
                                        3776 as libc::c_int);
                } else if gSaveContext.language as libc::c_int ==
                              LANGUAGE_GER as libc::c_int {
                    DmaMgr_SendRequest1((*pauseCtx).nameSegment.offset(0x400
                                                                           as
                                                                           libc::c_int
                                                                           as
                                                                           isize)
                                            as *mut libc::c_void,
                                        (_map_name_staticSegmentRomStart.as_mut_ptr()
                                             as
                                             u32_0).wrapping_add((gSaveContext.worldMapArea
                                                                      as
                                                                      libc::c_int
                                                                      *
                                                                      0xa00 as
                                                                          libc::c_int)
                                                                     as
                                                                     libc::c_uint).wrapping_add(0x16c00
                                                                                                    as
                                                                                                    libc::c_int
                                                                                                    as
                                                                                                    libc::c_uint),
                                        0xa00 as libc::c_int as u32_0,
                                        b"../z_kaleido_scope_PAL.c\x00" as
                                            *const u8 as *const libc::c_char,
                                        3780 as libc::c_int);
                } else {
                    DmaMgr_SendRequest1((*pauseCtx).nameSegment.offset(0x400
                                                                           as
                                                                           libc::c_int
                                                                           as
                                                                           isize)
                                            as *mut libc::c_void,
                                        (_map_name_staticSegmentRomStart.as_mut_ptr()
                                             as
                                             u32_0).wrapping_add((gSaveContext.worldMapArea
                                                                      as
                                                                      libc::c_int
                                                                      *
                                                                      0xa00 as
                                                                          libc::c_int)
                                                                     as
                                                                     libc::c_uint).wrapping_add(0x24800
                                                                                                    as
                                                                                                    libc::c_int
                                                                                                    as
                                                                                                    libc::c_uint),
                                        0xa00 as libc::c_int as u32_0,
                                        b"../z_kaleido_scope_PAL.c\x00" as
                                            *const u8 as *const libc::c_char,
                                        3784 as libc::c_int);
                }
            }
            sPreRenderCvg =
                (((*pauseCtx).nameSegment as
                      u32_0).wrapping_add(0x400 as libc::c_int as
                                              libc::c_uint).wrapping_add(0xa00
                                                                             as
                                                                             libc::c_int
                                                                             as
                                                                             libc::c_uint).wrapping_add(0xf
                                                                                                            as
                                                                                                            libc::c_int
                                                                                                            as
                                                                                                            libc::c_uint)
                     & !(0xf as libc::c_int) as libc::c_uint) as
                    *mut libc::c_void;
            PreRender_Init(&mut sPlayerPreRender);
            PreRender_SetValuesSave(&mut sPlayerPreRender,
                                    64 as libc::c_int as u32_0,
                                    112 as libc::c_int as u32_0,
                                    (*pauseCtx).playerSegment as
                                        *mut libc::c_void,
                                    0 as *mut libc::c_void, sPreRenderCvg);
            KaleidoScope_DrawPlayerWork(globalCtx);
            KaleidoScope_SetupPlayerPreRender(globalCtx);
            i = 0 as libc::c_int as u16_0;
            while (i as libc::c_int) <
                      (::std::mem::size_of::<[u8_0; 20]>() as
                           libc::c_ulong).wrapping_div(::std::mem::size_of::<u8_0>()
                                                           as libc::c_ulong)
                          as s32 {
                (*pauseCtx).worldMapPoints[i as usize] =
                    0 as libc::c_int as u8_0;
                i = i.wrapping_add(1)
            }
            if gBitFlags[QUEST_GERUDO_CARD as libc::c_int as usize] &
                   gSaveContext.inventory.questItems != 0 {
                (*pauseCtx).worldMapPoints[0 as libc::c_int as usize] =
                    2 as libc::c_int as u8_0
            }
            if gBitFlags[QUEST_MEDALLION_SPIRIT as libc::c_int as usize] &
                   gSaveContext.inventory.questItems != 0 {
                (*pauseCtx).worldMapPoints[0 as libc::c_int as usize] =
                    1 as libc::c_int as u8_0
            }
            if gSaveContext.inventory.items[gItemSlots[ITEM_LONGSHOT as
                                                           libc::c_int as
                                                           usize] as usize] as
                   libc::c_int == ITEM_LONGSHOT as libc::c_int {
                (*pauseCtx).worldMapPoints[1 as libc::c_int as usize] =
                    2 as libc::c_int as u8_0
            }
            if gBitFlags[QUEST_GERUDO_CARD as libc::c_int as usize] &
                   gSaveContext.inventory.questItems != 0 {
                (*pauseCtx).worldMapPoints[1 as libc::c_int as usize] =
                    1 as libc::c_int as u8_0
            }
            if gSaveContext.eventChkInf[11 as libc::c_int as usize] as
                   libc::c_int & 4 as libc::c_int != 0 {
                (*pauseCtx).worldMapPoints[2 as libc::c_int as usize] =
                    1 as libc::c_int as u8_0
            }
            if gSaveContext.inventory.items[gItemSlots[ITEM_LONGSHOT as
                                                           libc::c_int as
                                                           usize] as usize] as
                   libc::c_int == ITEM_LONGSHOT as libc::c_int {
                (*pauseCtx).worldMapPoints[2 as libc::c_int as usize] =
                    2 as libc::c_int as u8_0
            }
            if gBitFlags[QUEST_GERUDO_CARD as libc::c_int as usize] &
                   gSaveContext.inventory.questItems != 0 {
                (*pauseCtx).worldMapPoints[2 as libc::c_int as usize] =
                    1 as libc::c_int as u8_0
            }
            if (gSaveContext.inventory.upgrades &
                    gUpgradeMasks[UPG_SCALE as libc::c_int as usize]) as s32
                   >>
                   gUpgradeShifts[UPG_SCALE as libc::c_int as usize] as
                       libc::c_int != 0 {
                (*pauseCtx).worldMapPoints[3 as libc::c_int as usize] =
                    1 as libc::c_int as u8_0
            }
            if gBitFlags[1 as libc::c_int as usize] <<
                   gEquipShifts[EQUIP_BOOTS as libc::c_int as usize] as
                       libc::c_int &
                   gSaveContext.inventory.equipment as libc::c_uint != 0 {
                (*pauseCtx).worldMapPoints[3 as libc::c_int as usize] =
                    2 as libc::c_int as u8_0
            }
            if gBitFlags[QUEST_MEDALLION_WATER as libc::c_int as usize] &
                   gSaveContext.inventory.questItems != 0 {
                (*pauseCtx).worldMapPoints[3 as libc::c_int as usize] =
                    1 as libc::c_int as u8_0
            }
            if gSaveContext.eventChkInf[0 as libc::c_int as usize] as
                   libc::c_int & 0x200 as libc::c_int != 0 {
                (*pauseCtx).worldMapPoints[4 as libc::c_int as usize] =
                    1 as libc::c_int as u8_0
            }
            if gSaveContext.inventory.items[gItemSlots[ITEM_OCARINA_FAIRY as
                                                           libc::c_int as
                                                           usize] as usize] as
                   libc::c_int != ITEM_NONE as libc::c_int {
                (*pauseCtx).worldMapPoints[4 as libc::c_int as usize] =
                    2 as libc::c_int as u8_0
            }
            if gBitFlags[QUEST_SONG_EPONA as libc::c_int as usize] &
                   gSaveContext.inventory.questItems != 0 {
                (*pauseCtx).worldMapPoints[4 as libc::c_int as usize] =
                    1 as libc::c_int as u8_0
            }
            if gSaveContext.eventChkInf[6 as libc::c_int as usize] as
                   libc::c_int & 0x400 as libc::c_int != 0 {
                (*pauseCtx).worldMapPoints[4 as libc::c_int as usize] =
                    2 as libc::c_int as u8_0
            }
            if gSaveContext.eventChkInf[1 as libc::c_int as usize] as
                   libc::c_int & 0x100 as libc::c_int != 0 {
                (*pauseCtx).worldMapPoints[4 as libc::c_int as usize] =
                    1 as libc::c_int as u8_0
            }
            if gSaveContext.eventChkInf[0 as libc::c_int as usize] as
                   libc::c_int & 0x200 as libc::c_int != 0 {
                (*pauseCtx).worldMapPoints[5 as libc::c_int as usize] =
                    2 as libc::c_int as u8_0
            }
            if gSaveContext.eventChkInf[4 as libc::c_int as usize] as
                   libc::c_int & 1 as libc::c_int != 0 {
                (*pauseCtx).worldMapPoints[5 as libc::c_int as usize] =
                    1 as libc::c_int as u8_0
            }
            if gSaveContext.inventory.items[gItemSlots[ITEM_OCARINA_TIME as
                                                           libc::c_int as
                                                           usize] as usize] as
                   libc::c_int == ITEM_OCARINA_TIME as libc::c_int {
                (*pauseCtx).worldMapPoints[5 as libc::c_int as usize] =
                    2 as libc::c_int as u8_0
            }
            if gSaveContext.eventChkInf[4 as libc::c_int as usize] as
                   libc::c_int & 0x20 as libc::c_int != 0 {
                (*pauseCtx).worldMapPoints[5 as libc::c_int as usize] =
                    1 as libc::c_int as u8_0
            }
            if gSaveContext.inventory.items[gItemSlots[ITEM_ARROW_LIGHT as
                                                           libc::c_int as
                                                           usize] as usize] as
                   libc::c_int == ITEM_ARROW_LIGHT as libc::c_int {
                (*pauseCtx).worldMapPoints[5 as libc::c_int as usize] =
                    2 as libc::c_int as u8_0
            }
            if gSaveContext.eventChkInf[0 as libc::c_int as usize] as
                   libc::c_int & 0x200 as libc::c_int != 0 {
                (*pauseCtx).worldMapPoints[6 as libc::c_int as usize] =
                    1 as libc::c_int as u8_0
            }
            if gSaveContext.eventChkInf[4 as libc::c_int as usize] as
                   libc::c_int & 1 as libc::c_int != 0 {
                (*pauseCtx).worldMapPoints[7 as libc::c_int as usize] =
                    2 as libc::c_int as u8_0
            }
            if gSaveContext.eventChkInf[2 as libc::c_int as usize] as
                   libc::c_int & 0x20 as libc::c_int != 0 {
                (*pauseCtx).worldMapPoints[7 as libc::c_int as usize] =
                    1 as libc::c_int as u8_0
            }
            if gSaveContext.inventory.items[gItemSlots[ITEM_HOOKSHOT as
                                                           libc::c_int as
                                                           usize] as usize] as
                   libc::c_int == ITEM_HOOKSHOT as libc::c_int {
                (*pauseCtx).worldMapPoints[7 as libc::c_int as usize] =
                    2 as libc::c_int as u8_0
            }
            if gSaveContext.eventChkInf[4 as libc::c_int as usize] as
                   libc::c_int & 0x200 as libc::c_int != 0 {
                (*pauseCtx).worldMapPoints[7 as libc::c_int as usize] =
                    1 as libc::c_int as u8_0
            }
            if gBitFlags[1 as libc::c_int as usize] &
                   gSaveContext.worldMapAreaData != 0 {
                (*pauseCtx).worldMapPoints[8 as libc::c_int as usize] =
                    1 as libc::c_int as u8_0
            }
            if gBitFlags[QUEST_SONG_LULLABY as libc::c_int as usize] &
                   gSaveContext.inventory.questItems != 0 {
                (*pauseCtx).worldMapPoints[8 as libc::c_int as usize] =
                    2 as libc::c_int as u8_0
            }
            if gBitFlags[QUEST_SONG_SUN as libc::c_int as usize] &
                   gSaveContext.inventory.questItems != 0 {
                (*pauseCtx).worldMapPoints[8 as libc::c_int as usize] =
                    1 as libc::c_int as u8_0
            }
            if gSaveContext.eventChkInf[4 as libc::c_int as usize] as
                   libc::c_int & 0x20 as libc::c_int != 0 {
                (*pauseCtx).worldMapPoints[8 as libc::c_int as usize] =
                    2 as libc::c_int as u8_0
            }
            if gSaveContext.inventory.items[gItemSlots[ITEM_HOOKSHOT as
                                                           libc::c_int as
                                                           usize] as usize] as
                   libc::c_int == ITEM_HOOKSHOT as libc::c_int {
                (*pauseCtx).worldMapPoints[8 as libc::c_int as usize] =
                    1 as libc::c_int as u8_0
            }
            if gBitFlags[QUEST_SONG_STORMS as libc::c_int as usize] &
                   gSaveContext.inventory.questItems != 0 {
                (*pauseCtx).worldMapPoints[8 as libc::c_int as usize] =
                    2 as libc::c_int as u8_0
            }
            if gSaveContext.eventChkInf[6 as libc::c_int as usize] as
                   libc::c_int & 0x80 as libc::c_int != 0 {
                (*pauseCtx).worldMapPoints[8 as libc::c_int as usize] =
                    1 as libc::c_int as u8_0
            }
            if gSaveContext.eventChkInf[10 as libc::c_int as usize] as
                   libc::c_int & 0x400 as libc::c_int != 0 {
                (*pauseCtx).worldMapPoints[8 as libc::c_int as usize] =
                    2 as libc::c_int as u8_0
            }
            if gBitFlags[QUEST_MEDALLION_SHADOW as libc::c_int as usize] &
                   gSaveContext.inventory.questItems != 0 {
                (*pauseCtx).worldMapPoints[8 as libc::c_int as usize] =
                    1 as libc::c_int as u8_0
            }
            if gBitFlags[10 as libc::c_int as usize] &
                   gSaveContext.worldMapAreaData != 0 {
                (*pauseCtx).worldMapPoints[9 as libc::c_int as usize] =
                    1 as libc::c_int as u8_0
            }
            if gSaveContext.eventChkInf[0 as libc::c_int as usize] as
                   libc::c_int & 0x8000 as libc::c_int != 0 {
                (*pauseCtx).worldMapPoints[9 as libc::c_int as usize] =
                    2 as libc::c_int as u8_0
            }
            if gBitFlags[QUEST_SONG_SARIA as libc::c_int as usize] &
                   gSaveContext.inventory.questItems != 0 {
                (*pauseCtx).worldMapPoints[9 as libc::c_int as usize] =
                    1 as libc::c_int as u8_0
            }
            if gSaveContext.inventory.items[gItemSlots[ITEM_HOOKSHOT as
                                                           libc::c_int as
                                                           usize] as usize] as
                   libc::c_int == ITEM_HOOKSHOT as libc::c_int {
                (*pauseCtx).worldMapPoints[9 as libc::c_int as usize] =
                    2 as libc::c_int as u8_0
            }
            if gSaveContext.eventChkInf[4 as libc::c_int as usize] as
                   libc::c_int & 0x100 as libc::c_int != 0 {
                (*pauseCtx).worldMapPoints[9 as libc::c_int as usize] =
                    1 as libc::c_int as u8_0
            }
            (*pauseCtx).worldMapPoints[10 as libc::c_int as usize] =
                2 as libc::c_int as u8_0;
            if gSaveContext.eventChkInf[0 as libc::c_int as usize] as
                   libc::c_int & 0x200 as libc::c_int != 0 {
                (*pauseCtx).worldMapPoints[10 as libc::c_int as usize] =
                    1 as libc::c_int as u8_0
            }
            if gSaveContext.eventChkInf[6 as libc::c_int as usize] as
                   libc::c_int & 0x4000 as libc::c_int != 0 {
                (*pauseCtx).worldMapPoints[10 as libc::c_int as usize] =
                    2 as libc::c_int as u8_0
            }
            if gSaveContext.eventChkInf[0 as libc::c_int as usize] as
                   libc::c_int & 0x8000 as libc::c_int != 0 {
                (*pauseCtx).worldMapPoints[10 as libc::c_int as usize] =
                    1 as libc::c_int as u8_0
            }
            if gBitFlags[QUEST_SONG_LULLABY as libc::c_int as usize] &
                   gSaveContext.inventory.questItems != 0 {
                (*pauseCtx).worldMapPoints[11 as libc::c_int as usize] =
                    1 as libc::c_int as u8_0
            }
            if gSaveContext.eventChkInf[2 as libc::c_int as usize] as
                   libc::c_int & 0x20 as libc::c_int != 0 {
                (*pauseCtx).worldMapPoints[11 as libc::c_int as usize] =
                    2 as libc::c_int as u8_0
            }
            if gSaveContext.eventChkInf[3 as libc::c_int as usize] as
                   libc::c_int & 0x80 as libc::c_int != 0 {
                (*pauseCtx).worldMapPoints[11 as libc::c_int as usize] =
                    1 as libc::c_int as u8_0
            }
            if gSaveContext.inventory.items[gItemSlots[ITEM_HOOKSHOT as
                                                           libc::c_int as
                                                           usize] as usize] as
                   libc::c_int == ITEM_HOOKSHOT as libc::c_int {
                (*pauseCtx).worldMapPoints[11 as libc::c_int as usize] =
                    2 as libc::c_int as u8_0
            }
            if gBitFlags[1 as libc::c_int as usize] <<
                   gEquipShifts[EQUIP_BOOTS as libc::c_int as usize] as
                       libc::c_int &
                   gSaveContext.inventory.equipment as libc::c_uint != 0 {
                (*pauseCtx).worldMapPoints[11 as libc::c_int as usize] =
                    1 as libc::c_int as u8_0
            }
            (*pauseCtx).tradeQuestLocation = 0xff as libc::c_int as u8_0;
            i =
                gSaveContext.inventory.items[gItemSlots[ITEM_POCKET_EGG as
                                                            libc::c_int as
                                                            usize] as usize]
                    as u16_0;
            if (if !(gSaveContext.linkAge == 0 as libc::c_int) {
                    5 as libc::c_int
                } else { 17 as libc::c_int }) == 17 as libc::c_int {
                if i as libc::c_int <= ITEM_POCKET_CUCCO as libc::c_int ||
                       i as libc::c_int == ITEM_ODD_MUSHROOM as libc::c_int {
                    (*pauseCtx).tradeQuestLocation = 8 as libc::c_int as u8_0
                }
                if i as libc::c_int == ITEM_COJIRO as libc::c_int ||
                       i as libc::c_int == ITEM_ODD_POTION as libc::c_int {
                    (*pauseCtx).tradeQuestLocation = 9 as libc::c_int as u8_0
                }
                if i as libc::c_int == ITEM_SAW as libc::c_int {
                    (*pauseCtx).tradeQuestLocation = 2 as libc::c_int as u8_0
                }
                if i as libc::c_int == ITEM_SWORD_BROKEN as libc::c_int ||
                       i as libc::c_int == ITEM_EYEDROPS as libc::c_int {
                    (*pauseCtx).tradeQuestLocation = 7 as libc::c_int as u8_0
                }
                if i as libc::c_int == ITEM_PRESCRIPTION as libc::c_int {
                    (*pauseCtx).tradeQuestLocation = 11 as libc::c_int as u8_0
                }
                if i as libc::c_int == ITEM_FROG as libc::c_int {
                    (*pauseCtx).tradeQuestLocation = 3 as libc::c_int as u8_0
                }
                if i as libc::c_int == ITEM_CLAIM_CHECK as libc::c_int &&
                       gSaveContext.bgsFlag as libc::c_int == 0 as libc::c_int
                   {
                    (*pauseCtx).tradeQuestLocation = 7 as libc::c_int as u8_0
                }
            }
            (*pauseCtx).state = 4 as libc::c_int as u16_0
        }
        4 => {
            if (*pauseCtx).unk_1F4 == 160.0f32 {
                KaleidoScope_SetDefaultCursor(globalCtx);
                KaleidoScope_ProcessPlayerPreRender();
            }
            (*pauseCtx).unk_200 -=
                160.0f32 /
                    (*gGameInfo).data[(18 as libc::c_int * 6 as libc::c_int *
                                           16 as libc::c_int +
                                           6 as libc::c_int) as usize] as
                        libc::c_int as libc::c_float;
            (*pauseCtx).unk_1FC = (*pauseCtx).unk_200;
            (*pauseCtx).unk_1F8 = (*pauseCtx).unk_1FC;
            (*pauseCtx).unk_1F4 = (*pauseCtx).unk_1F8;
            (*pauseCtx).infoPanelOffsetY =
                ((*pauseCtx).infoPanelOffsetY as libc::c_int +
                     40 as libc::c_int /
                         (*gGameInfo).data[(18 as libc::c_int *
                                                6 as libc::c_int *
                                                16 as libc::c_int +
                                                6 as libc::c_int) as usize] as
                             libc::c_int) as s16;
            (*interfaceCtx).startAlpha =
                ((*interfaceCtx).startAlpha as libc::c_int +
                     255 as libc::c_int /
                         (*gGameInfo).data[(18 as libc::c_int *
                                                6 as libc::c_int *
                                                16 as libc::c_int +
                                                6 as libc::c_int) as usize] as
                             libc::c_int) as s16;
            (*gGameInfo).data[(18 as libc::c_int * 6 as libc::c_int *
                                   16 as libc::c_int + 16 as libc::c_int) as
                                  usize] =
                ((*gGameInfo).data[(18 as libc::c_int * 6 as libc::c_int *
                                        16 as libc::c_int + 16 as libc::c_int)
                                       as usize] as libc::c_int +
                     (*gGameInfo).data[(18 as libc::c_int * 6 as libc::c_int *
                                            16 as libc::c_int +
                                            25 as libc::c_int) as usize] as
                         libc::c_int /
                         (*gGameInfo).data[(18 as libc::c_int *
                                                6 as libc::c_int *
                                                16 as libc::c_int +
                                                6 as libc::c_int) as usize] as
                             libc::c_int) as s16;
            (*gGameInfo).data[(18 as libc::c_int * 6 as libc::c_int *
                                   16 as libc::c_int + 17 as libc::c_int) as
                                  usize] =
                ((*gGameInfo).data[(18 as libc::c_int * 6 as libc::c_int *
                                        16 as libc::c_int + 17 as libc::c_int)
                                       as usize] as libc::c_int +
                     (*gGameInfo).data[(18 as libc::c_int * 6 as libc::c_int *
                                            16 as libc::c_int +
                                            26 as libc::c_int) as usize] as
                         libc::c_int /
                         (*gGameInfo).data[(18 as libc::c_int *
                                                6 as libc::c_int *
                                                16 as libc::c_int +
                                                6 as libc::c_int) as usize] as
                             libc::c_int) as s16;
            (*gGameInfo).data[(14 as libc::c_int * 6 as libc::c_int *
                                   16 as libc::c_int + 5 as libc::c_int) as
                                  usize] =
                ((*gGameInfo).data[(14 as libc::c_int * 6 as libc::c_int *
                                        16 as libc::c_int + 5 as libc::c_int)
                                       as usize] as libc::c_int +
                     150 as libc::c_int /
                         (*gGameInfo).data[(18 as libc::c_int *
                                                6 as libc::c_int *
                                                16 as libc::c_int +
                                                6 as libc::c_int) as usize] as
                             libc::c_int) as s16;
            (*pauseCtx).alpha =
                ((*pauseCtx).alpha as libc::c_int +
                     (255 as libc::c_int /
                          ((*gGameInfo).data[(18 as libc::c_int *
                                                  6 as libc::c_int *
                                                  16 as libc::c_int +
                                                  6 as libc::c_int) as usize]
                               as libc::c_int +
                               (*gGameInfo).data[(18 as libc::c_int *
                                                      6 as libc::c_int *
                                                      16 as libc::c_int +
                                                      4 as libc::c_int) as
                                                     usize] as libc::c_int))
                         as u16_0 as libc::c_int) as u16_0;
            if (*pauseCtx).unk_1F4 == 0 as libc::c_int as libc::c_float {
                (*interfaceCtx).startAlpha = 255 as libc::c_int as s16;
                (*gGameInfo).data[(18 as libc::c_int * 6 as libc::c_int *
                                       16 as libc::c_int + 2 as libc::c_int)
                                      as usize] = 0 as libc::c_int as s16;
                (*pauseCtx).state = 5 as libc::c_int as u16_0
            }
            func_808265BC(globalCtx);
        }
        5 => {
            (*pauseCtx).alpha =
                ((*pauseCtx).alpha as libc::c_int +
                     (255 as libc::c_int /
                          ((*gGameInfo).data[(18 as libc::c_int *
                                                  6 as libc::c_int *
                                                  16 as libc::c_int +
                                                  6 as libc::c_int) as usize]
                               as libc::c_int +
                               (*gGameInfo).data[(18 as libc::c_int *
                                                      6 as libc::c_int *
                                                      16 as libc::c_int +
                                                      4 as libc::c_int) as
                                                     usize] as libc::c_int))
                         as u16_0 as libc::c_int) as u16_0;
            func_808265BC(globalCtx);
            if (*pauseCtx).state as libc::c_int == 6 as libc::c_int {
                KaleidoScope_UpdateNamePanel(globalCtx);
            }
        }
        6 => {
            match (*pauseCtx).unk_1E4 as libc::c_int {
                0 => {
                    if !((*input).press.button as libc::c_int |
                             !(0x1000 as libc::c_int)) == 0 as libc::c_int {
                        Interface_SetDoAction(globalCtx,
                                              DO_ACTION_NONE as libc::c_int as
                                                  u16_0);
                        (*pauseCtx).state = 0x12 as libc::c_int as u16_0;
                        (*gGameInfo).data[(18 as libc::c_int *
                                               6 as libc::c_int *
                                               16 as libc::c_int +
                                               2 as libc::c_int) as usize] =
                            -(6240 as libc::c_int) as s16;
                        func_800F64E0(0 as libc::c_int as u8_0);
                    } else if !((*input).press.button as libc::c_int |
                                    !(0x4000 as libc::c_int)) ==
                                  0 as libc::c_int {
                        (*pauseCtx).mode = 0 as libc::c_int as u16_0;
                        (*pauseCtx).promptChoice = 0 as libc::c_int as s16;
                        Audio_PlaySoundGeneral(0x4808 as libc::c_int as u16_0,
                                               &mut D_801333D4,
                                               4 as libc::c_int as u8_0,
                                               &mut D_801333E0,
                                               &mut D_801333E0,
                                               &mut D_801333E8);
                        gSaveContext.buttonStatus[3 as libc::c_int as usize] =
                            BTN_DISABLED as libc::c_int as u8_0;
                        gSaveContext.buttonStatus[2 as libc::c_int as usize] =
                            gSaveContext.buttonStatus[3 as libc::c_int as
                                                          usize];
                        gSaveContext.buttonStatus[1 as libc::c_int as usize] =
                            gSaveContext.buttonStatus[2 as libc::c_int as
                                                          usize];
                        gSaveContext.buttonStatus[0 as libc::c_int as usize] =
                            gSaveContext.buttonStatus[1 as libc::c_int as
                                                          usize];
                        gSaveContext.buttonStatus[4 as libc::c_int as usize] =
                            BTN_ENABLED as libc::c_int as u8_0;
                        gSaveContext.unk_13EA = 0 as libc::c_int as u16_0;
                        Interface_ChangeAlpha(50 as libc::c_int as u16_0);
                        (*pauseCtx).unk_1EC = 0 as libc::c_int as u16_0;
                        (*pauseCtx).state = 7 as libc::c_int as u16_0
                    }
                }
                1 => {
                    func_808237B4(globalCtx,
                                  (*globalCtx).state.input.as_mut_ptr());
                }
                2 => {
                    (*pauseCtx).ocarinaStaff = Audio_OcaGetDisplayingStaff();
                    if (*(*pauseCtx).ocarinaStaff).state as libc::c_int ==
                           0 as libc::c_int {
                        (*pauseCtx).unk_1E4 = 4 as libc::c_int as u16_0;
                        Audio_OcaSetInstrument(0 as libc::c_int as u8_0);
                    }
                }
                3 => { KaleidoScope_UpdateItemEquip(globalCtx); }
                5 => {
                    (*pauseCtx).ocarinaStaff = Audio_OcaGetPlayingStaff();
                    if !((*input).press.button as libc::c_int |
                             !(0x1000 as libc::c_int)) == 0 as libc::c_int {
                        Audio_OcaSetInstrument(0 as libc::c_int as u8_0);
                        Interface_SetDoAction(globalCtx,
                                              DO_ACTION_NONE as libc::c_int as
                                                  u16_0);
                        (*pauseCtx).state = 0x12 as libc::c_int as u16_0;
                        (*gGameInfo).data[(18 as libc::c_int *
                                               6 as libc::c_int *
                                               16 as libc::c_int +
                                               2 as libc::c_int) as usize] =
                            -(6240 as libc::c_int) as s16;
                        func_800F64E0(0 as libc::c_int as u8_0);
                        (*pauseCtx).unk_1E4 = 0 as libc::c_int as u16_0
                    } else if !((*input).press.button as libc::c_int |
                                    !(0x4000 as libc::c_int)) ==
                                  0 as libc::c_int {
                        Audio_OcaSetInstrument(0 as libc::c_int as u8_0);
                        (*pauseCtx).unk_1E4 = 0 as libc::c_int as u16_0;
                        (*pauseCtx).mode = 0 as libc::c_int as u16_0;
                        (*pauseCtx).promptChoice = 0 as libc::c_int as s16;
                        Audio_PlaySoundGeneral(0x4808 as libc::c_int as u16_0,
                                               &mut D_801333D4,
                                               4 as libc::c_int as u8_0,
                                               &mut D_801333E0,
                                               &mut D_801333E0,
                                               &mut D_801333E8);
                        gSaveContext.buttonStatus[3 as libc::c_int as usize] =
                            BTN_DISABLED as libc::c_int as u8_0;
                        gSaveContext.buttonStatus[2 as libc::c_int as usize] =
                            gSaveContext.buttonStatus[3 as libc::c_int as
                                                          usize];
                        gSaveContext.buttonStatus[1 as libc::c_int as usize] =
                            gSaveContext.buttonStatus[2 as libc::c_int as
                                                          usize];
                        gSaveContext.buttonStatus[0 as libc::c_int as usize] =
                            gSaveContext.buttonStatus[1 as libc::c_int as
                                                          usize];
                        gSaveContext.buttonStatus[4 as libc::c_int as usize] =
                            BTN_ENABLED as libc::c_int as u8_0;
                        gSaveContext.unk_13EA = 0 as libc::c_int as u16_0;
                        Interface_ChangeAlpha(50 as libc::c_int as u16_0);
                        (*pauseCtx).unk_1EC = 0 as libc::c_int as u16_0;
                        (*pauseCtx).state = 7 as libc::c_int as u16_0
                    } else if (*(*pauseCtx).ocarinaStaff).state as libc::c_int
                                  == (*pauseCtx).ocarinaSongIdx as libc::c_int
                     {
                        Audio_PlaySoundGeneral(0x4807 as libc::c_int as u16_0,
                                               &mut D_801333D4,
                                               4 as libc::c_int as u8_0,
                                               &mut D_801333E0,
                                               &mut D_801333E0,
                                               &mut D_801333E8);
                        D_8082B258 = 0 as libc::c_int as s16;
                        D_8082B25C = 30 as libc::c_int as s16;
                        (*pauseCtx).unk_1E4 = 6 as libc::c_int as u16_0
                    } else if (*(*pauseCtx).ocarinaStaff).state as libc::c_int
                                  == 0xff as libc::c_int {
                        Audio_PlaySoundGeneral(0x4827 as libc::c_int as u16_0,
                                               &mut D_801333D4,
                                               4 as libc::c_int as u8_0,
                                               &mut D_801333E0,
                                               &mut D_801333E0,
                                               &mut D_801333E8);
                        D_8082B258 = 4 as libc::c_int as s16;
                        D_8082B25C = 20 as libc::c_int as s16;
                        (*pauseCtx).unk_1E4 = 6 as libc::c_int as u16_0
                    }
                }
                6 => {
                    D_8082B25C -= 1;
                    if D_8082B25C as libc::c_int == 0 as libc::c_int {
                        (*pauseCtx).unk_1E4 = D_8082B258 as u16_0;
                        if (*pauseCtx).unk_1E4 as libc::c_int ==
                               0 as libc::c_int {
                            Audio_OcaSetInstrument(0 as libc::c_int as u8_0);
                        }
                    }
                }
                8 => {
                    if !((*input).press.button as libc::c_int |
                             !(0x1000 as libc::c_int)) == 0 as libc::c_int {
                        Audio_OcaSetInstrument(0 as libc::c_int as u8_0);
                        Interface_SetDoAction(globalCtx,
                                              DO_ACTION_NONE as libc::c_int as
                                                  u16_0);
                        (*pauseCtx).state = 0x12 as libc::c_int as u16_0;
                        (*gGameInfo).data[(18 as libc::c_int *
                                               6 as libc::c_int *
                                               16 as libc::c_int +
                                               2 as libc::c_int) as usize] =
                            -(6240 as libc::c_int) as s16;
                        func_800F64E0(0 as libc::c_int as u8_0);
                        (*pauseCtx).unk_1E4 = 0 as libc::c_int as u16_0
                    } else if !((*input).press.button as libc::c_int |
                                    !(0x4000 as libc::c_int)) ==
                                  0 as libc::c_int {
                        Audio_OcaSetInstrument(0 as libc::c_int as u8_0);
                        (*pauseCtx).unk_1E4 = 0 as libc::c_int as u16_0;
                        (*pauseCtx).mode = 0 as libc::c_int as u16_0;
                        (*pauseCtx).promptChoice = 0 as libc::c_int as s16;
                        Audio_PlaySoundGeneral(0x4808 as libc::c_int as u16_0,
                                               &mut D_801333D4,
                                               4 as libc::c_int as u8_0,
                                               &mut D_801333E0,
                                               &mut D_801333E0,
                                               &mut D_801333E8);
                        gSaveContext.buttonStatus[3 as libc::c_int as usize] =
                            BTN_DISABLED as libc::c_int as u8_0;
                        gSaveContext.buttonStatus[2 as libc::c_int as usize] =
                            gSaveContext.buttonStatus[3 as libc::c_int as
                                                          usize];
                        gSaveContext.buttonStatus[1 as libc::c_int as usize] =
                            gSaveContext.buttonStatus[2 as libc::c_int as
                                                          usize];
                        gSaveContext.buttonStatus[0 as libc::c_int as usize] =
                            gSaveContext.buttonStatus[1 as libc::c_int as
                                                          usize];
                        gSaveContext.buttonStatus[4 as libc::c_int as usize] =
                            BTN_ENABLED as libc::c_int as u8_0;
                        gSaveContext.unk_13EA = 0 as libc::c_int as u16_0;
                        Interface_ChangeAlpha(50 as libc::c_int as u16_0);
                        (*pauseCtx).unk_1EC = 0 as libc::c_int as u16_0;
                        (*pauseCtx).state = 7 as libc::c_int as u16_0
                    }
                }
                4 | 7 | 9 => { }
                _ => { (*pauseCtx).unk_1E4 = 0 as libc::c_int as u16_0 }
            }
        }
        7 => {
            match (*pauseCtx).unk_1EC as libc::c_int {
                0 => {
                    (*pauseCtx).unk_204 -=
                        314.0f32 /
                            (*gGameInfo).data[(18 as libc::c_int *
                                                   6 as libc::c_int *
                                                   16 as libc::c_int +
                                                   6 as libc::c_int) as usize]
                                as libc::c_int as libc::c_float;
                    (*gGameInfo).data[(18 as libc::c_int * 6 as libc::c_int *
                                           16 as libc::c_int +
                                           16 as libc::c_int) as usize] =
                        ((*gGameInfo).data[(18 as libc::c_int *
                                                6 as libc::c_int *
                                                16 as libc::c_int +
                                                16 as libc::c_int) as usize]
                             as libc::c_int -
                             (*gGameInfo).data[(18 as libc::c_int *
                                                    6 as libc::c_int *
                                                    16 as libc::c_int +
                                                    25 as libc::c_int) as
                                                   usize] as libc::c_int /
                                 (*gGameInfo).data[(18 as libc::c_int *
                                                        6 as libc::c_int *
                                                        16 as libc::c_int +
                                                        6 as libc::c_int) as
                                                       usize] as libc::c_int)
                            as s16;
                    (*gGameInfo).data[(18 as libc::c_int * 6 as libc::c_int *
                                           16 as libc::c_int +
                                           17 as libc::c_int) as usize] =
                        ((*gGameInfo).data[(18 as libc::c_int *
                                                6 as libc::c_int *
                                                16 as libc::c_int +
                                                17 as libc::c_int) as usize]
                             as libc::c_int -
                             (*gGameInfo).data[(18 as libc::c_int *
                                                    6 as libc::c_int *
                                                    16 as libc::c_int +
                                                    26 as libc::c_int) as
                                                   usize] as libc::c_int /
                                 (*gGameInfo).data[(18 as libc::c_int *
                                                        6 as libc::c_int *
                                                        16 as libc::c_int +
                                                        6 as libc::c_int) as
                                                       usize] as libc::c_int)
                            as s16;
                    if (*pauseCtx).unk_204 <= -628.0f32 {
                        (*pauseCtx).unk_204 = -628.0f32;
                        (*pauseCtx).unk_1EC = 1 as libc::c_int as u16_0
                    }
                }
                1 => {
                    if !((*input).press.button as libc::c_int |
                             !(0x8000 as libc::c_int)) == 0 as libc::c_int {
                        if (*pauseCtx).promptChoice as libc::c_int !=
                               0 as libc::c_int {
                            Interface_SetDoAction(globalCtx,
                                                  DO_ACTION_NONE as
                                                      libc::c_int as u16_0);
                            gSaveContext.buttonStatus[3 as libc::c_int as
                                                          usize] =
                                BTN_ENABLED as libc::c_int as u8_0;
                            gSaveContext.buttonStatus[2 as libc::c_int as
                                                          usize] =
                                gSaveContext.buttonStatus[3 as libc::c_int as
                                                              usize];
                            gSaveContext.buttonStatus[1 as libc::c_int as
                                                          usize] =
                                gSaveContext.buttonStatus[2 as libc::c_int as
                                                              usize];
                            gSaveContext.buttonStatus[0 as libc::c_int as
                                                          usize] =
                                gSaveContext.buttonStatus[1 as libc::c_int as
                                                              usize];
                            gSaveContext.unk_13EA = 0 as libc::c_int as u16_0;
                            Interface_ChangeAlpha(50 as libc::c_int as u16_0);
                            (*pauseCtx).unk_1EC = 2 as libc::c_int as u16_0;
                            (*gGameInfo).data[(18 as libc::c_int *
                                                   6 as libc::c_int *
                                                   16 as libc::c_int +
                                                   2 as libc::c_int) as usize]
                                = -(6240 as libc::c_int) as s16;
                            (*gGameInfo).data[(6 as libc::c_int *
                                                   6 as libc::c_int *
                                                   16 as libc::c_int +
                                                   8 as libc::c_int) as usize]
                                = (*pauseCtx).unk_204 as s16;
                            func_800F64E0(0 as libc::c_int as u8_0);
                        } else {
                            Audio_PlaySoundGeneral(0x4823 as libc::c_int as
                                                       u16_0, &mut D_801333D4,
                                                   4 as libc::c_int as u8_0,
                                                   &mut D_801333E0,
                                                   &mut D_801333E0,
                                                   &mut D_801333E8);
                            Gameplay_SaveSceneFlags(globalCtx);
                            gSaveContext.savedSceneNum =
                                (*globalCtx).sceneNum;
                            Sram_WriteSave(&mut (*globalCtx).sramCtx);
                            (*pauseCtx).unk_1EC = 4 as libc::c_int as u16_0;
                            D_8082B25C = 3 as libc::c_int as s16
                        }
                    } else if !((*input).press.button as libc::c_int |
                                    !(0x1000 as libc::c_int)) ==
                                  0 as libc::c_int ||
                                  !((*input).press.button as libc::c_int |
                                        !(0x4000 as libc::c_int)) ==
                                      0 as libc::c_int {
                        Interface_SetDoAction(globalCtx,
                                              DO_ACTION_NONE as libc::c_int as
                                                  u16_0);
                        (*pauseCtx).unk_1EC = 2 as libc::c_int as u16_0;
                        (*gGameInfo).data[(18 as libc::c_int *
                                               6 as libc::c_int *
                                               16 as libc::c_int +
                                               2 as libc::c_int) as usize] =
                            -(6240 as libc::c_int) as s16;
                        (*gGameInfo).data[(6 as libc::c_int * 6 as libc::c_int
                                               * 16 as libc::c_int +
                                               8 as libc::c_int) as usize] =
                            (*pauseCtx).unk_204 as s16;
                        func_800F64E0(0 as libc::c_int as u8_0);
                        gSaveContext.buttonStatus[3 as libc::c_int as usize] =
                            BTN_ENABLED as libc::c_int as u8_0;
                        gSaveContext.buttonStatus[2 as libc::c_int as usize] =
                            gSaveContext.buttonStatus[3 as libc::c_int as
                                                          usize];
                        gSaveContext.buttonStatus[1 as libc::c_int as usize] =
                            gSaveContext.buttonStatus[2 as libc::c_int as
                                                          usize];
                        gSaveContext.buttonStatus[0 as libc::c_int as usize] =
                            gSaveContext.buttonStatus[1 as libc::c_int as
                                                          usize];
                        gSaveContext.unk_13EA = 0 as libc::c_int as u16_0;
                        Interface_ChangeAlpha(50 as libc::c_int as u16_0);
                    }
                }
                4 => {
                    if !((*input).press.button as libc::c_int |
                             !(0x4000 as libc::c_int)) == 0 as libc::c_int ||
                           !((*input).press.button as libc::c_int |
                                 !(0x8000 as libc::c_int)) == 0 as libc::c_int
                           ||
                           !((*input).press.button as libc::c_int |
                                 !(0x1000 as libc::c_int)) == 0 as libc::c_int
                           ||
                           {
                               D_8082B25C -= 1;
                               (D_8082B25C as libc::c_int) == 0 as libc::c_int
                           } {
                        Interface_SetDoAction(globalCtx,
                                              DO_ACTION_NONE as libc::c_int as
                                                  u16_0);
                        gSaveContext.buttonStatus[3 as libc::c_int as usize] =
                            BTN_ENABLED as libc::c_int as u8_0;
                        gSaveContext.buttonStatus[2 as libc::c_int as usize] =
                            gSaveContext.buttonStatus[3 as libc::c_int as
                                                          usize];
                        gSaveContext.buttonStatus[1 as libc::c_int as usize] =
                            gSaveContext.buttonStatus[2 as libc::c_int as
                                                          usize];
                        gSaveContext.buttonStatus[0 as libc::c_int as usize] =
                            gSaveContext.buttonStatus[1 as libc::c_int as
                                                          usize];
                        gSaveContext.unk_13EA = 0 as libc::c_int as u16_0;
                        Interface_ChangeAlpha(50 as libc::c_int as u16_0);
                        (*pauseCtx).unk_1EC = 5 as libc::c_int as u16_0;
                        (*gGameInfo).data[(18 as libc::c_int *
                                               6 as libc::c_int *
                                               16 as libc::c_int +
                                               2 as libc::c_int) as usize] =
                            -(6240 as libc::c_int) as s16;
                        (*gGameInfo).data[(6 as libc::c_int * 6 as libc::c_int
                                               * 16 as libc::c_int +
                                               8 as libc::c_int) as usize] =
                            (*pauseCtx).unk_204 as s16;
                        func_800F64E0(0 as libc::c_int as u8_0);
                    }
                }
                3 | 6 => {
                    (*pauseCtx).unk_204 +=
                        314.0f32 /
                            (*gGameInfo).data[(18 as libc::c_int *
                                                   6 as libc::c_int *
                                                   16 as libc::c_int +
                                                   6 as libc::c_int) as usize]
                                as libc::c_int as libc::c_float;
                    (*gGameInfo).data[(18 as libc::c_int * 6 as libc::c_int *
                                           16 as libc::c_int +
                                           16 as libc::c_int) as usize] =
                        ((*gGameInfo).data[(18 as libc::c_int *
                                                6 as libc::c_int *
                                                16 as libc::c_int +
                                                16 as libc::c_int) as usize]
                             as libc::c_int +
                             (*gGameInfo).data[(18 as libc::c_int *
                                                    6 as libc::c_int *
                                                    16 as libc::c_int +
                                                    25 as libc::c_int) as
                                                   usize] as libc::c_int /
                                 (*gGameInfo).data[(18 as libc::c_int *
                                                        6 as libc::c_int *
                                                        16 as libc::c_int +
                                                        6 as libc::c_int) as
                                                       usize] as libc::c_int)
                            as s16;
                    (*gGameInfo).data[(18 as libc::c_int * 6 as libc::c_int *
                                           16 as libc::c_int +
                                           17 as libc::c_int) as usize] =
                        ((*gGameInfo).data[(18 as libc::c_int *
                                                6 as libc::c_int *
                                                16 as libc::c_int +
                                                17 as libc::c_int) as usize]
                             as libc::c_int +
                             (*gGameInfo).data[(18 as libc::c_int *
                                                    6 as libc::c_int *
                                                    16 as libc::c_int +
                                                    26 as libc::c_int) as
                                                   usize] as libc::c_int /
                                 (*gGameInfo).data[(18 as libc::c_int *
                                                        6 as libc::c_int *
                                                        16 as libc::c_int +
                                                        6 as libc::c_int) as
                                                       usize] as libc::c_int)
                            as s16;
                    if (*pauseCtx).unk_204 >= -314.0f32 {
                        (*pauseCtx).state = 6 as libc::c_int as u16_0;
                        (*pauseCtx).unk_1EC = 0 as libc::c_int as u16_0;
                        (*pauseCtx).unk_200 = 0.0f32;
                        (*pauseCtx).unk_1FC = (*pauseCtx).unk_200;
                        (*pauseCtx).unk_1F8 = (*pauseCtx).unk_1FC;
                        (*pauseCtx).unk_1F4 = (*pauseCtx).unk_1F8;
                        (*pauseCtx).unk_204 = -314.0f32
                    }
                }
                2 | 5 => {
                    if (*pauseCtx).unk_204 !=
                           (*gGameInfo).data[(6 as libc::c_int *
                                                  6 as libc::c_int *
                                                  16 as libc::c_int +
                                                  8 as libc::c_int) as usize]
                               as libc::c_int as libc::c_float + 160.0f32 {
                        (*pauseCtx).unk_200 +=
                            160.0f32 /
                                (*gGameInfo).data[(18 as libc::c_int *
                                                       6 as libc::c_int *
                                                       16 as libc::c_int +
                                                       6 as libc::c_int) as
                                                      usize] as libc::c_int as
                                    libc::c_float;
                        (*pauseCtx).unk_1FC = (*pauseCtx).unk_200;
                        (*pauseCtx).unk_1F8 = (*pauseCtx).unk_1FC;
                        (*pauseCtx).unk_1F4 = (*pauseCtx).unk_1F8;
                        (*pauseCtx).unk_204 +=
                            160.0f32 /
                                (*gGameInfo).data[(18 as libc::c_int *
                                                       6 as libc::c_int *
                                                       16 as libc::c_int +
                                                       6 as libc::c_int) as
                                                      usize] as libc::c_int as
                                    libc::c_float;
                        (*pauseCtx).infoPanelOffsetY =
                            ((*pauseCtx).infoPanelOffsetY as libc::c_int -
                                 40 as libc::c_int /
                                     (*gGameInfo).data[(18 as libc::c_int *
                                                            6 as libc::c_int *
                                                            16 as libc::c_int
                                                            +
                                                            6 as libc::c_int)
                                                           as usize] as
                                         libc::c_int) as s16;
                        (*gGameInfo).data[(18 as libc::c_int *
                                               6 as libc::c_int *
                                               16 as libc::c_int +
                                               16 as libc::c_int) as usize] =
                            ((*gGameInfo).data[(18 as libc::c_int *
                                                    6 as libc::c_int *
                                                    16 as libc::c_int +
                                                    16 as libc::c_int) as
                                                   usize] as libc::c_int -
                                 (*gGameInfo).data[(18 as libc::c_int *
                                                        6 as libc::c_int *
                                                        16 as libc::c_int +
                                                        25 as libc::c_int) as
                                                       usize] as libc::c_int /
                                     (*gGameInfo).data[(18 as libc::c_int *
                                                            6 as libc::c_int *
                                                            16 as libc::c_int
                                                            +
                                                            6 as libc::c_int)
                                                           as usize] as
                                         libc::c_int) as s16;
                        (*gGameInfo).data[(18 as libc::c_int *
                                               6 as libc::c_int *
                                               16 as libc::c_int +
                                               17 as libc::c_int) as usize] =
                            ((*gGameInfo).data[(18 as libc::c_int *
                                                    6 as libc::c_int *
                                                    16 as libc::c_int +
                                                    17 as libc::c_int) as
                                                   usize] as libc::c_int -
                                 (*gGameInfo).data[(18 as libc::c_int *
                                                        6 as libc::c_int *
                                                        16 as libc::c_int +
                                                        26 as libc::c_int) as
                                                       usize] as libc::c_int /
                                     (*gGameInfo).data[(18 as libc::c_int *
                                                            6 as libc::c_int *
                                                            16 as libc::c_int
                                                            +
                                                            6 as libc::c_int)
                                                           as usize] as
                                         libc::c_int) as s16;
                        (*gGameInfo).data[(14 as libc::c_int *
                                               6 as libc::c_int *
                                               16 as libc::c_int +
                                               5 as libc::c_int) as usize] =
                            ((*gGameInfo).data[(14 as libc::c_int *
                                                    6 as libc::c_int *
                                                    16 as libc::c_int +
                                                    5 as libc::c_int) as
                                                   usize] as libc::c_int -
                                 150 as libc::c_int /
                                     (*gGameInfo).data[(18 as libc::c_int *
                                                            6 as libc::c_int *
                                                            16 as libc::c_int
                                                            +
                                                            6 as libc::c_int)
                                                           as usize] as
                                         libc::c_int) as s16;
                        (*pauseCtx).alpha =
                            ((*pauseCtx).alpha as libc::c_int -
                                 (255 as libc::c_int /
                                      (*gGameInfo).data[(18 as libc::c_int *
                                                             6 as libc::c_int
                                                             *
                                                             16 as libc::c_int
                                                             +
                                                             6 as libc::c_int)
                                                            as usize] as
                                          libc::c_int) as u16_0 as
                                     libc::c_int) as u16_0;
                        if (*pauseCtx).unk_204 ==
                               (*gGameInfo).data[(6 as libc::c_int *
                                                      6 as libc::c_int *
                                                      16 as libc::c_int +
                                                      8 as libc::c_int) as
                                                     usize] as libc::c_int as
                                   libc::c_float + 160.0f32 {
                            (*pauseCtx).alpha = 0 as libc::c_int as u16_0
                        }
                    } else {
                        (*pauseCtx).debugState = 0 as libc::c_int as u16_0;
                        (*pauseCtx).state = 0x13 as libc::c_int as u16_0;
                        (*pauseCtx).unk_200 = 160.0f32;
                        (*pauseCtx).unk_1FC = (*pauseCtx).unk_200;
                        (*pauseCtx).unk_1F8 = (*pauseCtx).unk_1FC;
                        (*pauseCtx).unk_1F4 = (*pauseCtx).unk_1F8;
                        (*pauseCtx).namedItem = 999 as libc::c_int as u16_0;
                        (*pauseCtx).unk_1E4 = 0 as libc::c_int as u16_0;
                        (*pauseCtx).unk_204 = -434.0f32
                    }
                }
                _ => { }
            }
        }
        10 => {
            (*pauseCtx).dungeonMapSlot =
                ((*gGameInfo).data[(20 as libc::c_int * 6 as libc::c_int *
                                        16 as libc::c_int + 30 as libc::c_int)
                                       as usize] as libc::c_int +
                     3 as libc::c_int) as s16;
            (*pauseCtx).cursorPoint[PAUSE_MAP as libc::c_int as usize] =
                (*pauseCtx).dungeonMapSlot;
            (*pauseCtx).cursorSlot[PAUSE_MAP as libc::c_int as usize] =
                (*pauseCtx).cursorPoint[PAUSE_MAP as libc::c_int as usize] as
                    u16_0;
            (*gGameInfo).data[(18 as libc::c_int * 6 as libc::c_int *
                                   16 as libc::c_int + 16 as libc::c_int) as
                                  usize] = -(175 as libc::c_int) as s16;
            (*gGameInfo).data[(18 as libc::c_int * 6 as libc::c_int *
                                   16 as libc::c_int + 17 as libc::c_int) as
                                  usize] = 155 as libc::c_int as s16;
            (*pauseCtx).unk_204 = -434.0f32;
            Interface_ChangeAlpha(1 as libc::c_int as u16_0);
            (*pauseCtx).iconItemSegment =
                (((*globalCtx).objectCtx.spaceStart as
                      u32_0).wrapping_add(0x30 as libc::c_int as libc::c_uint)
                     & !(0x3f as libc::c_int) as libc::c_uint) as
                    *mut libc::c_void as *mut u8_0;
            size0 =
                (_icon_item_staticSegmentRomEnd.as_mut_ptr() as
                     u32_0).wrapping_sub(_icon_item_staticSegmentRomStart.as_mut_ptr()
                                             as u32_0);
            osSyncPrintf(b"icon_item size0=%x\n\x00" as *const u8 as
                             *const libc::c_char, size0);
            DmaMgr_SendRequest1((*pauseCtx).iconItemSegment as
                                    *mut libc::c_void,
                                _icon_item_staticSegmentRomStart.as_mut_ptr()
                                    as u32_0, size0,
                                b"../z_kaleido_scope_PAL.c\x00" as *const u8
                                    as *const libc::c_char,
                                4356 as libc::c_int);
            (*pauseCtx).iconItem24Segment =
                (((*pauseCtx).iconItemSegment as
                      u32_0).wrapping_add(size0).wrapping_add(0xf as
                                                                  libc::c_int
                                                                  as
                                                                  libc::c_uint)
                     & !(0xf as libc::c_int) as libc::c_uint) as
                    *mut libc::c_void as *mut u8_0;
            size =
                (_icon_item_24_staticSegmentRomEnd.as_mut_ptr() as
                     u32_0).wrapping_sub(_icon_item_24_staticSegmentRomStart.as_mut_ptr()
                                             as u32_0);
            osSyncPrintf(b"icon_item24 size=%x\n\x00" as *const u8 as
                             *const libc::c_char, size);
            DmaMgr_SendRequest1((*pauseCtx).iconItem24Segment as
                                    *mut libc::c_void,
                                _icon_item_24_staticSegmentRomStart.as_mut_ptr()
                                    as u32_0, size,
                                b"../z_kaleido_scope_PAL.c\x00" as *const u8
                                    as *const libc::c_char,
                                4363 as libc::c_int);
            (*pauseCtx).iconItemAltSegment =
                (((*pauseCtx).iconItem24Segment as
                      u32_0).wrapping_add(size).wrapping_add(0xf as
                                                                 libc::c_int
                                                                 as
                                                                 libc::c_uint)
                     & !(0xf as libc::c_int) as libc::c_uint) as
                    *mut libc::c_void as *mut u8_0;
            size2 =
                (_icon_item_gameover_staticSegmentRomEnd.as_mut_ptr() as
                     u32_0).wrapping_sub(_icon_item_gameover_staticSegmentRomStart.as_mut_ptr()
                                             as u32_0);
            osSyncPrintf(b"icon_item_dungeon gameover-size2=%x\n\x00" as
                             *const u8 as *const libc::c_char, size2);
            DmaMgr_SendRequest1((*pauseCtx).iconItemAltSegment as
                                    *mut libc::c_void,
                                _icon_item_gameover_staticSegmentRomStart.as_mut_ptr()
                                    as u32_0, size2,
                                b"../z_kaleido_scope_PAL.c\x00" as *const u8
                                    as *const libc::c_char,
                                4370 as libc::c_int);
            (*pauseCtx).iconItemLangSegment =
                (((*pauseCtx).iconItemAltSegment as
                      u32_0).wrapping_add(size2).wrapping_add(0xf as
                                                                  libc::c_int
                                                                  as
                                                                  libc::c_uint)
                     & !(0xf as libc::c_int) as libc::c_uint) as
                    *mut libc::c_void as *mut u8_0;
            if gSaveContext.language as libc::c_int ==
                   LANGUAGE_ENG as libc::c_int {
                size =
                    (_icon_item_nes_staticSegmentRomEnd.as_mut_ptr() as
                         u32_0).wrapping_sub(_icon_item_nes_staticSegmentRomStart.as_mut_ptr()
                                                 as u32_0);
                osSyncPrintf(b"icon_item_dungeon dungeon-size=%x\n\x00" as
                                 *const u8 as *const libc::c_char, size);
                DmaMgr_SendRequest1((*pauseCtx).iconItemLangSegment as
                                        *mut libc::c_void,
                                    _icon_item_nes_staticSegmentRomStart.as_mut_ptr()
                                        as u32_0, size,
                                    b"../z_kaleido_scope_PAL.c\x00" as
                                        *const u8 as *const libc::c_char,
                                    4379 as libc::c_int);
            } else if gSaveContext.language as libc::c_int ==
                          LANGUAGE_GER as libc::c_int {
                size =
                    (_icon_item_ger_staticSegmentRomEnd.as_mut_ptr() as
                         u32_0).wrapping_sub(_icon_item_ger_staticSegmentRomStart.as_mut_ptr()
                                                 as u32_0);
                osSyncPrintf(b"icon_item_dungeon dungeon-size=%x\n\x00" as
                                 *const u8 as *const libc::c_char, size);
                DmaMgr_SendRequest1((*pauseCtx).iconItemLangSegment as
                                        *mut libc::c_void,
                                    _icon_item_ger_staticSegmentRomStart.as_mut_ptr()
                                        as u32_0, size,
                                    b"../z_kaleido_scope_PAL.c\x00" as
                                        *const u8 as *const libc::c_char,
                                    4386 as libc::c_int);
            } else {
                size =
                    (_icon_item_fra_staticSegmentRomEnd.as_mut_ptr() as
                         u32_0).wrapping_sub(_icon_item_fra_staticSegmentRomStart.as_mut_ptr()
                                                 as u32_0);
                osSyncPrintf(b"icon_item_dungeon dungeon-size=%x\n\x00" as
                                 *const u8 as *const libc::c_char, size);
                DmaMgr_SendRequest1((*pauseCtx).iconItemLangSegment as
                                        *mut libc::c_void,
                                    _icon_item_fra_staticSegmentRomStart.as_mut_ptr()
                                        as u32_0, size,
                                    b"../z_kaleido_scope_PAL.c\x00" as
                                        *const u8 as *const libc::c_char,
                                    4393 as libc::c_int);
            }
            D_8082AB8C = 255 as libc::c_int as s16;
            D_8082AB90 = 130 as libc::c_int as s16;
            D_8082AB94 = 0 as libc::c_int as s16;
            D_8082AB98 = 0 as libc::c_int as s16;
            D_8082AB9C = 30 as libc::c_int as s16;
            D_8082ABA0 = 0 as libc::c_int as s16;
            D_8082ABA4 = 0 as libc::c_int as s16;
            D_8082B260 = 30 as libc::c_int as s16;
            (*gGameInfo).data[(20 as libc::c_int * 6 as libc::c_int *
                                   16 as libc::c_int + 88 as libc::c_int) as
                                  usize] = 98 as libc::c_int as s16;
            (*pauseCtx).promptChoice = 0 as libc::c_int as s16;
            (*pauseCtx).state = (*pauseCtx).state.wrapping_add(1)
        }
        11 => {
            stepR =
                ((if D_8082AB8C as libc::c_int - 30 as libc::c_int >=
                         0 as libc::c_int {
                      (D_8082AB8C as libc::c_int) - 30 as libc::c_int
                  } else { -(D_8082AB8C as libc::c_int - 30 as libc::c_int) })
                     / D_8082B260 as libc::c_int) as s16;
            stepG =
                ((if D_8082AB90 as libc::c_int >= 0 as libc::c_int {
                      D_8082AB90 as libc::c_int
                  } else { -(D_8082AB90 as libc::c_int) }) /
                     D_8082B260 as libc::c_int) as s16;
            stepB =
                ((if D_8082AB94 as libc::c_int >= 0 as libc::c_int {
                      D_8082AB94 as libc::c_int
                  } else { -(D_8082AB94 as libc::c_int) }) /
                     D_8082B260 as libc::c_int) as s16;
            stepA =
                ((if D_8082AB98 as libc::c_int - 255 as libc::c_int >=
                         0 as libc::c_int {
                      (D_8082AB98 as libc::c_int) - 255 as libc::c_int
                  } else {
                      -(D_8082AB98 as libc::c_int - 255 as libc::c_int)
                  }) / D_8082B260 as libc::c_int) as s16;
            if D_8082AB8C as libc::c_int >= 30 as libc::c_int {
                D_8082AB8C =
                    (D_8082AB8C as libc::c_int - stepR as libc::c_int) as s16
            } else {
                D_8082AB8C =
                    (D_8082AB8C as libc::c_int + stepR as libc::c_int) as s16
            }
            if D_8082AB90 as libc::c_int >= 0 as libc::c_int {
                D_8082AB90 =
                    (D_8082AB90 as libc::c_int - stepG as libc::c_int) as s16
            } else {
                D_8082AB90 =
                    (D_8082AB90 as libc::c_int + stepG as libc::c_int) as s16
            }
            if D_8082AB94 as libc::c_int >= 0 as libc::c_int {
                D_8082AB94 =
                    (D_8082AB94 as libc::c_int - stepB as libc::c_int) as s16
            } else {
                D_8082AB94 =
                    (D_8082AB94 as libc::c_int + stepB as libc::c_int) as s16
            }
            if D_8082AB98 as libc::c_int >= 255 as libc::c_int {
                D_8082AB98 =
                    (D_8082AB98 as libc::c_int - stepA as libc::c_int) as s16
            } else {
                D_8082AB98 =
                    (D_8082AB98 as libc::c_int + stepA as libc::c_int) as s16
            }
            stepR =
                ((if D_8082AB9C as libc::c_int - 255 as libc::c_int >=
                         0 as libc::c_int {
                      (D_8082AB9C as libc::c_int) - 255 as libc::c_int
                  } else {
                      -(D_8082AB9C as libc::c_int - 255 as libc::c_int)
                  }) / D_8082B260 as libc::c_int) as s16;
            stepG =
                ((if D_8082ABA0 as libc::c_int - 130 as libc::c_int >=
                         0 as libc::c_int {
                      (D_8082ABA0 as libc::c_int) - 130 as libc::c_int
                  } else {
                      -(D_8082ABA0 as libc::c_int - 130 as libc::c_int)
                  }) / D_8082B260 as libc::c_int) as s16;
            stepB =
                ((if D_8082ABA4 as libc::c_int >= 0 as libc::c_int {
                      D_8082ABA4 as libc::c_int
                  } else { -(D_8082ABA4 as libc::c_int) }) /
                     D_8082B260 as libc::c_int) as s16;
            if D_8082AB9C as libc::c_int >= 255 as libc::c_int {
                D_8082AB9C =
                    (D_8082AB9C as libc::c_int - stepR as libc::c_int) as s16
            } else {
                D_8082AB9C =
                    (D_8082AB9C as libc::c_int + stepR as libc::c_int) as s16
            }
            if D_8082ABA0 as libc::c_int >= 130 as libc::c_int {
                D_8082ABA0 =
                    (D_8082ABA0 as libc::c_int - stepG as libc::c_int) as s16
            } else {
                D_8082ABA0 =
                    (D_8082ABA0 as libc::c_int + stepG as libc::c_int) as s16
            }
            if D_8082ABA4 as libc::c_int >= 0 as libc::c_int {
                D_8082ABA4 =
                    (D_8082ABA4 as libc::c_int - stepB as libc::c_int) as s16
            } else {
                D_8082ABA4 =
                    (D_8082ABA4 as libc::c_int + stepB as libc::c_int) as s16
            }
            D_8082B260 -= 1;
            if D_8082B260 as libc::c_int == 0 as libc::c_int {
                D_8082AB8C = 30 as libc::c_int as s16;
                D_8082AB90 = 0 as libc::c_int as s16;
                D_8082AB94 = 0 as libc::c_int as s16;
                D_8082AB98 = 255 as libc::c_int as s16;
                D_8082AB9C = 255 as libc::c_int as s16;
                D_8082ABA0 = 130 as libc::c_int as s16;
                D_8082ABA4 = 0 as libc::c_int as s16;
                (*pauseCtx).state = (*pauseCtx).state.wrapping_add(1);
                D_8082B260 = 40 as libc::c_int as s16
            }
        }
        12 => {
            D_8082B260 -= 1;
            if D_8082B260 as libc::c_int == 0 as libc::c_int {
                (*pauseCtx).state = 0xd as libc::c_int as u16_0
            }
        }
        13 => {
            (*pauseCtx).unk_204 -=
                160.0f32 /
                    (*gGameInfo).data[(18 as libc::c_int * 6 as libc::c_int *
                                           16 as libc::c_int +
                                           6 as libc::c_int) as usize] as
                        libc::c_int as libc::c_float;
            (*pauseCtx).unk_200 = (*pauseCtx).unk_204;
            (*pauseCtx).unk_1FC = (*pauseCtx).unk_200;
            (*pauseCtx).unk_1F8 = (*pauseCtx).unk_1FC;
            (*pauseCtx).unk_1F4 = (*pauseCtx).unk_1F8;
            (*pauseCtx).infoPanelOffsetY =
                ((*pauseCtx).infoPanelOffsetY as libc::c_int +
                     40 as libc::c_int /
                         (*gGameInfo).data[(18 as libc::c_int *
                                                6 as libc::c_int *
                                                16 as libc::c_int +
                                                6 as libc::c_int) as usize] as
                             libc::c_int) as s16;
            (*interfaceCtx).startAlpha =
                ((*interfaceCtx).startAlpha as libc::c_int +
                     255 as libc::c_int /
                         (*gGameInfo).data[(18 as libc::c_int *
                                                6 as libc::c_int *
                                                16 as libc::c_int +
                                                6 as libc::c_int) as usize] as
                             libc::c_int) as s16;
            (*gGameInfo).data[(20 as libc::c_int * 6 as libc::c_int *
                                   16 as libc::c_int + 88 as libc::c_int) as
                                  usize] =
                ((*gGameInfo).data[(20 as libc::c_int * 6 as libc::c_int *
                                        16 as libc::c_int + 88 as libc::c_int)
                                       as usize] as libc::c_int -
                     3 as libc::c_int) as s16;
            (*gGameInfo).data[(18 as libc::c_int * 6 as libc::c_int *
                                   16 as libc::c_int + 16 as libc::c_int) as
                                  usize] =
                ((*gGameInfo).data[(18 as libc::c_int * 6 as libc::c_int *
                                        16 as libc::c_int + 16 as libc::c_int)
                                       as usize] as libc::c_int +
                     (*gGameInfo).data[(18 as libc::c_int * 6 as libc::c_int *
                                            16 as libc::c_int +
                                            25 as libc::c_int) as usize] as
                         libc::c_int /
                         (*gGameInfo).data[(18 as libc::c_int *
                                                6 as libc::c_int *
                                                16 as libc::c_int +
                                                6 as libc::c_int) as usize] as
                             libc::c_int) as s16;
            (*gGameInfo).data[(18 as libc::c_int * 6 as libc::c_int *
                                   16 as libc::c_int + 17 as libc::c_int) as
                                  usize] =
                ((*gGameInfo).data[(18 as libc::c_int * 6 as libc::c_int *
                                        16 as libc::c_int + 17 as libc::c_int)
                                       as usize] as libc::c_int +
                     (*gGameInfo).data[(18 as libc::c_int * 6 as libc::c_int *
                                            16 as libc::c_int +
                                            26 as libc::c_int) as usize] as
                         libc::c_int /
                         (*gGameInfo).data[(18 as libc::c_int *
                                                6 as libc::c_int *
                                                16 as libc::c_int +
                                                6 as libc::c_int) as usize] as
                             libc::c_int) as s16;
            (*gGameInfo).data[(14 as libc::c_int * 6 as libc::c_int *
                                   16 as libc::c_int + 5 as libc::c_int) as
                                  usize] =
                ((*gGameInfo).data[(14 as libc::c_int * 6 as libc::c_int *
                                        16 as libc::c_int + 5 as libc::c_int)
                                       as usize] as libc::c_int +
                     150 as libc::c_int /
                         (*gGameInfo).data[(18 as libc::c_int *
                                                6 as libc::c_int *
                                                16 as libc::c_int +
                                                6 as libc::c_int) as usize] as
                             libc::c_int) as s16;
            (*pauseCtx).alpha =
                ((*pauseCtx).alpha as libc::c_int +
                     (255 as libc::c_int /
                          ((*gGameInfo).data[(18 as libc::c_int *
                                                  6 as libc::c_int *
                                                  16 as libc::c_int +
                                                  6 as libc::c_int) as usize]
                               as libc::c_int +
                               (*gGameInfo).data[(18 as libc::c_int *
                                                      6 as libc::c_int *
                                                      16 as libc::c_int +
                                                      4 as libc::c_int) as
                                                     usize] as libc::c_int))
                         as u16_0 as libc::c_int) as u16_0;
            if (*pauseCtx).unk_204 < -628.0f32 {
                (*pauseCtx).unk_204 = -628.0f32;
                (*interfaceCtx).startAlpha = 255 as libc::c_int as s16;
                (*gGameInfo).data[(20 as libc::c_int * 6 as libc::c_int *
                                       16 as libc::c_int + 88 as libc::c_int)
                                      as usize] = 66 as libc::c_int as s16;
                (*gGameInfo).data[(18 as libc::c_int * 6 as libc::c_int *
                                       16 as libc::c_int + 2 as libc::c_int)
                                      as usize] = 0 as libc::c_int as s16;
                (*pauseCtx).alpha = 255 as libc::c_int as u16_0;
                (*pauseCtx).state = 0xe as libc::c_int as u16_0;
                gSaveContext.deaths = gSaveContext.deaths.wrapping_add(1);
                if gSaveContext.deaths as libc::c_int > 999 as libc::c_int {
                    gSaveContext.deaths = 999 as libc::c_int as u16_0
                }
            }
            osSyncPrintf(b"kscope->angle_s = %f\n\x00" as *const u8 as
                             *const libc::c_char,
                         (*pauseCtx).unk_204 as libc::c_double);
        }
        14 => {
            if !((*input).press.button as libc::c_int |
                     !(0x8000 as libc::c_int)) == 0 as libc::c_int {
                if (*pauseCtx).promptChoice as libc::c_int != 0 as libc::c_int
                   {
                    (*pauseCtx).promptChoice = 0 as libc::c_int as s16;
                    Audio_PlaySoundGeneral(0x4808 as libc::c_int as u16_0,
                                           &mut D_801333D4,
                                           4 as libc::c_int as u8_0,
                                           &mut D_801333E0, &mut D_801333E0,
                                           &mut D_801333E8);
                    (*pauseCtx).state = 0x10 as libc::c_int as u16_0;
                    (*gameOverCtx).state =
                        (*gameOverCtx).state.wrapping_add(1)
                } else {
                    Audio_PlaySoundGeneral(0x4823 as libc::c_int as u16_0,
                                           &mut D_801333D4,
                                           4 as libc::c_int as u8_0,
                                           &mut D_801333E0, &mut D_801333E0,
                                           &mut D_801333E8);
                    (*pauseCtx).promptChoice = 0 as libc::c_int as s16;
                    Gameplay_SaveSceneFlags(globalCtx);
                    gSaveContext.savedSceneNum = (*globalCtx).sceneNum;
                    Sram_WriteSave(&mut (*globalCtx).sramCtx);
                    (*pauseCtx).state = 0xf as libc::c_int as u16_0;
                    D_8082B25C = 3 as libc::c_int as s16
                }
            }
        }
        15 => {
            D_8082B25C -= 1;
            if D_8082B25C as libc::c_int == 0 as libc::c_int {
                (*pauseCtx).state = 0x10 as libc::c_int as u16_0;
                (*gameOverCtx).state = (*gameOverCtx).state.wrapping_add(1)
            } else if D_8082B25C as libc::c_int <= 80 as libc::c_int &&
                          (!((*input).press.button as libc::c_int |
                                 !(0x8000 as libc::c_int)) == 0 as libc::c_int
                               ||
                               !((*input).press.button as libc::c_int |
                                     !(0x1000 as libc::c_int)) ==
                                   0 as libc::c_int) {
                (*pauseCtx).state = 0x10 as libc::c_int as u16_0;
                (*gameOverCtx).state = (*gameOverCtx).state.wrapping_add(1);
                func_800F64E0(0 as libc::c_int as u8_0);
            }
        }
        16 => {
            if !((*input).press.button as libc::c_int |
                     !(0x8000 as libc::c_int)) == 0 as libc::c_int ||
                   !((*input).press.button as libc::c_int |
                         !(0x1000 as libc::c_int)) == 0 as libc::c_int {
                if (*pauseCtx).promptChoice as libc::c_int == 0 as libc::c_int
                   {
                    Audio_PlaySoundGeneral(0x4823 as libc::c_int as u16_0,
                                           &mut D_801333D4,
                                           4 as libc::c_int as u8_0,
                                           &mut D_801333E0, &mut D_801333E0,
                                           &mut D_801333E8);
                    Gameplay_SaveSceneFlags(globalCtx);
                    match gSaveContext.entranceIndex {
                        1039 => {
                            gSaveContext.entranceIndex = 0 as libc::c_int
                        }
                        1035 => {
                            gSaveContext.entranceIndex = 0x4 as libc::c_int
                        }
                        769 => {
                            gSaveContext.entranceIndex = 0x28 as libc::c_int
                        }
                        12 => {
                            gSaveContext.entranceIndex = 0x169 as libc::c_int
                        }
                        773 => {
                            gSaveContext.entranceIndex = 0x165 as libc::c_int
                        }
                        1047 => {
                            gSaveContext.entranceIndex = 0x10 as libc::c_int
                        }
                        141 => {
                            gSaveContext.entranceIndex = 0x82 as libc::c_int
                        }
                        1043 => {
                            gSaveContext.entranceIndex = 0x37 as libc::c_int
                        }
                        1055 => {
                            gSaveContext.entranceIndex = 0x41b as libc::c_int
                        }
                        0 | 4 | 40 | 361 | 357 | 16 | 130 | 55 | 1051 | 8 |
                        136 | 1158 | 152 | 1127 | 377 | _ => {
                        }
                    }
                } else {
                    Audio_PlaySoundGeneral(0x4808 as libc::c_int as u16_0,
                                           &mut D_801333D4,
                                           4 as libc::c_int as u8_0,
                                           &mut D_801333E0, &mut D_801333E0,
                                           &mut D_801333E8);
                }
                (*pauseCtx).state = 0x11 as libc::c_int as u16_0
            }
        }
        17 => {
            if (*interfaceCtx).unk_244 as libc::c_int != 255 as libc::c_int {
                (*interfaceCtx).unk_244 =
                    ((*interfaceCtx).unk_244 as libc::c_int +
                         10 as libc::c_int) as u16_0;
                if (*interfaceCtx).unk_244 as libc::c_int >=
                       255 as libc::c_int {
                    (*interfaceCtx).unk_244 = 255 as libc::c_int as u16_0;
                    (*pauseCtx).state = 0 as libc::c_int as u16_0;
                    (*gGameInfo).data[(1 as libc::c_int * 6 as libc::c_int *
                                           16 as libc::c_int +
                                           30 as libc::c_int) as usize] =
                        3 as libc::c_int as s16;
                    (*gGameInfo).data[(1 as libc::c_int * 6 as libc::c_int *
                                           16 as libc::c_int +
                                           94 as libc::c_int) as usize] =
                        0 as libc::c_int as s16;
                    func_800981B8(&mut (*globalCtx).objectCtx);
                    func_800418D0(&mut (*globalCtx).colCtx, globalCtx);
                    if (*pauseCtx).promptChoice as libc::c_int ==
                           0 as libc::c_int {
                        Gameplay_TriggerRespawn(globalCtx);
                        gSaveContext.respawnFlag = -(2 as libc::c_int);
                        gSaveContext.nextTransition =
                            2 as libc::c_int as u8_0;
                        gSaveContext.health = 0x30 as libc::c_int as s16;
                        Audio_QueueSeqCmd(((0xf as libc::c_int) <<
                                               28 as libc::c_int |
                                               (SEQ_PLAYER_BGM_MAIN as
                                                    libc::c_int) <<
                                                   24 as libc::c_int |
                                               0xa as libc::c_int) as u32_0);
                        gSaveContext.healthAccumulator =
                            0 as libc::c_int as s16;
                        gSaveContext.unk_13F0 = 0 as libc::c_int as s16;
                        gSaveContext.unk_13F2 = 0 as libc::c_int as s16;
                        osSyncPrintf(b"\x1b[33m\x00" as *const u8 as
                                         *const libc::c_char);
                        osSyncPrintf(b"MAGIC_NOW=%d \x00" as *const u8 as
                                         *const libc::c_char,
                                     gSaveContext.magic as libc::c_int);
                        osSyncPrintf(b"Z_MAGIC_NOW_NOW=%d   \xe2\x86\x92  \x00"
                                         as *const u8 as *const libc::c_char,
                                     gSaveContext.unk_13F6 as libc::c_int);
                        gSaveContext.unk_13F4 = 0 as libc::c_int as s16;
                        gSaveContext.unk_13F6 = gSaveContext.magic as s16;
                        gSaveContext.magic = 0 as libc::c_int as s8;
                        gSaveContext.magicLevel = gSaveContext.magic;
                        osSyncPrintf(b"MAGIC_NOW=%d \x00" as *const u8 as
                                         *const libc::c_char,
                                     gSaveContext.magic as libc::c_int);
                        osSyncPrintf(b"Z_MAGIC_NOW_NOW=%d\n\x00" as *const u8
                                         as *const libc::c_char,
                                     gSaveContext.unk_13F6 as libc::c_int);
                        osSyncPrintf(b"\x1b[m\x00" as *const u8 as
                                         *const libc::c_char);
                    } else {
                        (*globalCtx).state.running =
                            0 as libc::c_int as u32_0;
                        (*globalCtx).state.init =
                            Some(Opening_Init as
                                     unsafe extern "C" fn(_: *mut GameState)
                                         -> ());
                        (*globalCtx).state.size =
                            ::std::mem::size_of::<OpeningContext>() as
                                libc::c_ulong
                    }
                }
            }
        }
        18 => {
            if (*pauseCtx).unk_1F4 != 160.0f32 {
                (*pauseCtx).unk_200 +=
                    160.0f32 /
                        (*gGameInfo).data[(18 as libc::c_int *
                                               6 as libc::c_int *
                                               16 as libc::c_int +
                                               6 as libc::c_int) as usize] as
                            libc::c_int as libc::c_float;
                (*pauseCtx).unk_1FC = (*pauseCtx).unk_200;
                (*pauseCtx).unk_1F8 = (*pauseCtx).unk_1FC;
                (*pauseCtx).unk_1F4 = (*pauseCtx).unk_1F8;
                (*pauseCtx).infoPanelOffsetY =
                    ((*pauseCtx).infoPanelOffsetY as libc::c_int -
                         40 as libc::c_int /
                             (*gGameInfo).data[(18 as libc::c_int *
                                                    6 as libc::c_int *
                                                    16 as libc::c_int +
                                                    6 as libc::c_int) as
                                                   usize] as libc::c_int) as
                        s16;
                (*interfaceCtx).startAlpha =
                    ((*interfaceCtx).startAlpha as libc::c_int -
                         255 as libc::c_int /
                             (*gGameInfo).data[(18 as libc::c_int *
                                                    6 as libc::c_int *
                                                    16 as libc::c_int +
                                                    6 as libc::c_int) as
                                                   usize] as libc::c_int) as
                        s16;
                (*gGameInfo).data[(18 as libc::c_int * 6 as libc::c_int *
                                       16 as libc::c_int + 16 as libc::c_int)
                                      as usize] =
                    ((*gGameInfo).data[(18 as libc::c_int * 6 as libc::c_int *
                                            16 as libc::c_int +
                                            16 as libc::c_int) as usize] as
                         libc::c_int -
                         (*gGameInfo).data[(18 as libc::c_int *
                                                6 as libc::c_int *
                                                16 as libc::c_int +
                                                25 as libc::c_int) as usize]
                             as libc::c_int /
                             (*gGameInfo).data[(18 as libc::c_int *
                                                    6 as libc::c_int *
                                                    16 as libc::c_int +
                                                    6 as libc::c_int) as
                                                   usize] as libc::c_int) as
                        s16;
                (*gGameInfo).data[(18 as libc::c_int * 6 as libc::c_int *
                                       16 as libc::c_int + 17 as libc::c_int)
                                      as usize] =
                    ((*gGameInfo).data[(18 as libc::c_int * 6 as libc::c_int *
                                            16 as libc::c_int +
                                            17 as libc::c_int) as usize] as
                         libc::c_int -
                         (*gGameInfo).data[(18 as libc::c_int *
                                                6 as libc::c_int *
                                                16 as libc::c_int +
                                                26 as libc::c_int) as usize]
                             as libc::c_int /
                             (*gGameInfo).data[(18 as libc::c_int *
                                                    6 as libc::c_int *
                                                    16 as libc::c_int +
                                                    6 as libc::c_int) as
                                                   usize] as libc::c_int) as
                        s16;
                (*gGameInfo).data[(14 as libc::c_int * 6 as libc::c_int *
                                       16 as libc::c_int + 5 as libc::c_int)
                                      as usize] =
                    ((*gGameInfo).data[(14 as libc::c_int * 6 as libc::c_int *
                                            16 as libc::c_int +
                                            5 as libc::c_int) as usize] as
                         libc::c_int -
                         150 as libc::c_int /
                             (*gGameInfo).data[(18 as libc::c_int *
                                                    6 as libc::c_int *
                                                    16 as libc::c_int +
                                                    6 as libc::c_int) as
                                                   usize] as libc::c_int) as
                        s16;
                (*pauseCtx).alpha =
                    ((*pauseCtx).alpha as libc::c_int -
                         (255 as libc::c_int /
                              (*gGameInfo).data[(18 as libc::c_int *
                                                     6 as libc::c_int *
                                                     16 as libc::c_int +
                                                     6 as libc::c_int) as
                                                    usize] as libc::c_int) as
                             u16_0 as libc::c_int) as u16_0;
                if (*pauseCtx).unk_1F4 == 160.0f32 {
                    (*pauseCtx).alpha = 0 as libc::c_int as u16_0
                }
            } else {
                (*pauseCtx).debugState = 0 as libc::c_int as u16_0;
                (*pauseCtx).state = 0x13 as libc::c_int as u16_0;
                (*pauseCtx).unk_200 = 160.0f32;
                (*pauseCtx).unk_1FC = 160.0f32;
                (*pauseCtx).unk_1F8 = 160.0f32;
                (*pauseCtx).unk_1F4 = 160.0f32;
                (*pauseCtx).namedItem = 999 as libc::c_int as u16_0;
                (*globalCtx).interfaceCtx.startAlpha = 0 as libc::c_int as s16
            }
        }
        19 => {
            (*pauseCtx).state = 0 as libc::c_int as u16_0;
            (*gGameInfo).data[(1 as libc::c_int * 6 as libc::c_int *
                                   16 as libc::c_int + 30 as libc::c_int) as
                                  usize] = 3 as libc::c_int as s16;
            (*gGameInfo).data[(1 as libc::c_int * 6 as libc::c_int *
                                   16 as libc::c_int + 94 as libc::c_int) as
                                  usize] = 0 as libc::c_int as s16;
            func_800981B8(&mut (*globalCtx).objectCtx);
            func_800418D0(&mut (*globalCtx).colCtx, globalCtx);
            match (*globalCtx).sceneNum as libc::c_int {
                0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 17 | 18 | 19 | 20 | 21
                | 22 | 23 | 24 => {
                    Map_InitData(globalCtx,
                                 (*globalCtx).interfaceCtx.mapRoomNum);
                }
                _ => { }
            }
            gSaveContext.buttonStatus[0 as libc::c_int as usize] =
                D_808321A8[0 as libc::c_int as usize];
            gSaveContext.buttonStatus[1 as libc::c_int as usize] =
                D_808321A8[1 as libc::c_int as usize];
            gSaveContext.buttonStatus[2 as libc::c_int as usize] =
                D_808321A8[2 as libc::c_int as usize];
            gSaveContext.buttonStatus[3 as libc::c_int as usize] =
                D_808321A8[3 as libc::c_int as usize];
            gSaveContext.buttonStatus[4 as libc::c_int as usize] =
                D_808321A8[4 as libc::c_int as usize];
            (*interfaceCtx).unk_1FC = 0 as libc::c_int as s16;
            (*interfaceCtx).unk_1FA = (*interfaceCtx).unk_1FC;
            osSyncPrintf(b"\x1b[33m\x00" as *const u8 as *const libc::c_char);
            osSyncPrintf(b"i=%d  LAST_TIME_TYPE=%d\n\x00" as *const u8 as
                             *const libc::c_char, i as libc::c_int,
                         gSaveContext.unk_13EE as libc::c_int);
            gSaveContext.unk_13EA = 0 as libc::c_int as u16_0;
            Interface_ChangeAlpha(gSaveContext.unk_13EE);
            (*player).targetActor = 0 as *mut Actor;
            Player_SetEquipmentData(globalCtx, player);
            osSyncPrintf(b"\x1b[m\x00" as *const u8 as *const libc::c_char);
        }
        _ => { }
    };
}
