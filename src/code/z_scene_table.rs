#![allow(dead_code, mutable_transmutes, non_camel_case_types, non_snake_case,
         non_upper_case_globals, unused_assignments, unused_mut)]
#![register_tool(c2rust)]
#![feature(const_raw_ptr_to_usize_cast, register_tool)]
extern "C" {
    #[no_mangle]
    fn Flags_GetSwitch(globalCtx: *mut GlobalContext, flag: s32) -> s32;
    #[no_mangle]
    fn func_8002F7DC(actor: *mut Actor, sfxId: u16_0);
    #[no_mangle]
    fn Math_CosS(angle: s16) -> f32_0;
    #[no_mangle]
    fn Math_SinS(angle: s16) -> f32_0;
    #[no_mangle]
    fn Math_StepToS(pValue: *mut s16, target: s16, step: s16) -> s32;
    #[no_mangle]
    fn Quake_SetSpeed(idx: s16, value: s16) -> u32_0;
    #[no_mangle]
    fn Quake_SetCountdown(idx: s16, value: s16) -> u32_0;
    #[no_mangle]
    fn Quake_SetQuakeValues(idx: s16, y: s16, x: s16, zoom: s16, rotZ: s16)
     -> u32_0;
    #[no_mangle]
    fn Quake_Add(cam: *mut Camera, callbackIdx: u32_0) -> s16;
    #[no_mangle]
    fn Gfx_TexScroll(gfxCtx: *mut GraphicsContext, x: u32_0, y: u32_0,
                     width: s32, height: s32) -> *mut Gfx;
    #[no_mangle]
    fn Gfx_TwoTexScroll(gfxCtx: *mut GraphicsContext, tile1: s32, x1: u32_0,
                        y1: u32_0, width1: s32, height1: s32, tile2: s32,
                        x2: u32_0, y2: u32_0, width2: s32, height2: s32)
     -> *mut Gfx;
    #[no_mangle]
    fn Gfx_TwoTexScrollEnvColor(gfxCtx: *mut GraphicsContext, tile1: s32,
                                x1: u32_0, y1: u32_0, width1: s32,
                                height1: s32, tile2: s32, x2: u32_0,
                                y2: u32_0, width2: s32, height2: s32, r: s32,
                                g: s32, b: s32, a: s32) -> *mut Gfx;
    #[no_mangle]
    fn func_800AA76C(view: *mut View, arg1: f32_0, arg2: f32_0, arg3: f32_0);
    #[no_mangle]
    fn func_800AA78C(view: *mut View, arg1: f32_0, arg2: f32_0, arg3: f32_0);
    #[no_mangle]
    fn func_800AA7AC(view: *mut View, arg1: f32_0) -> s32;
    #[no_mangle]
    fn FrameAdvance_IsEnabled(globalCtx: *mut GlobalContext) -> s32;
    #[no_mangle]
    fn Graph_Alloc(gfxCtx: *mut GraphicsContext, size: size_t)
     -> *mut libc::c_void;
    #[no_mangle]
    fn Graph_OpenDisps(dispRefs: *mut *mut Gfx, gfxCtx: *mut GraphicsContext,
                       file: *const libc::c_char, line: s32);
    #[no_mangle]
    fn Graph_CloseDisps(dispRefs: *mut *mut Gfx, gfxCtx: *mut GraphicsContext,
                        file: *const libc::c_char, line: s32);
    #[no_mangle]
    fn Matrix_Scale(x: f32_0, y: f32_0, z: f32_0, mode: u8_0);
    #[no_mangle]
    fn Matrix_NewMtx(gfxCtx: *mut GraphicsContext, file: *mut libc::c_char,
                     line: s32) -> *mut Mtx;
    #[no_mangle]
    static mut gSaveContext: SaveContext;
    #[no_mangle]
    fn Rand_ZeroOne() -> f32_0;
    #[no_mangle]
    static mut gSegments: [u32_0; 16];
    #[no_mangle]
    fn coss(_: u16_0) -> s16;
    #[no_mangle]
    static mut gLensFlareScreenFillAlpha: s16;
    #[no_mangle]
    static mut gLensFlareColorIntensity: f32_0;
    #[no_mangle]
    static mut gLensFlareScale: s16;
    #[no_mangle]
    static mut gCustomLensFlarePos: Vec3f;
    #[no_mangle]
    static mut gCustomLensFlareOn: u8_0;
    #[no_mangle]
    fn sinf(_: f32_0) -> f32_0;
    #[no_mangle]
    static mut gItemSlots: [u8_0; 56];
    #[no_mangle]
    static mut gEmptyDL: [Gfx; 0];
    #[no_mangle]
    static mut gGameInfo: *mut GameInfo;
    #[no_mangle]
    static mut _g_pn_01SegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_01SegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_02SegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_02SegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_03SegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_03SegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_04SegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_04SegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_05SegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_05SegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_06SegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_06SegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_07SegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_07SegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_08SegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_08SegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_09SegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_09SegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_10SegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_10SegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_11SegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_11SegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_12SegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_12SegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_13SegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_13SegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_14SegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_14SegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_15SegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_15SegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_16SegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_16SegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_17SegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_17SegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_18SegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_18SegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_19SegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_19SegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_20SegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_20SegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_21SegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_21SegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_22SegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_22SegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_23SegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_23SegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_24SegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_24SegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_25SegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_25SegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_26SegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_26SegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_27SegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_27SegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_28SegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_28SegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_29SegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_29SegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_30SegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_30SegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_31SegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_31SegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_32SegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_32SegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_33SegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_33SegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_34SegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_34SegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_35SegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_35SegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_36SegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_36SegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_37SegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_37SegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_38SegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_38SegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_39SegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_39SegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_40SegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_40SegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_41SegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_41SegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_42SegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_42SegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_43SegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_43SegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_44SegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_44SegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_45SegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_45SegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_46SegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_46SegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_47SegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_47SegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_48SegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_48SegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_49SegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_49SegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_50SegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_50SegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_51SegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_51SegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_52SegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_52SegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_53SegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_53SegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_54SegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_54SegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_55SegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_55SegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_56SegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_56SegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_57SegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _g_pn_57SegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _ydan_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _ydan_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _kokiri_home3_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _HIDAN_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _HIDAN_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _MIZUsin_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _MIZUsin_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _jyasinzou_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _jyasinzou_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _HAKAdan_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _HAKAdan_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _HAKAdanCH_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _HAKAdanCH_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _ice_doukutu_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _ice_doukutu_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _ganon_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _ganon_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _men_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _men_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _gerudoway_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _gerudoway_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _ganontika_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _ganontika_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _ganon_sonogo_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _ganon_sonogo_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _ganontikasonogo_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _ganontikasonogo_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _takaraya_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _takaraya_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _ydan_boss_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _ydan_boss_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _ddan_boss_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _ddan_boss_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _bdan_boss_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _bdan_boss_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _moribossroom_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _moribossroom_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _FIRE_bs_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _FIRE_bs_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _MIZUsin_bs_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _MIZUsin_bs_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _jyasinboss_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _jyasinboss_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _HAKAdan_bs_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _HAKAdan_bs_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _ganon_boss_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _ganon_boss_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _ganon_final_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _ganon_final_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _entra_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _entra_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _entra_n_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _entra_n_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _enrui_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _enrui_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _market_alley_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _market_alley_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _market_alley_n_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _market_alley_n_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _market_day_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _market_day_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _market_night_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _market_night_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _market_ruins_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _market_ruins_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _shrine_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _shrine_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _shrine_n_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _shrine_n_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _shrine_r_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _shrine_r_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _kokiri_home_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _kokiri_home_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _kokiri_home3_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _ddan_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _ddan_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _bdan_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _bdan_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _Bmori1_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _Bmori1_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _hakaana_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _hakaana_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _hakaana2_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _hakaana2_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _hakaana_ouke_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _hakaana_ouke_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _syatekijyou_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _syatekijyou_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _tokinoma_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _tokinoma_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _kenjyanoma_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _kenjyanoma_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _hairal_niwa_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _hairal_niwa_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _hairal_niwa_n_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _hairal_niwa_n_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _hiral_demo_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _hiral_demo_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _hakasitarelay_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _hakasitarelay_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _turibori_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _turibori_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _nakaniwa_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _nakaniwa_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _bowling_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _bowling_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _souko_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _souko_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _miharigoya_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _miharigoya_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _mahouya_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _mahouya_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _kokiri_home4_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _kokiri_home4_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _kokiri_home5_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _kokiri_home5_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _kakariko_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _kakariko_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _kakariko3_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _kakariko3_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _shop1_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _shop1_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _kokiri_shop_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _kokiri_shop_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _golon_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _golon_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _zoora_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _zoora_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _drag_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _drag_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _alley_shop_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _alley_shop_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _night_shop_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _night_shop_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _face_shop_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _face_shop_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _link_home_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _link_home_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _impa_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _impa_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _malon_stable_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _malon_stable_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _labo_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _labo_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _hylia_labo_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _hylia_labo_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _tent_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _tent_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _hut_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _hut_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _daiyousei_izumi_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _daiyousei_izumi_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _yousei_izumi_tate_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _yousei_izumi_tate_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _yousei_izumi_yoko_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _yousei_izumi_yoko_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _kakusiana_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _kakusiana_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _spot16_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _spot16_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _spot17_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _spot17_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _spot18_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _spot18_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _spot20_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _spot20_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _ganon_tou_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _ganon_tou_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _test01_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _test01_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _besitu_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _besitu_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _depth_test_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _depth_test_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _syotes_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _syotes_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _syotes2_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _syotes2_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _sutaru_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _sutaru_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _hairal_niwa2_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _hairal_niwa2_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _ganon_demo_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _ganon_demo_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _kinsuta_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _kinsuta_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _spot00_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _spot00_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _spot15_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _spot15_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _spot13_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _spot13_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _spot12_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _spot12_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _spot11_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _spot11_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _spot10_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _spot10_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _spot09_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _spot09_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _spot08_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _spot08_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _spot07_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _spot07_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _spot06_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _spot06_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _spot05_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _spot05_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _spot04_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _spot04_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _spot03_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _spot03_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _spot02_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _spot02_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _spot01_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _spot01_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _sasatest_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _sasatest_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut _testroom_sceneSegmentRomStart: [u8_0; 0];
    #[no_mangle]
    static mut _testroom_sceneSegmentRomEnd: [u8_0; 0];
    #[no_mangle]
    static mut spot00_room_0DL_012B20: [Gfx; 0];
    #[no_mangle]
    static mut gKakarikoVillageDayWindowTex: [u64_0; 0];
    #[no_mangle]
    static mut gKakarikoVillageNightWindowTex: [u64_0; 0];
    #[no_mangle]
    static mut gZorasDomainDayEntranceTex: [u64_0; 0];
    #[no_mangle]
    static mut gZorasDomainNightEntranceTex: [u64_0; 0];
    #[no_mangle]
    static mut gSpot12_009678Tex: [u64_0; 0];
    #[no_mangle]
    static mut gSpot12_00DE78Tex: [u64_0; 0];
    #[no_mangle]
    static mut spot16_room_0DL_00AA48: [Gfx; 0];
    #[no_mangle]
    static mut gGoronCityNightEntranceTex: [u64_0; 0];
    #[no_mangle]
    static mut gGoronCityDayEntranceTex: [u64_0; 0];
    #[no_mangle]
    static mut gLonLonRanchDayWindowTex: [u64_0; 0];
    #[no_mangle]
    static mut gLonLonRangeNightWindowsTex: [u64_0; 0];
    #[no_mangle]
    static mut gLonLonHouseNightEntranceTex: [u64_0; 0];
    #[no_mangle]
    static mut gLonLonHouseDayEntranceTex: [u64_0; 0];
    #[no_mangle]
    static mut gGTGDayEntranceTex: [u64_0; 0];
    #[no_mangle]
    static mut gGTGNightEntranceTex: [u64_0; 0];
    #[no_mangle]
    static mut gDCLavaFloor1Tex: [u64_0; 0];
    #[no_mangle]
    static mut gDCDayEntranceTex: [u64_0; 0];
    #[no_mangle]
    static mut gDCLavaFloor8Tex: [u64_0; 0];
    #[no_mangle]
    static mut gDCLavaFloor7Tex: [u64_0; 0];
    #[no_mangle]
    static mut gDCNightEntranceTex: [u64_0; 0];
    #[no_mangle]
    static mut gDCLavaFloor6Tex: [u64_0; 0];
    #[no_mangle]
    static mut gDCLavaFloor4Tex: [u64_0; 0];
    #[no_mangle]
    static mut gDCLavaFloor3Tex: [u64_0; 0];
    #[no_mangle]
    static mut gDCLavaFloor2Tex: [u64_0; 0];
    #[no_mangle]
    static mut gDCLavaFloor5Tex: [u64_0; 0];
    #[no_mangle]
    static mut gYdanTex_00BA18: [u64_0; 0];
    #[no_mangle]
    static mut gYdanTex_00CA18: [u64_0; 0];
    #[no_mangle]
    static mut gForestTempleNightEntranceTex: [u64_0; 0];
    #[no_mangle]
    static mut gForestTempleDayEntranceTex: [u64_0; 0];
    #[no_mangle]
    static mut gWaterTempleDayEntranceTex: [u64_0; 0];
    #[no_mangle]
    static mut gWaterTempleNightEntranceTex: [u64_0; 0];
    #[no_mangle]
    static mut gThievesHideoutNightEntranceTex: [u64_0; 0];
    #[no_mangle]
    static mut gThievesHideoutDayEntranceTex: [u64_0; 0];
    #[no_mangle]
    static mut gSpiritTempleNightEntranceTex: [u64_0; 0];
    #[no_mangle]
    static mut gSpiritTempleDayEntranceTex: [u64_0; 0];
    #[no_mangle]
    static mut gGuardHouseOutSideView2NightTex: [u64_0; 0];
    #[no_mangle]
    static mut gGuardHouseOutSideView2DayTex: [u64_0; 0];
    #[no_mangle]
    static mut gGuardHouseOutSideView1NightTex: [u64_0; 0];
    #[no_mangle]
    static mut gGuardHouseOutSideView1DayTex: [u64_0; 0];
    #[no_mangle]
    static mut gIceCavernNightEntranceTex: [u64_0; 0];
    #[no_mangle]
    static mut gIceCavernDayEntranceTex: [u64_0; 0];
}
pub type s8 = libc::c_schar;
pub type u8_0 = libc::c_uchar;
pub type s16 = libc::c_short;
pub type u16_0 = libc::c_ushort;
pub type s32 = libc::c_int;
pub type u32_0 = libc::c_uint;
pub type u64_0 = libc::c_ulonglong;
pub type f32_0 = libc::c_float;
pub type Mtx_t = [[libc::c_long; 4]; 4];
#[derive(Copy, Clone)]
#[repr(C)]
pub union Mtx {
    pub m: Mtx_t,
    pub c2rust_unnamed: C2RustUnnamed,
    pub forc_structure_alignment: libc::c_longlong,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct C2RustUnnamed {
    pub intPart: [[u16_0; 4]; 4],
    pub fracPart: [[u16_0; 4]; 4],
}
pub type MtxF_t = [[libc::c_float; 4]; 4];
#[derive(Copy, Clone)]
#[repr(C)]
pub union MtxF {
    pub mf: MtxF_t,
    pub c2rust_unnamed: C2RustUnnamed_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct C2RustUnnamed_0 {
    pub xx: libc::c_float,
    pub yx: libc::c_float,
    pub zx: libc::c_float,
    pub wx: libc::c_float,
    pub xy: libc::c_float,
    pub yy: libc::c_float,
    pub zy: libc::c_float,
    pub wy: libc::c_float,
    pub xz: libc::c_float,
    pub yz: libc::c_float,
    pub zz: libc::c_float,
    pub wz: libc::c_float,
    pub xw: libc::c_float,
    pub yw: libc::c_float,
    pub zw: libc::c_float,
    pub ww: libc::c_float,
}
pub type size_t = libc::c_ulong;
pub type OSPri = s32;
pub type OSId = s32;
#[derive(Copy, Clone)]
#[repr(C)]
pub union __OSfp {
    pub f: C2RustUnnamed_1,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct C2RustUnnamed_1 {
    pub f_odd: f32_0,
    pub f_even: f32_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct __OSThreadContext {
    pub at: u64_0,
    pub v0: u64_0,
    pub v1: u64_0,
    pub a0: u64_0,
    pub a1: u64_0,
    pub a2: u64_0,
    pub a3: u64_0,
    pub t0: u64_0,
    pub t1: u64_0,
    pub t2: u64_0,
    pub t3: u64_0,
    pub t4: u64_0,
    pub t5: u64_0,
    pub t6: u64_0,
    pub t7: u64_0,
    pub s0: u64_0,
    pub s1: u64_0,
    pub s2: u64_0,
    pub s3: u64_0,
    pub s4: u64_0,
    pub s5: u64_0,
    pub s6: u64_0,
    pub s7: u64_0,
    pub t8: u64_0,
    pub t9: u64_0,
    pub gp: u64_0,
    pub sp: u64_0,
    pub s8: u64_0,
    pub ra: u64_0,
    pub lo: u64_0,
    pub hi: u64_0,
    pub sr: u32_0,
    pub pc: u32_0,
    pub cause: u32_0,
    pub badvaddr: u32_0,
    pub rcp: u32_0,
    pub fpcsr: u32_0,
    pub fp0: __OSfp,
    pub fp2: __OSfp,
    pub fp4: __OSfp,
    pub fp6: __OSfp,
    pub fp8: __OSfp,
    pub fp10: __OSfp,
    pub fp12: __OSfp,
    pub fp14: __OSfp,
    pub fp16: __OSfp,
    pub fp18: __OSfp,
    pub fp20: __OSfp,
    pub fp22: __OSfp,
    pub fp24: __OSfp,
    pub fp26: __OSfp,
    pub fp28: __OSfp,
    pub fp30: __OSfp,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct __OSThreadprofile {
    pub flag: u32_0,
    pub count: u32_0,
    pub time: u64_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct OSThread {
    pub next: *mut OSThread,
    pub priority: OSPri,
    pub queue: *mut *mut OSThread,
    pub tlnext: *mut OSThread,
    pub state: u16_0,
    pub flags: u16_0,
    pub id: OSId,
    pub fp: s32,
    pub thprof: *mut __OSThreadprofile,
    pub context: __OSThreadContext,
}
pub type OSMesg = *mut libc::c_void;
#[derive(Copy, Clone)]
#[repr(C)]
pub struct OSMesgQueue {
    pub mtqueue: *mut OSThread,
    pub fullqueue: *mut OSThread,
    pub validCount: s32,
    pub first: s32,
    pub msgCount: s32,
    pub msg: *mut OSMesg,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct OSTask_t {
    pub type_0: u32_0,
    pub flags: u32_0,
    pub ucode_boot: *mut u64_0,
    pub ucode_boot_size: u32_0,
    pub ucode: *mut u64_0,
    pub ucode_size: u32_0,
    pub ucode_data: *mut u64_0,
    pub ucode_data_size: u32_0,
    pub dram_stack: *mut u64_0,
    pub dram_stack_size: u32_0,
    pub output_buff: *mut u64_0,
    pub output_buff_size: *mut u64_0,
    pub data_ptr: *mut u64_0,
    pub data_size: u32_0,
    pub yield_data_ptr: *mut u64_0,
    pub yield_data_size: u32_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub union OSTask {
    pub t: OSTask_t,
    pub force_structure_alignment: libc::c_longlong,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct OSViCommonRegs {
    pub ctrl: u32_0,
    pub width: u32_0,
    pub burst: u32_0,
    pub vSync: u32_0,
    pub hSync: u32_0,
    pub leap: u32_0,
    pub hStart: u32_0,
    pub xScale: u32_0,
    pub vCurrent: u32_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct OSViFieldRegs {
    pub origin: u32_0,
    pub yScale: u32_0,
    pub vStart: u32_0,
    pub vBurst: u32_0,
    pub vIntr: u32_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct OSViMode {
    pub type_0: u8_0,
    pub comRegs: OSViCommonRegs,
    pub fldRegs: [OSViFieldRegs; 2],
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct OSContPad {
    pub button: u16_0,
    pub stick_x: s8,
    pub stick_y: s8,
    pub errno: u8_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Vtx_t {
    pub ob: [libc::c_short; 3],
    pub flag: libc::c_ushort,
    pub tc: [libc::c_short; 2],
    pub cn: [libc::c_uchar; 4],
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Vtx_tn {
    pub ob: [libc::c_short; 3],
    pub flag: libc::c_ushort,
    pub tc: [libc::c_short; 2],
    pub n: [libc::c_schar; 3],
    pub a: libc::c_uchar,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub union Vtx {
    pub v: Vtx_t,
    pub n: Vtx_tn,
    pub force_structure_alignment: libc::c_longlong,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Tri {
    pub flag: libc::c_uchar,
    pub v: [libc::c_uchar; 3],
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Vp_t {
    pub vscale: [libc::c_short; 4],
    pub vtrans: [libc::c_short; 4],
}
#[derive(Copy, Clone)]
#[repr(C)]
pub union Vp {
    pub vp: Vp_t,
    pub force_structure_alignment: libc::c_longlong,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Light_t {
    pub col: [libc::c_uchar; 3],
    pub pad1: libc::c_char,
    pub colc: [libc::c_uchar; 3],
    pub pad2: libc::c_char,
    pub dir: [libc::c_schar; 3],
    pub pad3: libc::c_char,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Ambient_t {
    pub col: [libc::c_uchar; 3],
    pub pad1: libc::c_char,
    pub colc: [libc::c_uchar; 3],
    pub pad2: libc::c_char,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub union Light {
    pub l: Light_t,
    pub force_structure_alignment: [libc::c_longlong; 2],
}
#[derive(Copy, Clone)]
#[repr(C)]
pub union Ambient {
    pub l: Ambient_t,
    pub force_structure_alignment: [libc::c_longlong; 1],
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Lightsn {
    pub a: Ambient,
    pub l: [Light; 7],
}
#[derive(Copy, Clone, BitfieldStruct)]
#[repr(C)]
pub struct Gdma {
    #[bitfield(name = "cmd", ty = "libc::c_int", bits = "0..=7")]
    #[bitfield(name = "par", ty = "libc::c_uint", bits = "8..=15")]
    #[bitfield(name = "len", ty = "libc::c_uint", bits = "16..=31")]
    pub cmd_par_len: [u8; 4],
    pub addr: libc::c_uint,
}
#[derive(Copy, Clone, BitfieldStruct)]
#[repr(C)]
pub struct Gtri {
    #[bitfield(name = "cmd", ty = "libc::c_int", bits = "0..=7")]
    #[bitfield(name = "pad", ty = "libc::c_int", bits = "8..=31")]
    pub cmd_pad: [u8; 4],
    pub tri: Tri,
}
#[derive(Copy, Clone, BitfieldStruct)]
#[repr(C)]
pub struct Gpopmtx {
    #[bitfield(name = "cmd", ty = "libc::c_int", bits = "0..=7")]
    #[bitfield(name = "pad1", ty = "libc::c_int", bits = "8..=31")]
    #[bitfield(name = "pad2", ty = "libc::c_int", bits = "32..=55")]
    #[bitfield(name = "param", ty = "libc::c_uchar", bits = "56..=63")]
    pub cmd_pad1_pad2_param: [u8; 8],
}
#[derive(Copy, Clone, BitfieldStruct)]
#[repr(C)]
pub struct Gsegment {
    #[bitfield(name = "cmd", ty = "libc::c_int", bits = "0..=7")]
    #[bitfield(name = "pad0", ty = "libc::c_int", bits = "8..=15")]
    #[bitfield(name = "mw_index", ty = "libc::c_int", bits = "16..=23")]
    #[bitfield(name = "number", ty = "libc::c_int", bits = "24..=31")]
    #[bitfield(name = "pad1", ty = "libc::c_int", bits = "32..=39")]
    #[bitfield(name = "base", ty = "libc::c_int", bits = "40..=63")]
    pub cmd_pad0_mw_index_number_pad1_base: [u8; 8],
}
#[derive(Copy, Clone, BitfieldStruct)]
#[repr(C)]
pub struct GsetothermodeL {
    #[bitfield(name = "cmd", ty = "libc::c_int", bits = "0..=7")]
    #[bitfield(name = "pad0", ty = "libc::c_int", bits = "8..=15")]
    #[bitfield(name = "sft", ty = "libc::c_int", bits = "16..=23")]
    #[bitfield(name = "len", ty = "libc::c_int", bits = "24..=31")]
    #[bitfield(name = "data", ty = "libc::c_uint", bits = "32..=63")]
    pub cmd_pad0_sft_len_data: [u8; 8],
}
#[derive(Copy, Clone, BitfieldStruct)]
#[repr(C)]
pub struct GsetothermodeH {
    #[bitfield(name = "cmd", ty = "libc::c_int", bits = "0..=7")]
    #[bitfield(name = "pad0", ty = "libc::c_int", bits = "8..=15")]
    #[bitfield(name = "sft", ty = "libc::c_int", bits = "16..=23")]
    #[bitfield(name = "len", ty = "libc::c_int", bits = "24..=31")]
    #[bitfield(name = "data", ty = "libc::c_uint", bits = "32..=63")]
    pub cmd_pad0_sft_len_data: [u8; 8],
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Gtexture {
    pub cmd: libc::c_uchar,
    pub lodscale: libc::c_uchar,
    pub tile: libc::c_uchar,
    pub on: libc::c_uchar,
    pub s: libc::c_ushort,
    pub t: libc::c_ushort,
}
#[derive(Copy, Clone, BitfieldStruct)]
#[repr(C)]
pub struct Gline3D {
    #[bitfield(name = "cmd", ty = "libc::c_int", bits = "0..=7")]
    #[bitfield(name = "pad", ty = "libc::c_int", bits = "8..=31")]
    pub cmd_pad: [u8; 4],
    pub line: Tri,
}
#[derive(Copy, Clone, BitfieldStruct)]
#[repr(C)]
pub struct Gperspnorm {
    #[bitfield(name = "cmd", ty = "libc::c_int", bits = "0..=7")]
    #[bitfield(name = "pad1", ty = "libc::c_int", bits = "8..=31")]
    pub cmd_pad1: [u8; 4],
    pub pad2: libc::c_short,
    pub scale: libc::c_short,
}
#[derive(Copy, Clone, BitfieldStruct)]
#[repr(C)]
pub struct Gsetimg {
    #[bitfield(name = "cmd", ty = "libc::c_int", bits = "0..=7")]
    #[bitfield(name = "fmt", ty = "libc::c_uint", bits = "8..=10")]
    #[bitfield(name = "siz", ty = "libc::c_uint", bits = "11..=12")]
    #[bitfield(name = "pad", ty = "libc::c_uint", bits = "13..=19")]
    #[bitfield(name = "wd", ty = "libc::c_uint", bits = "20..=31")]
    pub cmd_fmt_siz_pad_wd: [u8; 4],
    pub dram: libc::c_uint,
}
#[derive(Copy, Clone, BitfieldStruct)]
#[repr(C)]
pub struct Gsetcombine {
    #[bitfield(name = "cmd", ty = "libc::c_int", bits = "0..=7")]
    #[bitfield(name = "muxs0", ty = "libc::c_uint", bits = "8..=31")]
    #[bitfield(name = "muxs1", ty = "libc::c_uint", bits = "32..=63")]
    pub cmd_muxs0_muxs1: [u8; 8],
}
#[derive(Copy, Clone, BitfieldStruct)]
#[repr(C)]
pub struct Gsetcolor {
    #[bitfield(name = "cmd", ty = "libc::c_int", bits = "0..=7")]
    pub cmd: [u8; 1],
    pub pad: libc::c_uchar,
    pub prim_min_level: libc::c_uchar,
    pub prim_level: libc::c_uchar,
    pub color: libc::c_ulong,
}
#[derive(Copy, Clone, BitfieldStruct)]
#[repr(C)]
pub struct Gfillrect {
    #[bitfield(name = "cmd", ty = "libc::c_int", bits = "0..=7")]
    #[bitfield(name = "x0", ty = "libc::c_int", bits = "8..=17")]
    #[bitfield(name = "x0frac", ty = "libc::c_int", bits = "18..=19")]
    #[bitfield(name = "y0", ty = "libc::c_int", bits = "20..=29")]
    #[bitfield(name = "y0frac", ty = "libc::c_int", bits = "30..=31")]
    #[bitfield(name = "pad", ty = "libc::c_uint", bits = "32..=39")]
    #[bitfield(name = "x1", ty = "libc::c_int", bits = "40..=49")]
    #[bitfield(name = "x1frac", ty = "libc::c_int", bits = "50..=51")]
    #[bitfield(name = "y1", ty = "libc::c_int", bits = "52..=61")]
    #[bitfield(name = "y1frac", ty = "libc::c_int", bits = "62..=63")]
    pub cmd_x0_x0frac_y0_y0frac_pad_x1_x1frac_y1_y1frac: [u8; 8],
}
#[derive(Copy, Clone, BitfieldStruct)]
#[repr(C)]
pub struct Gsettile {
    #[bitfield(name = "cmd", ty = "libc::c_int", bits = "0..=7")]
    #[bitfield(name = "fmt", ty = "libc::c_uint", bits = "8..=10")]
    #[bitfield(name = "siz", ty = "libc::c_uint", bits = "11..=12")]
    #[bitfield(name = "pad0", ty = "libc::c_uint", bits = "13..=13")]
    #[bitfield(name = "line", ty = "libc::c_uint", bits = "14..=22")]
    #[bitfield(name = "tmem", ty = "libc::c_uint", bits = "23..=31")]
    #[bitfield(name = "pad1", ty = "libc::c_uint", bits = "32..=36")]
    #[bitfield(name = "tile", ty = "libc::c_uint", bits = "37..=39")]
    #[bitfield(name = "palette", ty = "libc::c_uint", bits = "40..=43")]
    #[bitfield(name = "ct", ty = "libc::c_uint", bits = "44..=44")]
    #[bitfield(name = "mt", ty = "libc::c_uint", bits = "45..=45")]
    #[bitfield(name = "maskt", ty = "libc::c_uint", bits = "46..=49")]
    #[bitfield(name = "shiftt", ty = "libc::c_uint", bits = "50..=53")]
    #[bitfield(name = "cs", ty = "libc::c_uint", bits = "54..=54")]
    #[bitfield(name = "ms", ty = "libc::c_uint", bits = "55..=55")]
    #[bitfield(name = "masks", ty = "libc::c_uint", bits = "56..=59")]
    #[bitfield(name = "shifts", ty = "libc::c_uint", bits = "60..=63")]
    pub cmd_fmt_siz_pad0_line_tmem_pad1_tile_palette_ct_mt_maskt_shiftt_cs_ms_masks_shifts: [u8; 8],
}
#[derive(Copy, Clone, BitfieldStruct)]
#[repr(C)]
pub struct Gloadtile {
    #[bitfield(name = "cmd", ty = "libc::c_int", bits = "0..=7")]
    #[bitfield(name = "sl", ty = "libc::c_uint", bits = "8..=19")]
    #[bitfield(name = "tl", ty = "libc::c_uint", bits = "20..=31")]
    #[bitfield(name = "pad", ty = "libc::c_int", bits = "32..=36")]
    #[bitfield(name = "tile", ty = "libc::c_uint", bits = "37..=39")]
    #[bitfield(name = "sh", ty = "libc::c_uint", bits = "40..=51")]
    #[bitfield(name = "th", ty = "libc::c_uint", bits = "52..=63")]
    pub cmd_sl_tl_pad_tile_sh_th: [u8; 8],
}
pub type Gsettilesize = Gloadtile;
pub type Gloadtlut = Gloadtile;
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Gwords {
    pub w0: libc::c_uint,
    pub w1: libc::c_uint,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub union Gfx {
    pub words: Gwords,
    pub dma: Gdma,
    pub tri: Gtri,
    pub line: Gline3D,
    pub popmtx: Gpopmtx,
    pub segment: Gsegment,
    pub setothermodeH: GsetothermodeH,
    pub setothermodeL: GsetothermodeL,
    pub texture: Gtexture,
    pub perspnorm: Gperspnorm,
    pub setimg: Gsetimg,
    pub setcombine: Gsetcombine,
    pub setcolor: Gsetcolor,
    pub fillrect: Gfillrect,
    pub settile: Gsettile,
    pub loadtile: Gloadtile,
    pub settilesize: Gsettilesize,
    pub loadtlut: Gloadtlut,
    pub force_structure_alignment: libc::c_longlong,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Vec3f {
    pub x: f32_0,
    pub y: f32_0,
    pub z: f32_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Vec3us {
    pub x: u16_0,
    pub y: u16_0,
    pub z: u16_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Vec3s {
    pub x: s16,
    pub y: s16,
    pub z: s16,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Vec3i {
    pub x: s32,
    pub y: s32,
    pub z: s32,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Sphere16 {
    pub center: Vec3s,
    pub radius: s16,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Cylinder16 {
    pub radius: s16,
    pub height: s16,
    pub yShift: s16,
    pub pos: Vec3s,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Linef {
    pub a: Vec3f,
    pub b: Vec3f,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct ItemEquips {
    pub buttonItems: [u8_0; 4],
    pub cButtonSlots: [u8_0; 3],
    pub equipment: u16_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Inventory {
    pub items: [u8_0; 24],
    pub ammo: [s8; 16],
    pub equipment: u16_0,
    pub upgrades: u32_0,
    pub questItems: u32_0,
    pub dungeonItems: [u8_0; 20],
    pub dungeonKeys: [s8; 19],
    pub defenseHearts: s8,
    pub gsTokens: s16,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct SavedSceneFlags {
    pub chest: u32_0,
    pub swch: u32_0,
    pub clear: u32_0,
    pub collect: u32_0,
    pub unk: u32_0,
    pub rooms: u32_0,
    pub floors: u32_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct HorseData {
    pub scene: s16,
    pub pos: Vec3s,
    pub angle: s16,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct RespawnData {
    pub pos: Vec3f,
    pub yaw: s16,
    pub playerParams: s16,
    pub entranceIndex: s16,
    pub roomIndex: u8_0,
    pub data: s8,
    pub tempSwchFlags: u32_0,
    pub tempCollectFlags: u32_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct FaroresWindData {
    pub pos: Vec3i,
    pub yaw: s32,
    pub playerParams: s32,
    pub entranceIndex: s32,
    pub roomIndex: s32,
    pub set: s32,
    pub tempSwchFlags: s32,
    pub tempCollectFlags: s32,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct SaveContext {
    pub entranceIndex: s32,
    pub linkAge: s32,
    pub cutsceneIndex: s32,
    pub dayTime: u16_0,
    pub nightFlag: s32,
    pub totalDays: s32,
    pub bgsDayCount: s32,
    pub newf: [libc::c_char; 6],
    pub deaths: u16_0,
    pub playerName: [libc::c_char; 8],
    pub n64ddFlag: s16,
    pub healthCapacity: s16,
    pub health: s16,
    pub magicLevel: s8,
    pub magic: s8,
    pub rupees: s16,
    pub swordHealth: u16_0,
    pub naviTimer: u16_0,
    pub magicAcquired: u8_0,
    pub unk_3B: [libc::c_char; 1],
    pub doubleMagic: u8_0,
    pub doubleDefense: u8_0,
    pub bgsFlag: u8_0,
    pub ocarinaGameRoundNum: u8_0,
    pub childEquips: ItemEquips,
    pub adultEquips: ItemEquips,
    pub unk_54: u32_0,
    pub unk_58: [libc::c_char; 14],
    pub savedSceneNum: s16,
    pub equips: ItemEquips,
    pub inventory: Inventory,
    pub sceneFlags: [SavedSceneFlags; 124],
    pub fw: FaroresWindData,
    pub unk_E8C: [libc::c_char; 16],
    pub gsFlags: [s32; 6],
    pub unk_EB4: [libc::c_char; 4],
    pub highScores: [s32; 7],
    pub eventChkInf: [u16_0; 14],
    pub itemGetInf: [u16_0; 4],
    pub infTable: [u16_0; 30],
    pub unk_F34: [libc::c_char; 4],
    pub worldMapAreaData: u32_0,
    pub unk_F3C: [libc::c_char; 4],
    pub scarecrowCustomSongSet: u8_0,
    pub scarecrowCustomSong: [u8_0; 864],
    pub unk_12A1: [libc::c_char; 36],
    pub scarecrowSpawnSongSet: u8_0,
    pub scarecrowSpawnSong: [u8_0; 128],
    pub unk_1346: [libc::c_char; 2],
    pub horseData: HorseData,
    pub checksum: u16_0,
    pub fileNum: s32,
    pub unk_1358: [libc::c_char; 4],
    pub gameMode: s32,
    pub sceneSetupIndex: s32,
    pub respawnFlag: s32,
    pub respawn: [RespawnData; 3],
    pub entranceSpeed: f32_0,
    pub entranceSound: u16_0,
    pub unk_13C2: [libc::c_char; 1],
    pub unk_13C3: u8_0,
    pub dogParams: s16,
    pub textTriggerFlags: u8_0,
    pub showTitleCard: u8_0,
    pub nayrusLoveTimer: s16,
    pub unk_13CA: [libc::c_char; 2],
    pub rupeeAccumulator: s16,
    pub timer1State: s16,
    pub timer1Value: s16,
    pub timer2State: s16,
    pub timer2Value: s16,
    pub timerX: [s16; 2],
    pub timerY: [s16; 2],
    pub unk_13DE: [libc::c_char; 2],
    pub seqId: u8_0,
    pub natureAmbienceId: u8_0,
    pub buttonStatus: [u8_0; 5],
    pub unk_13E7: u8_0,
    pub unk_13E8: u16_0,
    pub unk_13EA: u16_0,
    pub unk_13EC: u16_0,
    pub unk_13EE: u16_0,
    pub unk_13F0: s16,
    pub unk_13F2: s16,
    pub unk_13F4: s16,
    pub unk_13F6: s16,
    pub unk_13F8: s16,
    pub eventInf: [u16_0; 4],
    pub mapIndex: u16_0,
    pub minigameState: u16_0,
    pub minigameScore: u16_0,
    pub unk_1408: [libc::c_char; 1],
    pub language: u8_0,
    pub audioSetting: u8_0,
    pub unk_140B: [libc::c_char; 1],
    pub zTargetSetting: u8_0,
    pub forcedSeqId: u16_0,
    pub unk_1410: u8_0,
    pub unk_1411: [libc::c_char; 1],
    pub nextCutsceneIndex: u16_0,
    pub cutsceneTrigger: u8_0,
    pub chamberCutsceneNum: u8_0,
    pub nextDayTime: u16_0,
    pub fadeDuration: u8_0,
    pub unk_1419: u8_0,
    pub skyboxTime: u16_0,
    pub dogIsLost: u8_0,
    pub nextTransition: u8_0,
    pub unk_141E: [libc::c_char; 2],
    pub worldMapArea: s16,
    pub sunsSongState: s16,
    pub healthAccumulator: s16,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Color_RGB8 {
    pub r: u8_0,
    pub g: u8_0,
    pub b: u8_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub union Color_RGBA8_u32 {
    pub c2rust_unnamed: C2RustUnnamed_2,
    pub rgba: u32_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct C2RustUnnamed_2 {
    pub r: u8_0,
    pub g: u8_0,
    pub b: u8_0,
    pub a: u8_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Color_RGBAf {
    pub r: f32_0,
    pub g: f32_0,
    pub b: f32_0,
    pub a: f32_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct LightPoint {
    pub x: s16,
    pub y: s16,
    pub z: s16,
    pub color: [u8_0; 3],
    pub drawGlow: u8_0,
    pub radius: s16,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct LightDirectional {
    pub x: s8,
    pub y: s8,
    pub z: s8,
    pub color: [u8_0; 3],
}
#[derive(Copy, Clone)]
#[repr(C)]
pub union LightParams {
    pub point: LightPoint,
    pub dir: LightDirectional,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct LightInfo {
    pub type_0: u8_0,
    pub params: LightParams,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Lights {
    pub numLights: u8_0,
    pub l: Lightsn,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct LightNode {
    pub info: *mut LightInfo,
    pub prev: *mut LightNode,
    pub next: *mut LightNode,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct LightContext {
    pub listHead: *mut LightNode,
    pub ambientColor: [u8_0; 3],
    pub fogColor: [u8_0; 3],
    pub fogNear: s16,
    pub fogFar: s16,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct GlobalContext {
    pub state: GameState,
    pub sceneNum: s16,
    pub sceneConfig: u8_0,
    pub unk_A7: [libc::c_char; 9],
    pub sceneSegment: *mut libc::c_void,
    pub view: View,
    pub mainCamera: Camera,
    pub subCameras: [Camera; 3],
    pub cameraPtrs: [*mut Camera; 4],
    pub activeCamera: s16,
    pub nextCamera: s16,
    pub sequenceCtx: SequenceContext,
    pub lightCtx: LightContext,
    pub frameAdvCtx: FrameAdvanceContext,
    pub colCtx: CollisionContext,
    pub actorCtx: ActorContext,
    pub csCtx: CutsceneContext,
    pub soundSources: [SoundSource; 16],
    pub sramCtx: SramContext,
    pub skyboxCtx: SkyboxContext,
    pub msgCtx: MessageContext,
    pub interfaceCtx: InterfaceContext,
    pub pauseCtx: PauseContext,
    pub gameOverCtx: GameOverContext,
    pub envCtx: EnvironmentContext,
    pub animationCtx: AnimationContext,
    pub objectCtx: ObjectContext,
    pub roomCtx: RoomContext,
    pub transiActorCtx: TransitionActorContext,
    pub playerInit: Option<unsafe extern "C" fn(_: *mut Player,
                                                _: *mut GlobalContext,
                                                _: *mut FlexSkeletonHeader)
                               -> ()>,
    pub playerUpdate: Option<unsafe extern "C" fn(_: *mut Player,
                                                  _: *mut GlobalContext,
                                                  _: *mut Input) -> ()>,
    pub isPlayerDroppingFish: Option<unsafe extern "C" fn(_:
                                                              *mut GlobalContext)
                                         -> s32>,
    pub startPlayerFishing: Option<unsafe extern "C" fn(_: *mut GlobalContext)
                                       -> s32>,
    pub grabPlayer: Option<unsafe extern "C" fn(_: *mut GlobalContext,
                                                _: *mut Player) -> s32>,
    pub startPlayerCutscene: Option<unsafe extern "C" fn(_:
                                                             *mut GlobalContext,
                                                         _: *mut Actor,
                                                         _: s32) -> s32>,
    pub func_11D54: Option<unsafe extern "C" fn(_: *mut Player,
                                                _: *mut GlobalContext) -> ()>,
    pub damagePlayer: Option<unsafe extern "C" fn(_: *mut GlobalContext,
                                                  _: s32) -> s32>,
    pub talkWithPlayer: Option<unsafe extern "C" fn(_: *mut GlobalContext,
                                                    _: *mut Actor) -> ()>,
    pub viewProjectionMtxF: MtxF,
    pub billboardMtxF: MtxF,
    pub billboardMtx: *mut Mtx,
    pub gameplayFrames: u32_0,
    pub linkAgeOnLoad: u8_0,
    pub unk_11DE9: u8_0,
    pub curSpawn: u8_0,
    pub numSetupActors: u8_0,
    pub numRooms: u8_0,
    pub roomList: *mut RomFile,
    pub linkActorEntry: *mut ActorEntry,
    pub setupActorList: *mut ActorEntry,
    pub unk_11DFC: *mut libc::c_void,
    pub setupEntranceList: *mut EntranceEntry,
    pub setupExitList: *mut s16,
    pub setupPathList: *mut Path,
    pub cUpElfMsgs: *mut ElfMessage,
    pub specialEffects: *mut libc::c_void,
    pub skyboxId: u8_0,
    pub sceneLoadFlag: s8,
    pub unk_11E16: s16,
    pub unk_11E18: s16,
    pub nextEntranceIndex: s16,
    pub unk_11E1C: [libc::c_char; 64],
    pub shootingGalleryStatus: s8,
    pub bombchuBowlingStatus: s8,
    pub fadeTransition: u8_0,
    pub colChkCtx: CollisionCheckContext,
    pub envFlags: [u16_0; 20],
    pub pauseBgPreRender: PreRender,
    pub unk_12174: [libc::c_char; 83],
    pub unk_121C7: s8,
    pub transitionCtx: TransitionContext,
    pub unk_12418: [libc::c_char; 3],
    pub transitionMode: u8_0,
    pub transitionFade: TransitionFade,
    pub unk_12428: [libc::c_char; 3],
    pub unk_1242B: u8_0,
    pub loadedScene: *mut SceneTableEntry,
    pub unk_12430: [libc::c_char; 232],
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct SceneTableEntry {
    pub sceneFile: RomFile,
    pub titleFile: RomFile,
    pub unk_10: u8_0,
    pub config: u8_0,
    pub unk_12: u8_0,
    pub unk_13: u8_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct RomFile {
    pub vromStart: u32_0,
    pub vromEnd: u32_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct TransitionFade {
    pub fadeType: u8_0,
    pub isDone: u8_0,
    pub fadeDirection: u8_0,
    pub fadeColor: Color_RGBA8_u32,
    pub fadeTimer: u16_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct TransitionContext {
    pub c2rust_unnamed: C2RustUnnamed_3,
    pub transitionType: s32,
    pub init: Option<unsafe extern "C" fn(_: *mut libc::c_void)
                         -> *mut libc::c_void>,
    pub destroy: Option<unsafe extern "C" fn(_: *mut libc::c_void) -> ()>,
    pub update: Option<unsafe extern "C" fn(_: *mut libc::c_void, _: s32)
                           -> ()>,
    pub draw: Option<unsafe extern "C" fn(_: *mut libc::c_void,
                                          _: *mut *mut Gfx) -> ()>,
    pub start: Option<unsafe extern "C" fn(_: *mut libc::c_void) -> ()>,
    pub setType: Option<unsafe extern "C" fn(_: *mut libc::c_void, _: s32)
                            -> ()>,
    pub setColor: Option<unsafe extern "C" fn(_: *mut libc::c_void, _: u32_0)
                             -> ()>,
    pub setEnvColor: Option<unsafe extern "C" fn(_: *mut libc::c_void,
                                                 _: u32_0) -> ()>,
    pub isDone: Option<unsafe extern "C" fn(_: *mut libc::c_void) -> s32>,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub union C2RustUnnamed_3 {
    pub fade: TransitionFade,
    pub circle: TransitionCircle,
    pub triforce: TransitionTriforce,
    pub wipe: TransitionWipe,
    pub data: [libc::c_char; 552],
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct TransitionWipe {
    pub color: Color_RGBA8_u32,
    pub envColor: Color_RGBA8_u32,
    pub direction: u8_0,
    pub frame: u8_0,
    pub isDone: u8_0,
    pub texX: u16_0,
    pub texY: u16_0,
    pub normal: u16_0,
    pub projection: Mtx,
    pub lookAt: Mtx,
    pub modelView: [[Mtx; 3]; 2],
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct TransitionTriforce {
    pub color: Color_RGBA8_u32,
    pub transPos: f32_0,
    pub step: f32_0,
    pub state: s32,
    pub fadeDirection: s32,
    pub projection: Mtx,
    pub frame: s32,
    pub modelView: [[Mtx; 3]; 2],
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct TransitionCircle {
    pub color: Color_RGBA8_u32,
    pub envColor: Color_RGBA8_u32,
    pub texX: s32,
    pub texY: s32,
    pub step: s32,
    pub unk_14: u8_0,
    pub typeColor: u8_0,
    pub speed: u8_0,
    pub effect: u8_0,
    pub isDone: u8_0,
    pub frame: u8_0,
    pub normal: u16_0,
    pub projection: Mtx,
    pub lookAt: Mtx,
    pub texture: *mut libc::c_void,
    pub modelView: [[Mtx; 3]; 2],
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct PreRender {
    pub width: s32,
    pub height: s32,
    pub widthSave: s32,
    pub heightSave: s32,
    pub fbuf: *mut u16_0,
    pub fbufSave: *mut u16_0,
    pub cvgSave: *mut u8_0,
    pub zbuf: *mut u16_0,
    pub zbufSave: *mut u16_0,
    pub ulxSave: s32,
    pub ulySave: s32,
    pub lrxSave: s32,
    pub lrySave: s32,
    pub ulx: s32,
    pub uly: s32,
    pub lrx: s32,
    pub lry: s32,
    pub alloc: ListAlloc,
    pub unk_4C: u32_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct ListAlloc {
    pub prev: *mut ListAlloc,
    pub next: *mut ListAlloc,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct CollisionCheckContext {
    pub colATCount: s16,
    pub sacFlags: u16_0,
    pub colAT: [*mut Collider; 50],
    pub colACCount: s32,
    pub colAC: [*mut Collider; 60],
    pub colOCCount: s32,
    pub colOC: [*mut Collider; 50],
    pub colLineCount: s32,
    pub colLine: [*mut OcLine; 3],
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct OcLine {
    pub line: Linef,
    pub ocFlags: u16_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Collider {
    pub actor: *mut Actor,
    pub at: *mut Actor,
    pub ac: *mut Actor,
    pub oc: *mut Actor,
    pub atFlags: u8_0,
    pub acFlags: u8_0,
    pub ocFlags1: u8_0,
    pub ocFlags2: u8_0,
    pub colType: u8_0,
    pub shape: u8_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Actor {
    pub id: s16,
    pub category: u8_0,
    pub room: s8,
    pub flags: u32_0,
    pub home: PosRot,
    pub params: s16,
    pub objBankIndex: s8,
    pub targetMode: s8,
    pub sfx: u16_0,
    pub world: PosRot,
    pub focus: PosRot,
    pub targetArrowOffset: f32_0,
    pub scale: Vec3f,
    pub velocity: Vec3f,
    pub speedXZ: f32_0,
    pub gravity: f32_0,
    pub minVelocityY: f32_0,
    pub wallPoly: *mut CollisionPoly,
    pub floorPoly: *mut CollisionPoly,
    pub wallBgId: u8_0,
    pub floorBgId: u8_0,
    pub wallYaw: s16,
    pub floorHeight: f32_0,
    pub yDistToWater: f32_0,
    pub bgCheckFlags: u16_0,
    pub yawTowardsPlayer: s16,
    pub xyzDistToPlayerSq: f32_0,
    pub xzDistToPlayer: f32_0,
    pub yDistToPlayer: f32_0,
    pub colChkInfo: CollisionCheckInfo,
    pub shape: ActorShape,
    pub projectedPos: Vec3f,
    pub projectedW: f32_0,
    pub uncullZoneForward: f32_0,
    pub uncullZoneScale: f32_0,
    pub uncullZoneDownward: f32_0,
    pub prevPos: Vec3f,
    pub isTargeted: u8_0,
    pub targetPriority: u8_0,
    pub textId: u16_0,
    pub freezeTimer: u16_0,
    pub colorFilterParams: u16_0,
    pub colorFilterTimer: u8_0,
    pub isDrawn: u8_0,
    pub dropFlag: u8_0,
    pub naviEnemyId: u8_0,
    pub parent: *mut Actor,
    pub child: *mut Actor,
    pub prev: *mut Actor,
    pub next: *mut Actor,
    pub init: ActorFunc,
    pub destroy: ActorFunc,
    pub update: ActorFunc,
    pub draw: ActorFunc,
    pub overlayEntry: *mut ActorOverlay,
    pub dbgPad: [libc::c_char; 16],
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct ActorOverlay {
    pub vromStart: u32_0,
    pub vromEnd: u32_0,
    pub vramStart: *mut libc::c_void,
    pub vramEnd: *mut libc::c_void,
    pub loadedRamAddr: *mut libc::c_void,
    pub initInfo: *mut ActorInit,
    pub name: *mut libc::c_char,
    pub allocType: u16_0,
    pub numLoaded: s8,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct ActorInit {
    pub id: s16,
    pub category: u8_0,
    pub flags: u32_0,
    pub objectId: s16,
    pub instanceSize: u32_0,
    pub init: ActorFunc,
    pub destroy: ActorFunc,
    pub update: ActorFunc,
    pub draw: ActorFunc,
}
pub type ActorFunc
    =
    Option<unsafe extern "C" fn(_: *mut Actor, _: *mut GlobalContext) -> ()>;
#[derive(Copy, Clone)]
#[repr(C)]
pub struct ActorShape {
    pub rot: Vec3s,
    pub face: s16,
    pub yOffset: f32_0,
    pub shadowDraw: ActorShadowFunc,
    pub shadowScale: f32_0,
    pub shadowAlpha: u8_0,
    pub feetFloorFlags: u8_0,
    pub feetPos: [Vec3f; 2],
}
pub type ActorShadowFunc
    =
    Option<unsafe extern "C" fn(_: *mut Actor, _: *mut Lights,
                                _: *mut GlobalContext) -> ()>;
#[derive(Copy, Clone)]
#[repr(C)]
pub struct CollisionCheckInfo {
    pub damageTable: *mut DamageTable,
    pub displacement: Vec3f,
    pub cylRadius: s16,
    pub cylHeight: s16,
    pub cylYShift: s16,
    pub mass: u8_0,
    pub health: u8_0,
    pub damage: u8_0,
    pub damageEffect: u8_0,
    pub atHitEffect: u8_0,
    pub acHitEffect: u8_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct DamageTable {
    pub table: [u8_0; 32],
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct CollisionPoly {
    pub type_0: u16_0,
    pub c2rust_unnamed: C2RustUnnamed_4,
    pub normal: Vec3s,
    pub dist: s16,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub union C2RustUnnamed_4 {
    pub vtxData: [u16_0; 3],
    pub c2rust_unnamed: C2RustUnnamed_5,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct C2RustUnnamed_5 {
    pub flags_vIA: u16_0,
    pub flags_vIB: u16_0,
    pub vIC: u16_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct PosRot {
    pub pos: Vec3f,
    pub rot: Vec3s,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct ElfMessage {
    pub byte0: u8_0,
    pub byte1: u8_0,
    pub byte2: u8_0,
    pub byte3: u8_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Path {
    pub count: u8_0,
    pub points: *mut Vec3s,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct EntranceEntry {
    pub spawn: u8_0,
    pub room: u8_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct ActorEntry {
    pub id: s16,
    pub pos: Vec3s,
    pub rot: Vec3s,
    pub params: s16,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Player {
    pub actor: Actor,
    pub currentTunic: s8,
    pub currentSword: s8,
    pub currentShield: s8,
    pub currentBoots: s8,
    pub heldItemButton: s8,
    pub heldItemActionParam: s8,
    pub heldItemId: u8_0,
    pub prevBoots: s8,
    pub itemActionParam: s8,
    pub unk_155: [libc::c_char; 3],
    pub modelGroup: u8_0,
    pub nextModelGroup: u8_0,
    pub unk_15A: s8,
    pub modelAnimType: u8_0,
    pub leftHandType: u8_0,
    pub rightHandType: u8_0,
    pub sheathType: u8_0,
    pub currentMask: u8_0,
    pub rightHandDLists: *mut *mut Gfx,
    pub leftHandDLists: *mut *mut Gfx,
    pub sheathDLists: *mut *mut Gfx,
    pub waistDLists: *mut *mut Gfx,
    pub giObjectLoading: u8_0,
    pub giObjectDmaRequest: DmaRequest,
    pub giObjectLoadQueue: OSMesgQueue,
    pub giObjectLoadMsg: OSMesg,
    pub giObjectSegment: *mut libc::c_void,
    pub skelAnime: SkelAnime,
    pub jointTable: [Vec3s; 24],
    pub morphTable: [Vec3s; 24],
    pub blendTable: [Vec3s; 24],
    pub unk_3A8: [s16; 2],
    pub heldActor: *mut Actor,
    pub leftHandPos: Vec3f,
    pub unk_3BC: Vec3s,
    pub unk_3C4: *mut Actor,
    pub unk_3C8: Vec3f,
    pub unk_3D4: [libc::c_char; 88],
    pub doorType: s8,
    pub doorDirection: s8,
    pub doorTimer: s16,
    pub doorActor: *mut Actor,
    pub getItemId: s8,
    pub getItemDirection: u16_0,
    pub interactRangeActor: *mut Actor,
    pub mountSide: s8,
    pub unk_43D: [libc::c_char; 3],
    pub rideActor: *mut Actor,
    pub csMode: u8_0,
    pub prevCsMode: u8_0,
    pub unk_446: u8_0,
    pub unk_447: u8_0,
    pub unk_448: *mut Actor,
    pub unk_44C: [libc::c_char; 4],
    pub unk_450: Vec3f,
    pub unk_45C: Vec3f,
    pub unk_468: [libc::c_char; 2],
    pub unk_46A: s16,
    pub unk_46C: s16,
    pub unk_46E: [libc::c_char; 42],
    pub cylinder: ColliderCylinder,
    pub swordQuads: [ColliderQuad; 2],
    pub shieldQuad: ColliderQuad,
    pub unk_664: *mut Actor,
    pub unk_668: [libc::c_char; 4],
    pub unk_66C: s32,
    pub swordEffectIndex: s32,
    pub func_674: PlayerFunc674,
    pub ageProperties: *mut PlayerAgeProperties,
    pub stateFlags1: u32_0,
    pub stateFlags2: u32_0,
    pub unk_684: *mut Actor,
    pub boomerangActor: *mut Actor,
    pub naviActor: *mut Actor,
    pub naviTextId: s16,
    pub stateFlags3: u8_0,
    pub exchangeItemId: s8,
    pub targetActor: *mut Actor,
    pub targetActorDistance: f32_0,
    pub unk_69C: [libc::c_char; 4],
    pub unk_6A0: f32_0,
    pub unk_6A4: f32_0,
    pub unk_6A8: *mut Actor,
    pub unk_6AC: s8,
    pub unk_6AD: u8_0,
    pub unk_6AE: u16_0,
    pub unk_6B0: s16,
    pub unk_6B4: [libc::c_char; 4],
    pub unk_6B6: s16,
    pub unk_6B8: s16,
    pub unk_6BA: s16,
    pub unk_6BC: s16,
    pub unk_6BE: s16,
    pub unk_6C0: s16,
    pub unk_6C2: s16,
    pub unk_6C4: f32_0,
    pub skelAnime2: SkelAnime,
    pub jointTable2: [Vec3s; 24],
    pub morphTable2: [Vec3s; 24],
    pub func_82C: PlayerFunc82C,
    pub unk_830: f32_0,
    pub unk_834: s16,
    pub unk_836: s8,
    pub unk_837: u8_0,
    pub linearVelocity: f32_0,
    pub currentYaw: s16,
    pub targetYaw: s16,
    pub unk_840: u16_0,
    pub swordAnimation: s8,
    pub swordState: s8,
    pub unk_844: s8,
    pub unk_845: u8_0,
    pub unk_846: u8_0,
    pub unk_847: [s8; 4],
    pub unk_84B: [s8; 4],
    pub unk_84F: s8,
    pub unk_850: s16,
    pub unk_854: f32_0,
    pub unk_858: f32_0,
    pub unk_85C: f32_0,
    pub unk_860: s16,
    pub unk_862: s8,
    pub unk_864: f32_0,
    pub unk_868: f32_0,
    pub unk_86C: f32_0,
    pub unk_870: f32_0,
    pub unk_874: f32_0,
    pub unk_878: f32_0,
    pub unk_87C: s16,
    pub unk_87E: s16,
    pub unk_880: f32_0,
    pub wallHeight: f32_0,
    pub wallDistance: f32_0,
    pub unk_88C: u8_0,
    pub unk_88D: u8_0,
    pub unk_88E: u8_0,
    pub unk_88F: u8_0,
    pub unk_890: u8_0,
    pub shockTimer: u8_0,
    pub unk_892: u8_0,
    pub hoverBootsTimer: u8_0,
    pub fallStartHeight: s16,
    pub fallDistance: s16,
    pub unk_898: s16,
    pub unk_89A: s16,
    pub unk_89C: s16,
    pub unk_89E: u16_0,
    pub unk_8A0: u8_0,
    pub unk_8A1: u8_0,
    pub unk_8A2: s16,
    pub unk_8A4: f32_0,
    pub unk_8A8: f32_0,
    pub windSpeed: f32_0,
    pub windDirection: s16,
    pub swordInfo: [WeaponInfo; 3],
    pub bodyPartsPos: [Vec3f; 18],
    pub mf_9E0: MtxF,
    pub shieldMf: MtxF,
    pub isBurning: u8_0,
    pub flameTimers: [u8_0; 18],
    pub unk_A73: u8_0,
    pub func_A74: PlayerFuncA74,
    pub invincibilityTimer: s8,
    pub unk_A79: u8_0,
    pub unk_A7A: u8_0,
    pub unk_A7B: u8_0,
    pub unk_A7C: f32_0,
    pub unk_A80: s16,
    pub unk_A82: u16_0,
    pub unk_A84: s16,
    pub unk_A86: s8,
    pub unk_A87: u8_0,
    pub unk_A88: Vec3f,
}
pub type PlayerFuncA74
    =
    Option<unsafe extern "C" fn(_: *mut GlobalContext, _: *mut Player) -> ()>;
#[derive(Copy, Clone)]
#[repr(C)]
pub struct WeaponInfo {
    pub active: s32,
    pub tip: Vec3f,
    pub base: Vec3f,
}
pub type PlayerFunc82C
    =
    Option<unsafe extern "C" fn(_: *mut Player, _: *mut GlobalContext)
               -> s32>;
#[derive(Copy, Clone)]
#[repr(C)]
pub struct SkelAnime {
    pub limbCount: u8_0,
    pub mode: u8_0,
    pub dListCount: u8_0,
    pub taper: s8,
    pub skeleton: *mut *mut libc::c_void,
    pub animation: *mut libc::c_void,
    pub startFrame: f32_0,
    pub endFrame: f32_0,
    pub animLength: f32_0,
    pub curFrame: f32_0,
    pub playSpeed: f32_0,
    pub jointTable: *mut Vec3s,
    pub morphTable: *mut Vec3s,
    pub morphWeight: f32_0,
    pub morphRate: f32_0,
    pub update: Option<unsafe extern "C" fn() -> s32>,
    pub initFlags: s8,
    pub moveFlags: u8_0,
    pub prevRot: s16,
    pub prevTransl: Vec3s,
    pub baseTransl: Vec3s,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct PlayerAgeProperties {
    pub unk_00: f32_0,
    pub unk_04: f32_0,
    pub unk_08: f32_0,
    pub unk_0C: f32_0,
    pub unk_10: f32_0,
    pub unk_14: f32_0,
    pub unk_18: f32_0,
    pub unk_1C: f32_0,
    pub unk_20: f32_0,
    pub unk_24: f32_0,
    pub unk_28: f32_0,
    pub unk_2C: f32_0,
    pub unk_30: f32_0,
    pub unk_34: f32_0,
    pub unk_38: f32_0,
    pub unk_3C: f32_0,
    pub unk_40: f32_0,
    pub unk_44: Vec3s,
    pub unk_4A: [Vec3s; 4],
    pub unk_62: [Vec3s; 4],
    pub unk_7A: [Vec3s; 2],
    pub unk_86: [Vec3s; 2],
    pub unk_92: u16_0,
    pub unk_94: u16_0,
    pub unk_98: *mut LinkAnimationHeader,
    pub unk_9C: *mut LinkAnimationHeader,
    pub unk_A0: *mut LinkAnimationHeader,
    pub unk_A4: *mut LinkAnimationHeader,
    pub unk_A8: *mut LinkAnimationHeader,
    pub unk_AC: [*mut LinkAnimationHeader; 4],
    pub unk_BC: [*mut LinkAnimationHeader; 2],
    pub unk_C4: [*mut LinkAnimationHeader; 2],
    pub unk_CC: [*mut LinkAnimationHeader; 2],
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct LinkAnimationHeader {
    pub common: AnimationHeaderCommon,
    pub segment: *mut libc::c_void,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct AnimationHeaderCommon {
    pub frameCount: s16,
}
pub type PlayerFunc674
    =
    Option<unsafe extern "C" fn(_: *mut Player, _: *mut GlobalContext) -> ()>;
#[derive(Copy, Clone)]
#[repr(C)]
pub struct ColliderQuad {
    pub base: Collider,
    pub info: ColliderInfo,
    pub dim: ColliderQuadDim,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct ColliderQuadDim {
    pub quad: [Vec3f; 4],
    pub dcMid: Vec3s,
    pub baMid: Vec3s,
    pub acDist: f32_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct ColliderInfo {
    pub toucher: ColliderTouch,
    pub bumper: ColliderBump,
    pub elemType: u8_0,
    pub toucherFlags: u8_0,
    pub bumperFlags: u8_0,
    pub ocElemFlags: u8_0,
    pub atHit: *mut Collider,
    pub acHit: *mut Collider,
    pub atHitInfo: *mut ColliderInfo,
    pub acHitInfo: *mut ColliderInfo,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct ColliderBump {
    pub dmgFlags: u32_0,
    pub effect: u8_0,
    pub defense: u8_0,
    pub hitPos: Vec3s,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct ColliderTouch {
    pub dmgFlags: u32_0,
    pub effect: u8_0,
    pub damage: u8_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct ColliderCylinder {
    pub base: Collider,
    pub info: ColliderInfo,
    pub dim: Cylinder16,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct DmaRequest {
    pub vromAddr: u32_0,
    pub dramAddr: *mut libc::c_void,
    pub size: u32_0,
    pub filename: *const libc::c_char,
    pub line: s32,
    pub unk_14: s32,
    pub notifyQueue: *mut OSMesgQueue,
    pub notifyMsg: OSMesg,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Input {
    pub cur: OSContPad,
    pub prev: OSContPad,
    pub press: OSContPad,
    pub rel: OSContPad,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct FlexSkeletonHeader {
    pub sh: SkeletonHeader,
    pub dListCount: u8_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct SkeletonHeader {
    pub segment: *mut *mut libc::c_void,
    pub limbCount: u8_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct TransitionActorContext {
    pub numActors: u8_0,
    pub list: *mut TransitionActorEntry,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct TransitionActorEntry {
    pub sides: [C2RustUnnamed_6; 2],
    pub id: s16,
    pub pos: Vec3s,
    pub rotY: s16,
    pub params: s16,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct C2RustUnnamed_6 {
    pub room: s8,
    pub effects: s8,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct RoomContext {
    pub curRoom: Room,
    pub prevRoom: Room,
    pub bufPtrs: [*mut libc::c_void; 2],
    pub unk_30: u8_0,
    pub status: s8,
    pub unk_34: *mut libc::c_void,
    pub dmaRequest: DmaRequest,
    pub loadQueue: OSMesgQueue,
    pub loadMsg: OSMesg,
    pub unk_74: [s16; 2],
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Room {
    pub num: s8,
    pub unk_01: u8_0,
    pub unk_02: u8_0,
    pub unk_03: u8_0,
    pub echo: s8,
    pub showInvisActors: u8_0,
    pub mesh: *mut Mesh,
    pub segment: *mut libc::c_void,
    pub unk_10: [libc::c_char; 4],
}
#[derive(Copy, Clone)]
#[repr(C)]
pub union Mesh {
    pub polygon: Polygon,
    pub polygon0: PolygonType0,
    pub polygon1: PolygonType1,
    pub polygon2: PolygonType2,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct PolygonType2 {
    pub type_0: u8_0,
    pub num: u8_0,
    pub start: *mut libc::c_void,
    pub end: *mut libc::c_void,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct PolygonType1 {
    pub type_0: u8_0,
    pub format: u8_0,
    pub dlist: *mut Gfx,
    pub c2rust_unnamed: C2RustUnnamed_7,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub union C2RustUnnamed_7 {
    pub single: C2RustUnnamed_9,
    pub multi: C2RustUnnamed_8,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct C2RustUnnamed_8 {
    pub count: u8_0,
    pub list: *mut BgImage,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct BgImage {
    pub unk_00: u16_0,
    pub id: u8_0,
    pub source: u32_0,
    pub unk_0C: u32_0,
    pub tlut: u32_0,
    pub width: u16_0,
    pub height: u16_0,
    pub fmt: u8_0,
    pub siz: u8_0,
    pub mode0: u16_0,
    pub tlutCount: u16_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct C2RustUnnamed_9 {
    pub source: *mut libc::c_void,
    pub unk_0C: u32_0,
    pub tlut: *mut libc::c_void,
    pub width: u16_0,
    pub height: u16_0,
    pub fmt: u8_0,
    pub siz: u8_0,
    pub mode0: u16_0,
    pub tlutCount: u16_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct PolygonType0 {
    pub type_0: u8_0,
    pub num: u8_0,
    pub start: *mut libc::c_void,
    pub end: *mut libc::c_void,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Polygon {
    pub type_0: u8_0,
    pub num: u8_0,
    pub start: *mut libc::c_void,
    pub end: *mut libc::c_void,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct ObjectContext {
    pub spaceStart: *mut libc::c_void,
    pub spaceEnd: *mut libc::c_void,
    pub num: u8_0,
    pub unk_09: u8_0,
    pub mainKeepIndex: u8_0,
    pub subKeepIndex: u8_0,
    pub status: [ObjectStatus; 19],
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct ObjectStatus {
    pub id: s16,
    pub segment: *mut libc::c_void,
    pub dmaRequest: DmaRequest,
    pub loadQueue: OSMesgQueue,
    pub loadMsg: OSMesg,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct AnimationContext {
    pub animationCount: s16,
    pub entries: [AnimationEntry; 50],
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct AnimationEntry {
    pub type_0: u8_0,
    pub data: AnimationEntryData,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub union AnimationEntryData {
    pub load: AnimEntryLoadFrame,
    pub copy: AnimEntryCopyAll,
    pub interp: AnimEntryInterp,
    pub copy1: AnimEntryCopyTrue,
    pub copy0: AnimEntryCopyFalse,
    pub move_0: AnimEntryMoveActor,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct AnimEntryMoveActor {
    pub actor: *mut Actor,
    pub skelAnime: *mut SkelAnime,
    pub unk_08: f32_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct AnimEntryCopyFalse {
    pub queueFlag: u8_0,
    pub vecCount: u8_0,
    pub dst: *mut Vec3s,
    pub src: *mut Vec3s,
    pub copyFlag: *mut u8_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct AnimEntryCopyTrue {
    pub queueFlag: u8_0,
    pub vecCount: u8_0,
    pub dst: *mut Vec3s,
    pub src: *mut Vec3s,
    pub copyFlag: *mut u8_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct AnimEntryInterp {
    pub queueFlag: u8_0,
    pub vecCount: u8_0,
    pub base: *mut Vec3s,
    pub mod_0: *mut Vec3s,
    pub weight: f32_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct AnimEntryCopyAll {
    pub queueFlag: u8_0,
    pub vecCount: u8_0,
    pub dst: *mut Vec3s,
    pub src: *mut Vec3s,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct AnimEntryLoadFrame {
    pub req: DmaRequest,
    pub msgQueue: OSMesgQueue,
    pub msg: OSMesg,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct EnvironmentContext {
    pub unk_00: [libc::c_char; 2],
    pub timeIncrement: u16_0,
    pub sunPos: Vec3f,
    pub skybox1Index: u8_0,
    pub skybox2Index: u8_0,
    pub unk_12: [libc::c_char; 1],
    pub skyboxBlend: u8_0,
    pub unk_14: [libc::c_char; 1],
    pub skyboxDisabled: u8_0,
    pub sunMoonDisabled: u8_0,
    pub unk_17: u8_0,
    pub unk_18: u8_0,
    pub unk_19: u8_0,
    pub unk_1A: u16_0,
    pub unk_1C: [libc::c_char; 2],
    pub indoors: u8_0,
    pub unk_1F: u8_0,
    pub unk_20: u8_0,
    pub unk_21: u8_0,
    pub unk_22: u16_0,
    pub unk_24: u16_0,
    pub unk_26: [libc::c_char; 2],
    pub dirLight1: LightInfo,
    pub dirLight2: LightInfo,
    pub skyboxDmaState: s8,
    pub dmaRequest: DmaRequest,
    pub loadQueue: OSMesgQueue,
    pub loadMsg: OSMesg,
    pub unk_84: f32_0,
    pub unk_88: f32_0,
    pub adjAmbientColor: [s16; 3],
    pub adjLight1Color: [s16; 3],
    pub adjFogColor: [s16; 3],
    pub adjFogNear: s16,
    pub adjFogFar: s16,
    pub unk_A2: [libc::c_char; 6],
    pub windDirection: Vec3s,
    pub windSpeed: f32_0,
    pub numLightSettings: u8_0,
    pub lightSettingsList: *mut EnvLightSettings,
    pub blendIndoorLights: u8_0,
    pub unk_BD: u8_0,
    pub unk_BE: u8_0,
    pub unk_BF: u8_0,
    pub lightSettings: EnvLightSettings,
    pub unk_D6: u16_0,
    pub unk_D8: f32_0,
    pub unk_DC: u8_0,
    pub gloomySkyMode: u8_0,
    pub unk_DE: u8_0,
    pub lightningMode: u8_0,
    pub unk_E0: u8_0,
    pub fillScreen: u8_0,
    pub screenFillColor: [u8_0; 4],
    pub sandstormState: u8_0,
    pub sandstormPrimA: u8_0,
    pub sandstormEnvA: u8_0,
    pub customSkyboxFilter: u8_0,
    pub skyboxFilterColor: [u8_0; 4],
    pub unk_EE: [u8_0; 4],
    pub unk_F2: [u8_0; 4],
    pub unk_F6: [libc::c_char; 6],
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct EnvLightSettings {
    pub ambientColor: [u8_0; 3],
    pub light1Dir: [s8; 3],
    pub light1Color: [u8_0; 3],
    pub light2Dir: [s8; 3],
    pub light2Color: [u8_0; 3],
    pub fogColor: [u8_0; 3],
    pub fogNear: s16,
    pub fogFar: s16,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct GameOverContext {
    pub state: u16_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct PauseContext {
    pub view: View,
    pub iconItemSegment: *mut u8_0,
    pub iconItem24Segment: *mut u8_0,
    pub iconItemAltSegment: *mut u8_0,
    pub iconItemLangSegment: *mut u8_0,
    pub nameSegment: *mut u8_0,
    pub playerSegment: *mut u8_0,
    pub unk_140: [libc::c_char; 4],
    pub itemPageVtx: *mut Vtx,
    pub equipPageVtx: *mut Vtx,
    pub mapPageVtx: *mut Vtx,
    pub questPageVtx: *mut Vtx,
    pub infoPanelVtx: *mut Vtx,
    pub itemVtx: *mut Vtx,
    pub equipVtx: *mut Vtx,
    pub unk_160: [libc::c_char; 4],
    pub questVtx: *mut Vtx,
    pub cursorVtx: *mut Vtx,
    pub saveVtx: *mut Vtx,
    pub unk_170: [libc::c_char; 36],
    pub ocarinaStaff: *mut OcarinaStaff,
    pub unk_198: [libc::c_char; 32],
    pub loadQueue: OSMesgQueue,
    pub loadMsg: OSMesg,
    pub state: u16_0,
    pub debugState: u16_0,
    pub eye: Vec3f,
    pub unk_1E4: u16_0,
    pub mode: u16_0,
    pub pageIndex: u16_0,
    pub unk_1EA: u16_0,
    pub unk_1EC: u16_0,
    pub unk_1F0: f32_0,
    pub unk_1F4: f32_0,
    pub unk_1F8: f32_0,
    pub unk_1FC: f32_0,
    pub unk_200: f32_0,
    pub unk_204: f32_0,
    pub alpha: u16_0,
    pub offsetY: s16,
    pub unk_20C: [libc::c_char; 8],
    pub stickRelX: s16,
    pub stickRelY: s16,
    pub cursorPoint: [s16; 5],
    pub cursorX: [s16; 5],
    pub cursorY: [s16; 5],
    pub dungeonMapSlot: s16,
    pub cursorSpecialPos: s16,
    pub pageSwitchTimer: s16,
    pub namedItem: u16_0,
    pub cursorItem: [u16_0; 4],
    pub cursorSlot: [u16_0; 4],
    pub equipTargetItem: u16_0,
    pub equipTargetSlot: u16_0,
    pub equipTargetCBtn: u16_0,
    pub equipAnimX: s16,
    pub equipAnimY: s16,
    pub equipAnimAlpha: s16,
    pub infoPanelOffsetY: s16,
    pub nameDisplayTimer: u16_0,
    pub nameColorSet: u16_0,
    pub cursorColorSet: s16,
    pub promptChoice: s16,
    pub ocarinaSongIdx: s16,
    pub worldMapPoints: [u8_0; 20],
    pub tradeQuestLocation: u8_0,
    pub playerSkelAnime: SkelAnime,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct OcarinaStaff {
    pub noteIdx: u8_0,
    pub state: u8_0,
    pub pos: u8_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct View {
    pub magic: s32,
    pub gfxCtx: *mut GraphicsContext,
    pub viewport: Viewport,
    pub fovy: f32_0,
    pub zNear: f32_0,
    pub zFar: f32_0,
    pub scale: f32_0,
    pub eye: Vec3f,
    pub lookAt: Vec3f,
    pub up: Vec3f,
    pub vp: Vp,
    pub projection: Mtx,
    pub viewing: Mtx,
    pub projectionPtr: *mut Mtx,
    pub viewingPtr: *mut Mtx,
    pub unk_E8: Vec3f,
    pub unk_F4: Vec3f,
    pub unk_100: f32_0,
    pub unk_104: Vec3f,
    pub unk_110: Vec3f,
    pub normal: u16_0,
    pub flags: s32,
    pub unk_124: s32,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Viewport {
    pub topY: s32,
    pub bottomY: s32,
    pub leftX: s32,
    pub rightX: s32,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct GraphicsContext {
    pub polyOpaBuffer: *mut Gfx,
    pub polyXluBuffer: *mut Gfx,
    pub unk_008: [libc::c_char; 8],
    pub overlayBuffer: *mut Gfx,
    pub unk_014: u32_0,
    pub unk_018: [libc::c_char; 32],
    pub msgBuff: [OSMesg; 8],
    pub schedMsgQ: *mut OSMesgQueue,
    pub queue: OSMesgQueue,
    pub unk_074: [libc::c_char; 4],
    pub task: OSScTask,
    pub unk_0D0: [libc::c_char; 224],
    pub workBuffer: *mut Gfx,
    pub work: TwoHeadGfxArena,
    pub unk_01C4: [libc::c_char; 192],
    pub viMode: *mut OSViMode,
    pub unk_0288: [libc::c_char; 32],
    pub overlay: TwoHeadGfxArena,
    pub polyOpa: TwoHeadGfxArena,
    pub polyXlu: TwoHeadGfxArena,
    pub gfxPoolIdx: u32_0,
    pub curFrameBuffer: *mut u16_0,
    pub unk_2E0: [libc::c_char; 4],
    pub viFeatures: u32_0,
    pub fbIdx: s32,
    pub callback: Option<unsafe extern "C" fn(_: *mut GraphicsContext,
                                              _: *mut libc::c_void) -> ()>,
    pub callbackParam: *mut libc::c_void,
    pub xScale: f32_0,
    pub yScale: f32_0,
    pub unk_2FC: [libc::c_char; 4],
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct TwoHeadGfxArena {
    pub size: u32_0,
    pub bufp: *mut Gfx,
    pub p: *mut Gfx,
    pub d: *mut Gfx,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct OSScTask {
    pub next: *mut OSScTask,
    pub state: u32_0,
    pub flags: u32_0,
    pub framebuffer: *mut CfbInfo,
    pub list: OSTask,
    pub msgQ: *mut OSMesgQueue,
    pub msg: OSMesg,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct CfbInfo {
    pub fb1: *mut u16_0,
    pub swapBuffer: *mut u16_0,
    pub viMode: *mut OSViMode,
    pub features: u32_0,
    pub unk_10: u8_0,
    pub updateRate: s8,
    pub updateRate2: s8,
    pub unk_13: u8_0,
    pub xScale: f32_0,
    pub yScale: f32_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct InterfaceContext {
    pub view: View,
    pub actionVtx: *mut Vtx,
    pub beatingHeartVtx: *mut Vtx,
    pub parameterSegment: *mut u8_0,
    pub doActionSegment: *mut u8_0,
    pub iconItemSegment: *mut u8_0,
    pub mapSegment: *mut u8_0,
    pub mapPalette: [u8_0; 32],
    pub dmaRequest_160: DmaRequest,
    pub dmaRequest_180: DmaRequest,
    pub unk_1A0: [libc::c_char; 32],
    pub loadQueue: OSMesgQueue,
    pub loadMsg: OSMesg,
    pub viewport: Viewport,
    pub unk_1EC: s16,
    pub unk_1EE: u16_0,
    pub unk_1F0: u16_0,
    pub unk_1F4: f32_0,
    pub naviCalling: s16,
    pub unk_1FA: s16,
    pub unk_1FC: s16,
    pub unk_1FE: s16,
    pub unk_200: s16,
    pub beatingHeartPrim: [s16; 3],
    pub beatingHeartEnv: [s16; 3],
    pub heartsPrimR: [s16; 2],
    pub heartsPrimG: [s16; 2],
    pub heartsPrimB: [s16; 2],
    pub heartsEnvR: [s16; 2],
    pub heartsEnvG: [s16; 2],
    pub heartsEnvB: [s16; 2],
    pub unk_226: s16,
    pub unk_228: s16,
    pub unk_22A: s16,
    pub unk_22C: s16,
    pub unk_22E: s16,
    pub unk_230: s16,
    pub counterDigits: [s16; 4],
    pub numHorseBoosts: u8_0,
    pub unk_23C: u16_0,
    pub hbaAmmo: u16_0,
    pub unk_240: u16_0,
    pub unk_242: u16_0,
    pub unk_244: u16_0,
    pub aAlpha: u16_0,
    pub bAlpha: u16_0,
    pub cLeftAlpha: u16_0,
    pub cDownAlpha: u16_0,
    pub cRightAlpha: u16_0,
    pub healthAlpha: u16_0,
    pub magicAlpha: u16_0,
    pub minimapAlpha: u16_0,
    pub startAlpha: s16,
    pub unk_258: s16,
    pub unk_25A: s16,
    pub mapRoomNum: s16,
    pub mapPaletteIndex: s16,
    pub unk_260: u8_0,
    pub unk_261: u8_0,
    pub restrictions: C2RustUnnamed_10,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct C2RustUnnamed_10 {
    pub hGauge: u8_0,
    pub bButton: u8_0,
    pub aButton: u8_0,
    pub bottles: u8_0,
    pub tradeItems: u8_0,
    pub hookshot: u8_0,
    pub ocarina: u8_0,
    pub warpSongs: u8_0,
    pub sunsSong: u8_0,
    pub farores: u8_0,
    pub dinsNayrus: u8_0,
    pub all: u8_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct MessageContext {
    pub view: View,
    pub font: Font,
    pub textboxSegment: *mut libc::c_void,
    pub unk_E2B4: [libc::c_char; 4],
    pub ocarinaStaff: *mut OcarinaStaff,
    pub unk_E2BC: [libc::c_char; 60],
    pub textId: u16_0,
    pub choiceTextId: u16_0,
    pub textBoxProperties: u8_0,
    pub textBoxType: u8_0,
    pub textBoxPos: u8_0,
    pub msgLength: s32,
    pub msgMode: u8_0,
    pub unk_E305: [libc::c_char; 1],
    pub msgBufDecoded: [u8_0; 200],
    pub msgBufPos: u16_0,
    pub unk_E3D0: u16_0,
    pub textDrawPos: u16_0,
    pub decodedTextLen: u16_0,
    pub textUnskippable: u16_0,
    pub textPosX: s16,
    pub textPosY: s16,
    pub textColorR: s16,
    pub textColorG: s16,
    pub textColorB: s16,
    pub textColorAlpha: s16,
    pub textboxEndType: u8_0,
    pub choiceIndex: u8_0,
    pub choiceNum: u8_0,
    pub stateTimer: u8_0,
    pub textDelayTimer: u16_0,
    pub textDelay: u16_0,
    pub lastPlayedSong: u16_0,
    pub ocarinaMode: u16_0,
    pub ocarinaAction: u16_0,
    pub unk_E3F2: u16_0,
    pub unk_E3F4: u16_0,
    pub textboxBackgroundIdx: u16_0,
    pub textboxBackgroundForeColorIdx: u8_0,
    pub textboxBackgroundBackColorIdx: u8_0,
    pub textboxBackgroundYOffsetIdx: u8_0,
    pub textboxBackgroundUnkArg: u8_0,
    pub unk_E3FC: [libc::c_char; 2],
    pub textboxColorRed: s16,
    pub textboxColorGreen: s16,
    pub textboxColorBlue: s16,
    pub textboxColorAlphaTarget: s16,
    pub textboxColorAlphaCurrent: s16,
    pub talkActor: *mut Actor,
    pub disableWarpSongs: s16,
    pub unk_E40E: s16,
    pub lastOcaNoteIdx: u8_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Font {
    pub msgOffset: u32_0,
    pub msgLength: u32_0,
    pub charTexBuf: [u8_0; 15360],
    pub iconBuf: [u8_0; 128],
    pub fontBuf: [u8_0; 40960],
    pub c2rust_unnamed: C2RustUnnamed_11,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub union C2RustUnnamed_11 {
    pub msgBuf: [libc::c_char; 1280],
    pub msgBufWide: [u16_0; 640],
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct SkyboxContext {
    pub unk_00: [libc::c_char; 296],
    pub staticSegments: [*mut libc::c_void; 2],
    pub palettes: *mut [u16_0; 256],
    pub dListBuf: *mut [Gfx; 150],
    pub unk_138: *mut Gfx,
    pub roomVtx: *mut Vtx,
    pub unk_140: s16,
    pub rot: Vec3f,
    pub unk_150: [libc::c_char; 16],
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct SramContext {
    pub readBuff: *mut u8_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct SoundSource {
    pub countdown: u16_0,
    pub originPos: Vec3f,
    pub relativePos: Vec3f,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct CutsceneContext {
    pub unk_00: [libc::c_char; 4],
    pub segment: *mut libc::c_void,
    pub state: u8_0,
    pub unk_0C: f32_0,
    pub frames: u16_0,
    pub unk_12: u16_0,
    pub unk_14: s32,
    pub unk_18: u16_0,
    pub unk_1A: u8_0,
    pub unk_1B: u8_0,
    pub cameraFocus: *mut CutsceneCameraPoint,
    pub cameraPosition: *mut CutsceneCameraPoint,
    pub linkAction: *mut CsCmdActorAction,
    pub npcActions: [*mut CsCmdActorAction; 10],
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct CsCmdActorAction {
    pub action: u16_0,
    pub startFrame: u16_0,
    pub endFrame: u16_0,
    pub c2rust_unnamed: C2RustUnnamed_12,
    pub startPos: Vec3i,
    pub endPos: Vec3i,
    pub normal: Vec3i,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub union C2RustUnnamed_12 {
    pub rot: Vec3s,
    pub urot: Vec3us,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct CutsceneCameraPoint {
    pub continueFlag: s8,
    pub cameraRoll: s8,
    pub nextPointFrame: u16_0,
    pub viewAngle: f32_0,
    pub pos: Vec3s,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct ActorContext {
    pub freezeFlashTimer: u8_0,
    pub unk_01: [libc::c_char; 1],
    pub unk_02: u8_0,
    pub unk_03: u8_0,
    pub unk_04: [libc::c_char; 4],
    pub total: u8_0,
    pub unk_09: [libc::c_char; 3],
    pub actorLists: [ActorListEntry; 12],
    pub targetCtx: TargetContext,
    pub flags: C2RustUnnamed_13,
    pub titleCtx: TitleCardContext,
    pub unk_138: [libc::c_char; 4],
    pub absoluteSpace: *mut libc::c_void,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct TitleCardContext {
    pub texture: *mut libc::c_void,
    pub x: s16,
    pub y: s16,
    pub width: u8_0,
    pub height: u8_0,
    pub durationTimer: u8_0,
    pub delayTimer: u8_0,
    pub alpha: s16,
    pub intensity: s16,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct C2RustUnnamed_13 {
    pub swch: u32_0,
    pub tempSwch: u32_0,
    pub unk0: u32_0,
    pub unk1: u32_0,
    pub chest: u32_0,
    pub clear: u32_0,
    pub tempClear: u32_0,
    pub collect: u32_0,
    pub tempCollect: u32_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct TargetContext {
    pub naviRefPos: Vec3f,
    pub targetCenterPos: Vec3f,
    pub naviInner: Color_RGBAf,
    pub naviOuter: Color_RGBAf,
    pub arrowPointedActor: *mut Actor,
    pub targetedActor: *mut Actor,
    pub unk_40: f32_0,
    pub unk_44: f32_0,
    pub unk_48: s16,
    pub activeCategory: u8_0,
    pub unk_4B: u8_0,
    pub unk_4C: s8,
    pub unk_4D: [libc::c_char; 3],
    pub arr_50: [TargetContextEntry; 3],
    pub unk_8C: *mut Actor,
    pub bgmEnemy: *mut Actor,
    pub unk_94: *mut Actor,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct TargetContextEntry {
    pub pos: Vec3f,
    pub unk_0C: f32_0,
    pub color: Color_RGB8,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct ActorListEntry {
    pub length: s32,
    pub head: *mut Actor,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct CollisionContext {
    pub colHeader: *mut CollisionHeader,
    pub minBounds: Vec3f,
    pub maxBounds: Vec3f,
    pub subdivAmount: Vec3i,
    pub subdivLength: Vec3f,
    pub subdivLengthInv: Vec3f,
    pub lookupTbl: *mut StaticLookup,
    pub polyNodes: SSNodeList,
    pub dyna: DynaCollisionContext,
    pub memSize: u32_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct DynaCollisionContext {
    pub bitFlag: u8_0,
    pub bgActors: [BgActor; 50],
    pub bgActorFlags: [u16_0; 50],
    pub polyList: *mut CollisionPoly,
    pub vtxList: *mut Vec3s,
    pub polyNodes: DynaSSNodeList,
    pub polyNodesMax: s32,
    pub polyListMax: s32,
    pub vtxListMax: s32,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct DynaSSNodeList {
    pub tbl: *mut SSNode,
    pub count: s32,
    pub max: s32,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct SSNode {
    pub polyId: s16,
    pub next: u16_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct BgActor {
    pub actor: *mut Actor,
    pub colHeader: *mut CollisionHeader,
    pub dynaLookup: DynaLookup,
    pub vtxStartIndex: u16_0,
    pub prevTransform: ScaleRotPos,
    pub curTransform: ScaleRotPos,
    pub boundingSphere: Sphere16,
    pub minY: f32_0,
    pub maxY: f32_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct ScaleRotPos {
    pub scale: Vec3f,
    pub rot: Vec3s,
    pub pos: Vec3f,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct DynaLookup {
    pub polyStartIndex: u16_0,
    pub ceiling: SSList,
    pub wall: SSList,
    pub floor: SSList,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct SSList {
    pub head: u16_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct CollisionHeader {
    pub minBounds: Vec3s,
    pub maxBounds: Vec3s,
    pub numVertices: u16_0,
    pub vtxList: *mut Vec3s,
    pub numPolygons: u16_0,
    pub polyList: *mut CollisionPoly,
    pub surfaceTypeList: *mut SurfaceType,
    pub cameraDataList: *mut CamData,
    pub numWaterBoxes: u16_0,
    pub waterBoxes: *mut WaterBox,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct WaterBox {
    pub xMin: s16,
    pub ySurface: s16,
    pub zMin: s16,
    pub xLength: s16,
    pub zLength: s16,
    pub properties: u32_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct CamData {
    pub cameraSType: u16_0,
    pub numCameras: s16,
    pub camPosData: *mut Vec3s,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct SurfaceType {
    pub data: [u32_0; 2],
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct SSNodeList {
    pub max: u16_0,
    pub count: u16_0,
    pub tbl: *mut SSNode,
    pub polyCheckTbl: *mut u8_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct StaticLookup {
    pub floor: SSList,
    pub wall: SSList,
    pub ceiling: SSList,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct FrameAdvanceContext {
    pub enabled: s32,
    pub timer: s32,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct SequenceContext {
    pub seqId: u8_0,
    pub natureAmbienceId: u8_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Camera {
    pub paramData: [libc::c_char; 80],
    pub at: Vec3f,
    pub eye: Vec3f,
    pub up: Vec3f,
    pub eyeNext: Vec3f,
    pub skyboxOffset: Vec3f,
    pub globalCtx: *mut GlobalContext,
    pub player: *mut Player,
    pub playerPosRot: PosRot,
    pub target: *mut Actor,
    pub targetPosRot: PosRot,
    pub rUpdateRateInv: f32_0,
    pub pitchUpdateRateInv: f32_0,
    pub yawUpdateRateInv: f32_0,
    pub xzOffsetUpdateRate: f32_0,
    pub yOffsetUpdateRate: f32_0,
    pub fovUpdateRate: f32_0,
    pub xzSpeed: f32_0,
    pub dist: f32_0,
    pub speedRatio: f32_0,
    pub posOffset: Vec3f,
    pub playerPosDelta: Vec3f,
    pub fov: f32_0,
    pub atLERPStepScale: f32_0,
    pub playerGroundY: f32_0,
    pub floorNorm: Vec3f,
    pub waterYPos: f32_0,
    pub waterPrevCamIdx: s32,
    pub waterPrevCamSetting: s32,
    pub waterQuakeId: s32,
    pub data0: *mut libc::c_void,
    pub data1: *mut libc::c_void,
    pub data2: s16,
    pub data3: s16,
    pub uid: s16,
    pub unk_132: [libc::c_char; 2],
    pub inputDir: Vec3s,
    pub camDir: Vec3s,
    pub status: s16,
    pub setting: s16,
    pub mode: s16,
    pub bgCheckId: s16,
    pub camDataIdx: s16,
    pub unk_14A: s16,
    pub unk_14C: s16,
    pub childCamIdx: s16,
    pub unk_150: s16,
    pub unk_152: s16,
    pub prevSetting: s16,
    pub nextCamDataIdx: s16,
    pub nextBGCheckId: s16,
    pub roll: s16,
    pub paramFlags: s16,
    pub animState: s16,
    pub timer: s16,
    pub parentCamIdx: s16,
    pub thisIdx: s16,
    pub prevCamDataIdx: s16,
    pub csId: s16,
    pub unk_16A: s16,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct GameState {
    pub gfxCtx: *mut GraphicsContext,
    pub main: GameStateFunc,
    pub destroy: GameStateFunc,
    pub init: GameStateFunc,
    pub size: u32_0,
    pub input: [Input; 4],
    pub tha: TwoHeadArena,
    pub alloc: GameAlloc,
    pub running: u32_0,
    pub frames: u32_0,
    pub unk_A0: u32_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct GameAlloc {
    pub base: GameAllocEntry,
    pub head: *mut GameAllocEntry,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct GameAllocEntry {
    pub next: *mut GameAllocEntry,
    pub prev: *mut GameAllocEntry,
    pub size: u32_0,
    pub unk_0C: u32_0,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct TwoHeadArena {
    pub size: u32_0,
    pub bufp: *mut libc::c_void,
    pub head: *mut libc::c_void,
    pub tail: *mut libc::c_void,
}
pub type GameStateFunc
    =
    Option<unsafe extern "C" fn(_: *mut GameState) -> ()>;
pub type C2RustUnnamed_14 = libc::c_uint;
pub const ACTORCAT_CHEST: C2RustUnnamed_14 = 11;
pub const ACTORCAT_DOOR: C2RustUnnamed_14 = 10;
pub const ACTORCAT_BOSS: C2RustUnnamed_14 = 9;
pub const ACTORCAT_MISC: C2RustUnnamed_14 = 8;
pub const ACTORCAT_ITEMACTION: C2RustUnnamed_14 = 7;
pub const ACTORCAT_PROP: C2RustUnnamed_14 = 6;
pub const ACTORCAT_ENEMY: C2RustUnnamed_14 = 5;
pub const ACTORCAT_NPC: C2RustUnnamed_14 = 4;
pub const ACTORCAT_EXPLOSIVE: C2RustUnnamed_14 = 3;
pub const ACTORCAT_PLAYER: C2RustUnnamed_14 = 2;
pub const ACTORCAT_BG: C2RustUnnamed_14 = 1;
pub const ACTORCAT_SWITCH: C2RustUnnamed_14 = 0;
pub type C2RustUnnamed_15 = libc::c_uint;
pub const SCENE_ID_MAX: C2RustUnnamed_15 = 110;
pub const SCENE_TESTROOM: C2RustUnnamed_15 = 109;
pub const SCENE_SASATEST: C2RustUnnamed_15 = 108;
pub const SCENE_HAIRAL_NIWA2: C2RustUnnamed_15 = 107;
pub const SCENE_SUTARU: C2RustUnnamed_15 = 106;
pub const SCENE_SYOTES2: C2RustUnnamed_15 = 105;
pub const SCENE_SYOTES: C2RustUnnamed_15 = 104;
pub const SCENE_DEPTH_TEST: C2RustUnnamed_15 = 103;
pub const SCENE_BESITU: C2RustUnnamed_15 = 102;
pub const SCENE_TEST01: C2RustUnnamed_15 = 101;
pub const SCENE_GANON_TOU: C2RustUnnamed_15 = 100;
pub const SCENE_SPOT20: C2RustUnnamed_15 = 99;
pub const SCENE_SPOT18: C2RustUnnamed_15 = 98;
pub const SCENE_SPOT17: C2RustUnnamed_15 = 97;
pub const SCENE_SPOT16: C2RustUnnamed_15 = 96;
pub const SCENE_SPOT15: C2RustUnnamed_15 = 95;
pub const SCENE_SPOT13: C2RustUnnamed_15 = 94;
pub const SCENE_SPOT12: C2RustUnnamed_15 = 93;
pub const SCENE_SPOT11: C2RustUnnamed_15 = 92;
pub const SCENE_SPOT10: C2RustUnnamed_15 = 91;
pub const SCENE_SPOT09: C2RustUnnamed_15 = 90;
pub const SCENE_SPOT08: C2RustUnnamed_15 = 89;
pub const SCENE_SPOT07: C2RustUnnamed_15 = 88;
pub const SCENE_SPOT06: C2RustUnnamed_15 = 87;
pub const SCENE_SPOT05: C2RustUnnamed_15 = 86;
pub const SCENE_SPOT04: C2RustUnnamed_15 = 85;
pub const SCENE_SPOT03: C2RustUnnamed_15 = 84;
pub const SCENE_SPOT02: C2RustUnnamed_15 = 83;
pub const SCENE_SPOT01: C2RustUnnamed_15 = 82;
pub const SCENE_SPOT00: C2RustUnnamed_15 = 81;
pub const SCENE_KINSUTA: C2RustUnnamed_15 = 80;
pub const SCENE_GANON_DEMO: C2RustUnnamed_15 = 79;
pub const SCENE_MAHOUYA: C2RustUnnamed_15 = 78;
pub const SCENE_MIHARIGOYA: C2RustUnnamed_15 = 77;
pub const SCENE_SOUKO: C2RustUnnamed_15 = 76;
pub const SCENE_BOWLING: C2RustUnnamed_15 = 75;
pub const SCENE_NAKANIWA: C2RustUnnamed_15 = 74;
pub const SCENE_TURIBORI: C2RustUnnamed_15 = 73;
pub const SCENE_HAKASITARELAY: C2RustUnnamed_15 = 72;
pub const SCENE_HIRAL_DEMO: C2RustUnnamed_15 = 71;
pub const SCENE_HAIRAL_NIWA_N: C2RustUnnamed_15 = 70;
pub const SCENE_HAIRAL_NIWA: C2RustUnnamed_15 = 69;
pub const SCENE_KENJYANOMA: C2RustUnnamed_15 = 68;
pub const SCENE_TOKINOMA: C2RustUnnamed_15 = 67;
pub const SCENE_SYATEKIJYOU: C2RustUnnamed_15 = 66;
pub const SCENE_HAKAANA_OUKE: C2RustUnnamed_15 = 65;
pub const SCENE_HAKAANA2: C2RustUnnamed_15 = 64;
pub const SCENE_HAKAANA: C2RustUnnamed_15 = 63;
pub const SCENE_KAKUSIANA: C2RustUnnamed_15 = 62;
pub const SCENE_YOUSEI_IZUMI_YOKO: C2RustUnnamed_15 = 61;
pub const SCENE_YOUSEI_IZUMI_TATE: C2RustUnnamed_15 = 60;
pub const SCENE_DAIYOUSEI_IZUMI: C2RustUnnamed_15 = 59;
pub const SCENE_HUT: C2RustUnnamed_15 = 58;
pub const SCENE_TENT: C2RustUnnamed_15 = 57;
pub const SCENE_HYLIA_LABO: C2RustUnnamed_15 = 56;
pub const SCENE_LABO: C2RustUnnamed_15 = 55;
pub const SCENE_MALON_STABLE: C2RustUnnamed_15 = 54;
pub const SCENE_IMPA: C2RustUnnamed_15 = 53;
pub const SCENE_LINK_HOME: C2RustUnnamed_15 = 52;
pub const SCENE_FACE_SHOP: C2RustUnnamed_15 = 51;
pub const SCENE_NIGHT_SHOP: C2RustUnnamed_15 = 50;
pub const SCENE_ALLEY_SHOP: C2RustUnnamed_15 = 49;
pub const SCENE_DRAG: C2RustUnnamed_15 = 48;
pub const SCENE_ZOORA: C2RustUnnamed_15 = 47;
pub const SCENE_GOLON: C2RustUnnamed_15 = 46;
pub const SCENE_KOKIRI_SHOP: C2RustUnnamed_15 = 45;
pub const SCENE_SHOP1: C2RustUnnamed_15 = 44;
pub const SCENE_KAKARIKO3: C2RustUnnamed_15 = 43;
pub const SCENE_KAKARIKO: C2RustUnnamed_15 = 42;
pub const SCENE_KOKIRI_HOME5: C2RustUnnamed_15 = 41;
pub const SCENE_KOKIRI_HOME4: C2RustUnnamed_15 = 40;
pub const SCENE_KOKIRI_HOME3: C2RustUnnamed_15 = 39;
pub const SCENE_KOKIRI_HOME: C2RustUnnamed_15 = 38;
pub const SCENE_SHRINE_R: C2RustUnnamed_15 = 37;
pub const SCENE_SHRINE_N: C2RustUnnamed_15 = 36;
pub const SCENE_SHRINE: C2RustUnnamed_15 = 35;
pub const SCENE_MARKET_RUINS: C2RustUnnamed_15 = 34;
pub const SCENE_MARKET_NIGHT: C2RustUnnamed_15 = 33;
pub const SCENE_MARKET_DAY: C2RustUnnamed_15 = 32;
pub const SCENE_MARKET_ALLEY_N: C2RustUnnamed_15 = 31;
pub const SCENE_MARKET_ALLEY: C2RustUnnamed_15 = 30;
pub const SCENE_ENRUI: C2RustUnnamed_15 = 29;
pub const SCENE_ENTRA_N: C2RustUnnamed_15 = 28;
pub const SCENE_ENTRA: C2RustUnnamed_15 = 27;
pub const SCENE_GANON_FINAL: C2RustUnnamed_15 = 26;
pub const SCENE_GANON_BOSS: C2RustUnnamed_15 = 25;
pub const SCENE_HAKADAN_BS: C2RustUnnamed_15 = 24;
pub const SCENE_JYASINBOSS: C2RustUnnamed_15 = 23;
pub const SCENE_MIZUSIN_BS: C2RustUnnamed_15 = 22;
pub const SCENE_FIRE_BS: C2RustUnnamed_15 = 21;
pub const SCENE_MORIBOSSROOM: C2RustUnnamed_15 = 20;
pub const SCENE_BDAN_BOSS: C2RustUnnamed_15 = 19;
pub const SCENE_DDAN_BOSS: C2RustUnnamed_15 = 18;
pub const SCENE_YDAN_BOSS: C2RustUnnamed_15 = 17;
pub const SCENE_TAKARAYA: C2RustUnnamed_15 = 16;
pub const SCENE_GANONTIKA_SONOGO: C2RustUnnamed_15 = 15;
pub const SCENE_GANON_SONOGO: C2RustUnnamed_15 = 14;
pub const SCENE_GANONTIKA: C2RustUnnamed_15 = 13;
pub const SCENE_GERUDOWAY: C2RustUnnamed_15 = 12;
pub const SCENE_MEN: C2RustUnnamed_15 = 11;
pub const SCENE_GANON: C2RustUnnamed_15 = 10;
pub const SCENE_ICE_DOUKUTO: C2RustUnnamed_15 = 9;
pub const SCENE_HAKADANCH: C2RustUnnamed_15 = 8;
pub const SCENE_HAKADAN: C2RustUnnamed_15 = 7;
pub const SCENE_JYASINZOU: C2RustUnnamed_15 = 6;
pub const SCENE_MIZUSIN: C2RustUnnamed_15 = 5;
pub const SCENE_HIDAN: C2RustUnnamed_15 = 4;
pub const SCENE_BMORI1: C2RustUnnamed_15 = 3;
pub const SCENE_BDAN: C2RustUnnamed_15 = 2;
pub const SCENE_DDAN: C2RustUnnamed_15 = 1;
pub const SCENE_YDAN: C2RustUnnamed_15 = 0;
pub type C2RustUnnamed_16 = libc::c_uint;
pub const ITEM_NONE: C2RustUnnamed_16 = 255;
pub const ITEM_NONE_FE: C2RustUnnamed_16 = 254;
pub const ITEM_LAST_USED: C2RustUnnamed_16 = 252;
pub const ITEM_NUT_UPGRADE_40: C2RustUnnamed_16 = 155;
pub const ITEM_NUT_UPGRADE_30: C2RustUnnamed_16 = 154;
pub const ITEM_STICK_UPGRADE_30: C2RustUnnamed_16 = 153;
pub const ITEM_STICK_UPGRADE_20: C2RustUnnamed_16 = 152;
pub const ITEM_BOMBCHUS_20: C2RustUnnamed_16 = 151;
pub const ITEM_BOMBCHUS_5: C2RustUnnamed_16 = 150;
pub const ITEM_SEEDS_30: C2RustUnnamed_16 = 149;
pub const ITEM_ARROWS_LARGE: C2RustUnnamed_16 = 148;
pub const ITEM_ARROWS_MEDIUM: C2RustUnnamed_16 = 147;
pub const ITEM_ARROWS_SMALL: C2RustUnnamed_16 = 146;
pub const ITEM_BOMBS_30: C2RustUnnamed_16 = 145;
pub const ITEM_BOMBS_20: C2RustUnnamed_16 = 144;
pub const ITEM_BOMBS_10: C2RustUnnamed_16 = 143;
pub const ITEM_BOMBS_5: C2RustUnnamed_16 = 142;
pub const ITEM_NUTS_10: C2RustUnnamed_16 = 141;
pub const ITEM_NUTS_5: C2RustUnnamed_16 = 140;
pub const ITEM_STICKS_10: C2RustUnnamed_16 = 139;
pub const ITEM_STICKS_5: C2RustUnnamed_16 = 138;
pub const ITEM_INVALID_8: C2RustUnnamed_16 = 137;
pub const ITEM_RUPEE_GOLD: C2RustUnnamed_16 = 136;
pub const ITEM_RUPEE_PURPLE: C2RustUnnamed_16 = 135;
pub const ITEM_RUPEE_RED: C2RustUnnamed_16 = 134;
pub const ITEM_RUPEE_BLUE: C2RustUnnamed_16 = 133;
pub const ITEM_RUPEE_GREEN: C2RustUnnamed_16 = 132;
pub const ITEM_HEART: C2RustUnnamed_16 = 131;
pub const ITEM_MILK: C2RustUnnamed_16 = 130;
pub const ITEM_INVALID_7: C2RustUnnamed_16 = 129;
pub const ITEM_INVALID_6: C2RustUnnamed_16 = 128;
pub const ITEM_INVALID_5: C2RustUnnamed_16 = 127;
pub const ITEM_INVALID_4: C2RustUnnamed_16 = 126;
pub const ITEM_INVALID_3: C2RustUnnamed_16 = 125;
pub const ITEM_INVALID_2: C2RustUnnamed_16 = 124;
pub const ITEM_INVALID_1: C2RustUnnamed_16 = 123;
pub const ITEM_HEART_PIECE_2: C2RustUnnamed_16 = 122;
pub const ITEM_MAGIC_LARGE: C2RustUnnamed_16 = 121;
pub const ITEM_MAGIC_SMALL: C2RustUnnamed_16 = 120;
pub const ITEM_KEY_SMALL: C2RustUnnamed_16 = 119;
pub const ITEM_DUNGEON_MAP: C2RustUnnamed_16 = 118;
pub const ITEM_COMPASS: C2RustUnnamed_16 = 117;
pub const ITEM_KEY_BOSS: C2RustUnnamed_16 = 116;
pub const ITEM_HEART_PIECE: C2RustUnnamed_16 = 115;
pub const ITEM_HEART_CONTAINER: C2RustUnnamed_16 = 114;
pub const ITEM_SKULL_TOKEN: C2RustUnnamed_16 = 113;
pub const ITEM_GERUDO_CARD: C2RustUnnamed_16 = 112;
pub const ITEM_STONE_OF_AGONY: C2RustUnnamed_16 = 111;
pub const ITEM_ZORA_SAPPHIRE: C2RustUnnamed_16 = 110;
pub const ITEM_GORON_RUBY: C2RustUnnamed_16 = 109;
pub const ITEM_KOKIRI_EMERALD: C2RustUnnamed_16 = 108;
pub const ITEM_MEDALLION_LIGHT: C2RustUnnamed_16 = 107;
pub const ITEM_MEDALLION_SHADOW: C2RustUnnamed_16 = 106;
pub const ITEM_MEDALLION_SPIRIT: C2RustUnnamed_16 = 105;
pub const ITEM_MEDALLION_WATER: C2RustUnnamed_16 = 104;
pub const ITEM_MEDALLION_FIRE: C2RustUnnamed_16 = 103;
pub const ITEM_MEDALLION_FOREST: C2RustUnnamed_16 = 102;
pub const ITEM_SONG_STORMS: C2RustUnnamed_16 = 101;
pub const ITEM_SONG_TIME: C2RustUnnamed_16 = 100;
pub const ITEM_SONG_SUN: C2RustUnnamed_16 = 99;
pub const ITEM_SONG_SARIA: C2RustUnnamed_16 = 98;
pub const ITEM_SONG_EPONA: C2RustUnnamed_16 = 97;
pub const ITEM_SONG_LULLABY: C2RustUnnamed_16 = 96;
pub const ITEM_SONG_PRELUDE: C2RustUnnamed_16 = 95;
pub const ITEM_SONG_NOCTURNE: C2RustUnnamed_16 = 94;
pub const ITEM_SONG_REQUIEM: C2RustUnnamed_16 = 93;
pub const ITEM_SONG_SERENADE: C2RustUnnamed_16 = 92;
pub const ITEM_SONG_BOLERO: C2RustUnnamed_16 = 91;
pub const ITEM_SONG_MINUET: C2RustUnnamed_16 = 90;
pub const ITEM_FISHING_POLE: C2RustUnnamed_16 = 89;
pub const ITEM_SEEDS: C2RustUnnamed_16 = 88;
pub const ITEM_WALLET_GIANT: C2RustUnnamed_16 = 87;
pub const ITEM_WALLET_ADULT: C2RustUnnamed_16 = 86;
pub const ITEM_SWORD_KNIFE: C2RustUnnamed_16 = 85;
pub const ITEM_SCALE_GOLDEN: C2RustUnnamed_16 = 84;
pub const ITEM_SCALE_SILVER: C2RustUnnamed_16 = 83;
pub const ITEM_GAUNTLETS_GOLD: C2RustUnnamed_16 = 82;
pub const ITEM_GAUNTLETS_SILVER: C2RustUnnamed_16 = 81;
pub const ITEM_BRACELET: C2RustUnnamed_16 = 80;
pub const ITEM_BOMB_BAG_40: C2RustUnnamed_16 = 79;
pub const ITEM_BOMB_BAG_30: C2RustUnnamed_16 = 78;
pub const ITEM_BOMB_BAG_20: C2RustUnnamed_16 = 77;
pub const ITEM_QUIVER_50: C2RustUnnamed_16 = 76;
pub const ITEM_QUIVER_40: C2RustUnnamed_16 = 75;
pub const ITEM_QUIVER_30: C2RustUnnamed_16 = 74;
pub const ITEM_BULLET_BAG_50: C2RustUnnamed_16 = 73;
pub const ITEM_BULLET_BAG_40: C2RustUnnamed_16 = 72;
pub const ITEM_BULLET_BAG_30: C2RustUnnamed_16 = 71;
pub const ITEM_BOOTS_HOVER: C2RustUnnamed_16 = 70;
pub const ITEM_BOOTS_IRON: C2RustUnnamed_16 = 69;
pub const ITEM_BOOTS_KOKIRI: C2RustUnnamed_16 = 68;
pub const ITEM_TUNIC_ZORA: C2RustUnnamed_16 = 67;
pub const ITEM_TUNIC_GORON: C2RustUnnamed_16 = 66;
pub const ITEM_TUNIC_KOKIRI: C2RustUnnamed_16 = 65;
pub const ITEM_SHIELD_MIRROR: C2RustUnnamed_16 = 64;
pub const ITEM_SHIELD_HYLIAN: C2RustUnnamed_16 = 63;
pub const ITEM_SHIELD_DEKU: C2RustUnnamed_16 = 62;
pub const ITEM_SWORD_BGS: C2RustUnnamed_16 = 61;
pub const ITEM_SWORD_MASTER: C2RustUnnamed_16 = 60;
pub const ITEM_SWORD_KOKIRI: C2RustUnnamed_16 = 59;
pub const ITEM_BOW_ARROW_LIGHT: C2RustUnnamed_16 = 58;
pub const ITEM_BOW_ARROW_ICE: C2RustUnnamed_16 = 57;
pub const ITEM_BOW_ARROW_FIRE: C2RustUnnamed_16 = 56;
pub const ITEM_CLAIM_CHECK: C2RustUnnamed_16 = 55;
pub const ITEM_EYEDROPS: C2RustUnnamed_16 = 54;
pub const ITEM_FROG: C2RustUnnamed_16 = 53;
pub const ITEM_PRESCRIPTION: C2RustUnnamed_16 = 52;
pub const ITEM_SWORD_BROKEN: C2RustUnnamed_16 = 51;
pub const ITEM_SAW: C2RustUnnamed_16 = 50;
pub const ITEM_ODD_POTION: C2RustUnnamed_16 = 49;
pub const ITEM_ODD_MUSHROOM: C2RustUnnamed_16 = 48;
pub const ITEM_COJIRO: C2RustUnnamed_16 = 47;
pub const ITEM_POCKET_CUCCO: C2RustUnnamed_16 = 46;
pub const ITEM_POCKET_EGG: C2RustUnnamed_16 = 45;
pub const ITEM_SOLD_OUT: C2RustUnnamed_16 = 44;
pub const ITEM_MASK_TRUTH: C2RustUnnamed_16 = 43;
pub const ITEM_MASK_GERUDO: C2RustUnnamed_16 = 42;
pub const ITEM_MASK_ZORA: C2RustUnnamed_16 = 41;
pub const ITEM_MASK_GORON: C2RustUnnamed_16 = 40;
pub const ITEM_MASK_BUNNY: C2RustUnnamed_16 = 39;
pub const ITEM_MASK_SPOOKY: C2RustUnnamed_16 = 38;
pub const ITEM_MASK_SKULL: C2RustUnnamed_16 = 37;
pub const ITEM_MASK_KEATON: C2RustUnnamed_16 = 36;
pub const ITEM_LETTER_ZELDA: C2RustUnnamed_16 = 35;
pub const ITEM_CHICKEN: C2RustUnnamed_16 = 34;
pub const ITEM_WEIRD_EGG: C2RustUnnamed_16 = 33;
pub const ITEM_POE: C2RustUnnamed_16 = 32;
pub const ITEM_MILK_HALF: C2RustUnnamed_16 = 31;
pub const ITEM_BIG_POE: C2RustUnnamed_16 = 30;
pub const ITEM_BUG: C2RustUnnamed_16 = 29;
pub const ITEM_BLUE_FIRE: C2RustUnnamed_16 = 28;
pub const ITEM_LETTER_RUTO: C2RustUnnamed_16 = 27;
pub const ITEM_MILK_BOTTLE: C2RustUnnamed_16 = 26;
pub const ITEM_FISH: C2RustUnnamed_16 = 25;
pub const ITEM_FAIRY: C2RustUnnamed_16 = 24;
pub const ITEM_POTION_BLUE: C2RustUnnamed_16 = 23;
pub const ITEM_POTION_GREEN: C2RustUnnamed_16 = 22;
pub const ITEM_POTION_RED: C2RustUnnamed_16 = 21;
pub const ITEM_BOTTLE: C2RustUnnamed_16 = 20;
pub const ITEM_NAYRUS_LOVE: C2RustUnnamed_16 = 19;
pub const ITEM_ARROW_LIGHT: C2RustUnnamed_16 = 18;
pub const ITEM_HAMMER: C2RustUnnamed_16 = 17;
pub const ITEM_BEAN: C2RustUnnamed_16 = 16;
pub const ITEM_LENS: C2RustUnnamed_16 = 15;
pub const ITEM_BOOMERANG: C2RustUnnamed_16 = 14;
pub const ITEM_FARORES_WIND: C2RustUnnamed_16 = 13;
pub const ITEM_ARROW_ICE: C2RustUnnamed_16 = 12;
pub const ITEM_LONGSHOT: C2RustUnnamed_16 = 11;
pub const ITEM_HOOKSHOT: C2RustUnnamed_16 = 10;
pub const ITEM_BOMBCHU: C2RustUnnamed_16 = 9;
pub const ITEM_OCARINA_TIME: C2RustUnnamed_16 = 8;
pub const ITEM_OCARINA_FAIRY: C2RustUnnamed_16 = 7;
pub const ITEM_SLINGSHOT: C2RustUnnamed_16 = 6;
pub const ITEM_DINS_FIRE: C2RustUnnamed_16 = 5;
pub const ITEM_ARROW_FIRE: C2RustUnnamed_16 = 4;
pub const ITEM_BOW: C2RustUnnamed_16 = 3;
pub const ITEM_BOMB: C2RustUnnamed_16 = 2;
pub const ITEM_NUT: C2RustUnnamed_16 = 1;
pub const ITEM_STICK: C2RustUnnamed_16 = 0;
#[derive(Copy, Clone)]
#[repr(C)]
pub struct GameInfo {
    pub regPage: s32,
    pub regGroup: s32,
    pub regCur: s32,
    pub dpadLast: s32,
    pub repeat: s32,
    pub data: [s16; 2784],
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct EntranceInfo {
    pub scene: s8,
    pub spawn: s8,
    pub field: u16_0,
}
pub type C2RustUnnamed_17 = libc::c_uint;
pub const MTXMODE_APPLY: C2RustUnnamed_17 = 1;
pub const MTXMODE_NEW: C2RustUnnamed_17 = 0;
pub const BGDODOAGO_EYE_RIGHT: C2RustUnnamed_18 = 1;
pub const BGDODOAGO_EYE_LEFT: C2RustUnnamed_18 = 0;
pub type C2RustUnnamed_18 = libc::c_uint;
#[no_mangle]
pub static mut gEntranceTable: [EntranceInfo; 1556] =
    [{
         let mut init =
             EntranceInfo{scene: 0 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xb as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xb as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xb as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xb as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x14 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x14 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x14 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x14 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x6e as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x6e as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x6e as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x6e as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x6c as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x6c as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x6c as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x6c as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x68 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x68 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x68 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x68 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x69 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x69 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x69 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x69 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x6d as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x6d as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x6d as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x6d as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x2 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x2 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x2 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x2 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x2 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x41 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x26 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x41 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x26 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x41 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x26 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x41 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x26 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x41 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x41 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1b as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1c as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1d as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1d as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x7 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x7 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x7 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x7 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x42 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x42 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x42 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x42 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3e as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3e as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3e as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3e as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x38 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x38 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x38 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x38 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x6a as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x6a as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x6a as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x6a as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x40 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x26 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x40 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x26 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x40 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x26 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x40 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x26 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x4c as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x4c as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x4c as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x4c as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x43 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x43 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x43 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x43 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x43 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x43 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x43 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x43 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x43 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x43 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x43 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x43 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0xb as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0xb as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x43 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x43 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x43 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x43 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x10 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x10 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x10 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x10 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1e as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1f as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1e as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1f as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x44 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x7 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x7 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x44 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x7 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x7 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x44 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x7 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x7 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x44 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x7 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x7 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x44 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0xd as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x44 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0xd as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x44 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x4e as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x4e as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x4e as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x4e as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x6b as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x22 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x22 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x6b as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x22 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x22 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x6b as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x22 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x22 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x6b as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x22 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x22 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x45 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x22 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x46 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x22 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x45 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x22 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x46 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x22 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x4d as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x4d as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x4d as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x4d as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x6 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x6 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x6 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x6 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x6 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x6 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x9 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x9 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x9 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x9 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x9 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x17 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x17 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x17 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x17 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x17 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x17 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x17 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x65 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x65 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x65 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x65 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x8 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x8 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x8 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x8 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x27 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x27 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x27 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x27 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x47 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x47 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x47 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x47 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x47 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0xa as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0xa as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x47 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0xa as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x47 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0xa as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0xa as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x47 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0xb as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0xb as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x47 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x47 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x47 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x47 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x47 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1e as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1f as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1e as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1f as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x20 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x21 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x22 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x22 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x20 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x8 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x8 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x67 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x2c as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x2c as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x2c as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x2c as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x34 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x34 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x34 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x34 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x34 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x34 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x10 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x10 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x2d as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x2d as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x2d as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x2d as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x26 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x26 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x26 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x26 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x21 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x21 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x21 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x21 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x23 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x23 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x23 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x23 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x29 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x29 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x26 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x26 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x21 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x21 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x21 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x21 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x21 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x21 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x53 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x53 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x53 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x53 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x53 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x53 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x54 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x54 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x54 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x54 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x55 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x55 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x55 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x55 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x55 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0xa as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0xa as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x55 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0xa as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0xa as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x55 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0xa as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0xa as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x55 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0xd as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0xa as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x55 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0xa as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0xa as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x55 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0xa as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0xa as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x55 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x55 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x55 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x55 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x56 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x56 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x56 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x56 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x56 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x56 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0 as libc::c_int & 0x7f as libc::c_int) <<
                                       7 as libc::c_int |
                                   0 as libc::c_int & 0x7f as libc::c_int) as
                                  u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x57 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x57 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x57 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x57 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x57 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x57 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x58 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x58 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x58 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x58 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x58 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x58 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x59 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x59 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x59 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x59 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x59 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0xd as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0 as libc::c_int & 0x7f as libc::c_int) as
                                  u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x59 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x59 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x59 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x59 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5a as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5a as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5a as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5a as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5a as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0xc as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0xa as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5a as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0xa as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0xa as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5a as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5b as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5b as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5b as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5b as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5b as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5c as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0xf as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0xf as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5c as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0xf as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0xf as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5c as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0xf as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0xf as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5c as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0xf as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0xf as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5c as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5c as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0xf as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0xf as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x21 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x21 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5e as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0xe as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0xe as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5e as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0xe as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0xe as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5e as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0xe as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0xe as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5e as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0xe as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0xe as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xe as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xe as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xe as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xe as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5f as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5f as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x64 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x64 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x64 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x60 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x60 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x60 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x60 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x60 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0xa as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0xa as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x60 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x60 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x60 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x60 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x60 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x61 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x61 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x61 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x61 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x61 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x61 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x62 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x62 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x62 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x62 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x62 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x62 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x58 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0 as libc::c_int & 0x7f as libc::c_int) <<
                                       7 as libc::c_int |
                                   0 as libc::c_int & 0x7f as libc::c_int) as
                                  u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x58 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0 as libc::c_int & 0x7f as libc::c_int) <<
                                       7 as libc::c_int |
                                   0 as libc::c_int & 0x7f as libc::c_int) as
                                  u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x58 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0 as libc::c_int & 0x7f as libc::c_int) <<
                                       7 as libc::c_int |
                                   0 as libc::c_int & 0x7f as libc::c_int) as
                                  u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x58 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0 as libc::c_int & 0x7f as libc::c_int) <<
                                       7 as libc::c_int |
                                   0 as libc::c_int & 0x7f as libc::c_int) as
                                  u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x63 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x63 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x63 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x63 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x63 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x20 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x63 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2a as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2a as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x63 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x63 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x63 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x63 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x63 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x63 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x63 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x63 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x4 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x4 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x4 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x4 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x42 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x42 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x42 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x42 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x23 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x24 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x25 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x25 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x4 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x4 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x4 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x4 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xe as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xe as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xe as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xe as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x54 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x54 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x54 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x54 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x54 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x54 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x54 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x54 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x58 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x58 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x58 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x58 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5a as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5a as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5a as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5a as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5b as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5b as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5b as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5b as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5b as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5b as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5b as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5b as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5b as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5b as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5b as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5b as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xe as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xe as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xe as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xe as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x60 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x60 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x60 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x60 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x60 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x60 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x60 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x60 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x62 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x62 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x62 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x62 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x38 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x38 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x38 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x38 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1a as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1a as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1a as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1a as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x20 as libc::c_int as s8,
                          spawn: 0x8 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x21 as libc::c_int as s8,
                          spawn: 0x8 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x22 as libc::c_int as s8,
                          spawn: 0x8 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x22 as libc::c_int as s8,
                          spawn: 0x8 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x20 as libc::c_int as s8,
                          spawn: 0x9 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x21 as libc::c_int as s8,
                          spawn: 0x9 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x22 as libc::c_int as s8,
                          spawn: 0x9 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x22 as libc::c_int as s8,
                          spawn: 0x9 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x20 as libc::c_int as s8,
                          spawn: 0xa as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x21 as libc::c_int as s8,
                          spawn: 0xa as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x22 as libc::c_int as s8,
                          spawn: 0xa as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x22 as libc::c_int as s8,
                          spawn: 0xa as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x54 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x54 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x54 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x54 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x54 as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2c as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2c as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x54 as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2c as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2c as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x54 as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2c as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2c as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x54 as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2c as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2c as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5c as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5c as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5c as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5c as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5c as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5c as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5c as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5c as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5c as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5c as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5c as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5c as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5c as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5c as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5c as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5c as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5c as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5c as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5c as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5c as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5c as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0xf as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0xf as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5c as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0xf as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0xf as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5c as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0xf as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0xf as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5c as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0xf as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0xf as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x53 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x53 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x53 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x53 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x55 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x55 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x55 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x55 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x55 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x55 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x55 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x55 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x55 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x55 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x55 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x55 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x56 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x12 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x12 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x56 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x56 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x12 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x12 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x56 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x57 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x57 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x57 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x57 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x57 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x13 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x13 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x57 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x57 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x13 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x13 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x57 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x59 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x59 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x59 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x59 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x59 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x59 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x59 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x59 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5a as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5a as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5a as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5a as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5a as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5a as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5a as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5a as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5f as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5f as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x64 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x5 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x5 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x64 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x5 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x5 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5f as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0 as libc::c_int & 0x7f as libc::c_int) <<
                                       7 as libc::c_int |
                                   0 as libc::c_int & 0x7f as libc::c_int) as
                                  u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x60 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x60 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x60 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x60 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x61 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x61 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x61 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x61 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x61 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x61 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x61 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x61 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xe as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xe as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xe as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xe as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x20 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x21 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x22 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x22 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x20 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x21 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x22 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x22 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x20 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x21 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x22 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x22 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x55 as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x55 as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x55 as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x55 as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x55 as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x55 as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x55 as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x55 as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1b as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1c as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1d as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1d as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x34 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x34 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x34 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x34 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1b as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1c as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1d as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1d as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0x8 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0x8 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0x8 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0x8 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0x9 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0x9 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0x9 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0x9 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0xa as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0xa as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0xa as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0xa as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x55 as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x55 as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x55 as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x55 as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0xb as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x5 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x5 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0xb as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0xb as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x5 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x5 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0xb as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0xc as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x5 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x5 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0xc as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0xc as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x5 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x5 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0xc as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0xd as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x5 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x5 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0xd as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0xd as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x5 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x5 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0xd as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x45 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x46 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x45 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x46 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1e as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1f as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1e as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1f as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x20 as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x21 as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x22 as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x22 as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x20 as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x21 as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x22 as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x22 as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x63 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x63 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x63 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x63 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x7 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x7 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x7 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x7 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x7 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x7 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x7 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x7 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0x8 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0x8 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0x8 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0x8 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x43 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0xa as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0xa as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x43 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0xa as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0xa as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x43 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0xa as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0xa as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x43 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0xa as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0xa as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x44 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x44 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x44 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x44 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0x9 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0x9 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0x9 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0x9 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0xa as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0xa as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0xa as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0xa as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0xb as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0xb as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0xb as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0xb as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0xc as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0xc as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0xc as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0xc as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x63 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x63 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x63 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x63 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x63 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x63 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x63 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x63 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x42 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x42 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x42 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x42 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x56 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x47 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x42 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x42 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x42 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x42 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x42 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x6 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x6 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x6 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x6 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x36 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x36 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x36 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x36 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x2a as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x2a as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x2a as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x2a as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x13 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x13 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x13 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x13 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x15 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x15 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x15 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x15 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x57 as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x57 as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x57 as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x57 as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3a as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3a as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3a as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3a as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0xe as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0xe as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0xe as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0xe as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3b as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3b as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3b as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3b as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3b as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3b as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3b as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3f as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x26 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3f as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x26 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3f as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x26 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3f as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x26 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x43 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x43 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x43 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x43 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x43 as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x43 as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x43 as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x43 as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x58 as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2c as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2c as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x58 as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2c as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2c as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x58 as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2c as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2c as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x58 as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2c as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2c as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1a as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1a as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1a as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1a as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1a as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1a as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1a as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1a as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1a as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1a as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1a as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1a as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x55 as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x55 as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x55 as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x55 as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x55 as libc::c_int as s8,
                          spawn: 0x8 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x55 as libc::c_int as s8,
                          spawn: 0x8 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x55 as libc::c_int as s8,
                          spawn: 0x8 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x55 as libc::c_int as s8,
                          spawn: 0x8 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5f as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5f as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x64 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x64 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5f as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0 as libc::c_int & 0x7f as libc::c_int) <<
                                       7 as libc::c_int |
                                   0 as libc::c_int & 0x7f as libc::c_int) as
                                  u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0x8 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0x8 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0x8 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0x8 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x53 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x53 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x53 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x53 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x53 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x53 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x53 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x53 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x53 as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x53 as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x53 as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x53 as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x53 as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x53 as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x53 as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x53 as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5e as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0xe as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0xe as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5e as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0xe as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0xe as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5e as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0xe as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0xe as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5e as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0xe as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0xe as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5e as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0xe as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0xe as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5e as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0xe as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0xe as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5e as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0xe as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0xe as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5e as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0xe as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0xe as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3c as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3c as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3c as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3c as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3d as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3d as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3d as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3d as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3d as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3d as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3d as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x63 as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x63 as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x63 as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x63 as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x2e as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x2e as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x2e as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x2e as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x2f as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x2f as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x2f as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x2f as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x30 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x30 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x30 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x30 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x31 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x31 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x31 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x31 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1e as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1f as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1e as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1f as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x32 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x32 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x32 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x32 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x59 as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x59 as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x59 as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x59 as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x35 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x35 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x35 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x35 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x37 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x37 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x37 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x37 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x39 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x39 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x39 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x39 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0xd as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0xd as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0xd as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0xd as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0xe as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x5 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0xe as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0xe as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x5 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0xe as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0xf as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0xf as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0xf as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0xf as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0xf as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0xf as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0xf as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0xf as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0xf as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0xf as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0xf as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0xf as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0x10 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0x10 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0x10 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0x10 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0x11 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0x11 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0x11 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0x11 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x20 as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x21 as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x22 as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x22 as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x20 as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x21 as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x22 as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x22 as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1e as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1f as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1e as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1f as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x58 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x58 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x58 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x58 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x57 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x57 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x57 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x57 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x57 as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x57 as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x57 as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x57 as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5a as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5a as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5a as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5a as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x59 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x59 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x59 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x59 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x59 as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x59 as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x59 as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x59 as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xe as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xe as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xe as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xe as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xe as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xe as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xe as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xe as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xe as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xe as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xe as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xe as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x30 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x30 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x30 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x30 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x30 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x30 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x30 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x30 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x6 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x6 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x6 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x6 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x6 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x6 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x6 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x6 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x6 as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x6 as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x6 as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x6 as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x62 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x62 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x62 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x62 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x4a as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x4a as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x4a as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x4a as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x4a as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x4a as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x4a as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x2 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x2 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x2 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x2 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x12 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x12 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x12 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x12 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x11 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x11 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x11 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x11 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x18 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x18 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x18 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x18 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x16 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x16 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x16 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x16 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xa as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xa as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xa as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xa as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x19 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x19 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x19 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x19 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xa as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xa as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xa as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xa as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xa as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xa as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xa as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xa as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x63 as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x63 as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x63 as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x63 as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x28 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x28 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x28 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x28 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x29 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x29 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x29 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x29 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x2b as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x2b as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x2b as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x2b as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1a as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1a as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1a as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1a as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x55 as libc::c_int as s8,
                          spawn: 0x9 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x55 as libc::c_int as s8,
                          spawn: 0x9 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x55 as libc::c_int as s8,
                          spawn: 0x9 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x55 as libc::c_int as s8,
                          spawn: 0x9 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x55 as libc::c_int as s8,
                          spawn: 0xa as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x55 as libc::c_int as s8,
                          spawn: 0xa as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x55 as libc::c_int as s8,
                          spawn: 0xa as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x55 as libc::c_int as s8,
                          spawn: 0xa as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0x9 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0x9 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0x9 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0x9 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x48 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x26 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x48 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x26 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x48 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x26 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x48 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x26 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x48 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x48 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x48 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x48 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x55 as libc::c_int as s8,
                          spawn: 0xb as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x55 as libc::c_int as s8,
                          spawn: 0xb as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x55 as libc::c_int as s8,
                          spawn: 0xb as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x55 as libc::c_int as s8,
                          spawn: 0xb as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x60 as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x60 as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x60 as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x60 as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x49 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x49 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x49 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x49 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0xa as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0xa as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0xa as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0xa as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xd as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xd as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xd as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xd as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xd as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xd as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xd as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xd as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xd as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xd as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xd as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x23 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x24 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x25 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x25 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0xf as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x5 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x5 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0xf as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0xf as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x5 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x5 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0xf as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x60 as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x60 as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x60 as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x60 as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5f as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5f as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x64 as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x64 as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x61 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x61 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x61 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x61 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xc as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xc as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xc as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xc as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xc as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xc as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xc as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xc as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xc as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xc as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xc as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xc as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xc as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xc as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xc as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xc as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xc as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xc as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xc as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xc as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xc as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xc as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xc as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xc as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xc as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xc as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xc as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xc as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xc as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xc as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xc as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xc as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xc as libc::c_int as s8,
                          spawn: 0x8 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xc as libc::c_int as s8,
                          spawn: 0x8 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xc as libc::c_int as s8,
                          spawn: 0x8 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xc as libc::c_int as s8,
                          spawn: 0x8 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xc as libc::c_int as s8,
                          spawn: 0x9 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xc as libc::c_int as s8,
                          spawn: 0x9 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xc as libc::c_int as s8,
                          spawn: 0x9 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xc as libc::c_int as s8,
                          spawn: 0x9 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xc as libc::c_int as s8,
                          spawn: 0xa as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xc as libc::c_int as s8,
                          spawn: 0xa as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xc as libc::c_int as s8,
                          spawn: 0xa as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xc as libc::c_int as s8,
                          spawn: 0xa as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xc as libc::c_int as s8,
                          spawn: 0xb as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xc as libc::c_int as s8,
                          spawn: 0xb as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xc as libc::c_int as s8,
                          spawn: 0xb as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xc as libc::c_int as s8,
                          spawn: 0xb as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xe as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xe as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xe as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xe as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1a as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1a as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1a as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1a as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3b as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3b as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3b as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3b as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3b as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3b as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3b as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3b as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5b as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5b as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5b as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5b as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x63 as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x26 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x63 as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x26 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x63 as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x26 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x63 as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x26 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x63 as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2e as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2e as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x63 as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2e as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2e as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x63 as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2e as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2e as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x63 as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2e as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2e as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5b as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5b as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5b as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5b as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5b as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2c as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2c as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5b as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2c as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2c as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5b as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2c as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2c as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5b as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2c as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2c as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5b as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2c as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2c as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5b as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2c as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2c as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5b as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2c as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2c as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5b as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2c as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2c as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5b as libc::c_int as s8,
                          spawn: 0x8 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5b as libc::c_int as s8,
                          spawn: 0x8 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5b as libc::c_int as s8,
                          spawn: 0x8 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5b as libc::c_int as s8,
                          spawn: 0x8 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x62 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2c as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2c as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x62 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2c as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2c as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x62 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2c as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2c as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x62 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2c as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2c as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x57 as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x57 as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x57 as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x57 as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x7 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x7 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x7 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x7 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0xb as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0xb as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0xb as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0xb as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3b as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3b as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3b as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3b as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x61 as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x61 as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x61 as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x61 as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5f as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5f as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x64 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x64 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5f as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0 as libc::c_int & 0x7f as libc::c_int) <<
                                       7 as libc::c_int |
                                   0 as libc::c_int & 0x7f as libc::c_int) as
                                  u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0xc as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0xc as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0xc as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0xc as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x48 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x48 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x48 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x48 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x4b as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x4b as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x4b as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x4b as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x53 as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x53 as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x53 as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x53 as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0x10 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0xb as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0xb as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0x10 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0xb as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0xb as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0x10 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0xb as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0xb as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0x10 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0xb as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0xb as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0xd as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0xd as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0xd as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0xd as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x4f as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x4f as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x4f as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x4f as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x4f as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1a as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1a as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1a as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1a as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x66 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x66 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x66 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x66 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1a as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1a as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1a as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x1a as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x32 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x32 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x32 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x32 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x2c as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x2c as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x2c as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x2c as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x33 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x33 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x33 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x33 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xd as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xd as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xd as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xd as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xd as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xd as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xd as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xd as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xd as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xd as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xd as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xd as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xd as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xd as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xd as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xd as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xd as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xd as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xd as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xd as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xd as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xd as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xd as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xd as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xd as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xd as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xd as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xd as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x50 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x50 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x50 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x50 as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0xe as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0xe as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0xe as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0xe as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x63 as libc::c_int as s8,
                          spawn: 0x8 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x20 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x63 as libc::c_int as s8,
                          spawn: 0x8 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x20 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x63 as libc::c_int as s8,
                          spawn: 0x8 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x20 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x63 as libc::c_int as s8,
                          spawn: 0x8 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x20 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x63 as libc::c_int as s8,
                          spawn: 0x9 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x63 as libc::c_int as s8,
                          spawn: 0x9 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x63 as libc::c_int as s8,
                          spawn: 0x9 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x63 as libc::c_int as s8,
                          spawn: 0x9 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x57 as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2c as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2c as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x57 as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2c as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2c as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x57 as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2c as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2c as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x57 as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2c as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2c as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x61 as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x61 as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x61 as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x61 as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x53 as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x53 as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x53 as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x53 as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xf as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xf as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xf as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xf as libc::c_int as s8,
                          spawn: 0 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xc as libc::c_int as s8,
                          spawn: 0xc as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xc as libc::c_int as s8,
                          spawn: 0xc as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xc as libc::c_int as s8,
                          spawn: 0xc as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0xc as libc::c_int as s8,
                          spawn: 0xc as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x41 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x41 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x41 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x41 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3d as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3d as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3d as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3d as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5c as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5c as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5c as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5c as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x53 as libc::c_int as s8,
                          spawn: 0x8 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x53 as libc::c_int as s8,
                          spawn: 0x8 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x53 as libc::c_int as s8,
                          spawn: 0x8 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x53 as libc::c_int as s8,
                          spawn: 0x8 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3d as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3d as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3d as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3d as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x43 as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x43 as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x43 as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x43 as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x43 as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x43 as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x43 as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x43 as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0x11 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0x11 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0x11 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x51 as libc::c_int as s8,
                          spawn: 0x11 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3e as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3e as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3e as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3e as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3e as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3e as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3e as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3e as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3e as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3e as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3e as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3e as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3e as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3e as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3e as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3e as libc::c_int as s8,
                          spawn: 0x4 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3e as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3e as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3e as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3e as libc::c_int as s8,
                          spawn: 0x5 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3e as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3e as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3e as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3e as libc::c_int as s8,
                          spawn: 0x6 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3e as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3e as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3e as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3e as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3e as libc::c_int as s8,
                          spawn: 0x8 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3e as libc::c_int as s8,
                          spawn: 0x8 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3e as libc::c_int as s8,
                          spawn: 0x8 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3e as libc::c_int as s8,
                          spawn: 0x8 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3e as libc::c_int as s8,
                          spawn: 0x9 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3e as libc::c_int as s8,
                          spawn: 0x9 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3e as libc::c_int as s8,
                          spawn: 0x9 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3e as libc::c_int as s8,
                          spawn: 0x9 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3e as libc::c_int as s8,
                          spawn: 0xa as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3e as libc::c_int as s8,
                          spawn: 0xa as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3e as libc::c_int as s8,
                          spawn: 0xa as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3e as libc::c_int as s8,
                          spawn: 0xa as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3e as libc::c_int as s8,
                          spawn: 0xb as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3e as libc::c_int as s8,
                          spawn: 0xb as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3e as libc::c_int as s8,
                          spawn: 0xb as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3e as libc::c_int as s8,
                          spawn: 0xb as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3e as libc::c_int as s8,
                          spawn: 0xc as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3e as libc::c_int as s8,
                          spawn: 0xc as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3e as libc::c_int as s8,
                          spawn: 0xc as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3e as libc::c_int as s8,
                          spawn: 0xc as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x37 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x37 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x37 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x37 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x8 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x8 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x8 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x8 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x4 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x4c as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x4c as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x4c as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x4c as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x63 as libc::c_int as s8,
                          spawn: 0xa as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x63 as libc::c_int as s8,
                          spawn: 0xa as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x63 as libc::c_int as s8,
                          spawn: 0xa as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x63 as libc::c_int as s8,
                          spawn: 0xa as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x9 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x9 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x9 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x9 as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0xf as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0xf as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0xf as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x52 as libc::c_int as s8,
                          spawn: 0xf as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5b as libc::c_int as s8,
                          spawn: 0x9 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5b as libc::c_int as s8,
                          spawn: 0x9 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5b as libc::c_int as s8,
                          spawn: 0x9 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5b as libc::c_int as s8,
                          spawn: 0x9 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x4c as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x4c as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x4c as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x4c as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x20 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x55 as libc::c_int as s8,
                          spawn: 0xc as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x55 as libc::c_int as s8,
                          spawn: 0xc as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x55 as libc::c_int as s8,
                          spawn: 0xc as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x55 as libc::c_int as s8,
                          spawn: 0xc as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x4 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x17 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x17 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x17 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x17 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((1 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x4a as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x4a as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x4a as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x4a as libc::c_int as s8,
                          spawn: 0x1 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (0 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x43 as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x43 as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x43 as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x43 as libc::c_int as s8,
                          spawn: 0x7 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0x12 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0x12 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0x12 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5d as libc::c_int as s8,
                          spawn: 0x12 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3e as libc::c_int as s8,
                          spawn: 0xd as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3e as libc::c_int as s8,
                          spawn: 0xd as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3e as libc::c_int as s8,
                          spawn: 0xd as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x3e as libc::c_int as s8,
                          spawn: 0xd as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x56 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x12 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x12 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x56 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x56 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x12 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x12 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x56 as libc::c_int as s8,
                          spawn: 0x2 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x57 as libc::c_int as s8,
                          spawn: 0x8 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x57 as libc::c_int as s8,
                          spawn: 0x8 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x57 as libc::c_int as s8,
                          spawn: 0x8 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x57 as libc::c_int as s8,
                          spawn: 0x8 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x2 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x2 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x56 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x56 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x56 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x56 as libc::c_int as s8,
                          spawn: 0x3 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x57 as libc::c_int as s8,
                          spawn: 0x9 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x57 as libc::c_int as s8,
                          spawn: 0x9 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x57 as libc::c_int as s8,
                          spawn: 0x9 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x57 as libc::c_int as s8,
                          spawn: 0x9 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5c as libc::c_int as s8,
                          spawn: 0x8 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5c as libc::c_int as s8,
                          spawn: 0x8 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5c as libc::c_int as s8,
                          spawn: 0x8 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     },
     {
         let mut init =
             EntranceInfo{scene: 0x5c as libc::c_int as s8,
                          spawn: 0x8 as libc::c_int as s8,
                          field:
                              ((0 as libc::c_int & 1 as libc::c_int) <<
                                   15 as libc::c_int |
                                   (1 as libc::c_int & 1 as libc::c_int) <<
                                       14 as libc::c_int |
                                   (0x3 as libc::c_int & 0x7f as libc::c_int)
                                       << 7 as libc::c_int |
                                   0x3 as libc::c_int & 0x7f as libc::c_int)
                                  as u16_0,};
         init
     }];
// Initialized in run_static_initializers
#[no_mangle]
pub static mut gSceneTable: [SceneTableEntry; 110] =
    [SceneTableEntry{sceneFile: RomFile{vromStart: 0, vromEnd: 0,},
                     titleFile: RomFile{vromStart: 0, vromEnd: 0,},
                     unk_10: 0,
                     config: 0,
                     unk_12: 0,
                     unk_13: 0,}; 110];
// Initialized in run_static_initializers
#[no_mangle]
pub static mut sDefaultDisplayList: [Gfx; 10] =
    [Gfx{words: Gwords{w0: 0, w1: 0,},}; 10];
// Computes next entrance index based on age and day time to set the fade out transition
#[no_mangle]
pub unsafe extern "C" fn func_800994A0(mut globalCtx: *mut GlobalContext) {
    let mut computedEntranceIndex: s16 = 0;
    if !(gSaveContext.nightFlag == 0 as libc::c_int) {
        if !(gSaveContext.linkAge == 0 as libc::c_int) {
            computedEntranceIndex =
                ((*globalCtx).nextEntranceIndex as libc::c_int +
                     1 as libc::c_int) as s16
        } else {
            computedEntranceIndex =
                ((*globalCtx).nextEntranceIndex as libc::c_int +
                     3 as libc::c_int) as s16
        }
    } else if !(gSaveContext.linkAge == 0 as libc::c_int) {
        computedEntranceIndex = (*globalCtx).nextEntranceIndex
    } else {
        computedEntranceIndex =
            ((*globalCtx).nextEntranceIndex as libc::c_int + 2 as libc::c_int)
                as s16
    }
    (*globalCtx).fadeTransition =
        (gEntranceTable[computedEntranceIndex as usize].field as libc::c_int &
             0x7f as libc::c_int) as u8_0;
    // Fade out
}
// Scene Draw Config 0
#[no_mangle]
pub unsafe extern "C" fn func_80099550(mut globalCtx: *mut GlobalContext) {
    let mut __gfxCtx: *mut GraphicsContext = 0 as *mut GraphicsContext;
    let mut dispRefs: [*mut Gfx; 4] = [0 as *mut Gfx; 4];
    __gfxCtx = (*globalCtx).state.gfxCtx;
    Graph_OpenDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                    b"../z_scene_table.c\x00" as *const u8 as
                        *const libc::c_char, 4725 as libc::c_int);
    let fresh0 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g: *mut Gfx = fresh0;
    (*_g).words.w0 =
        (0xde as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g).words.w1 = sDefaultDisplayList.as_mut_ptr() as libc::c_uint;
    let fresh1 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_0: *mut Gfx = fresh1;
    (*_g_0).words.w0 =
        (0xde as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_0).words.w1 = sDefaultDisplayList.as_mut_ptr() as libc::c_uint;
    Graph_CloseDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                     b"../z_scene_table.c\x00" as *const u8 as
                         *const libc::c_char, 4735 as libc::c_int);
}
#[no_mangle]
pub static mut D_8012A2F8: [*mut libc::c_void; 2] =
    unsafe {
        [gYdanTex_00BA18.as_ptr() as *mut _ as *mut libc::c_void,
         gYdanTex_00CA18.as_ptr() as *mut _ as *mut libc::c_void]
    };
// Scene Draw Config 19
#[no_mangle]
pub unsafe extern "C" fn func_800995DC(mut globalCtx: *mut GlobalContext) {
    let mut gameplayFrames: u32_0 = (*globalCtx).gameplayFrames;
    let mut __gfxCtx: *mut GraphicsContext = 0 as *mut GraphicsContext;
    let mut dispRefs: [*mut Gfx; 4] = [0 as *mut Gfx; 4];
    __gfxCtx = (*globalCtx).state.gfxCtx;
    Graph_OpenDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                    b"../z_scene_table.c\x00" as *const u8 as
                        *const libc::c_char, 4763 as libc::c_int);
    let fresh2 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g: *mut Gfx = fresh2;
    (*_g).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x9 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         (127 as libc::c_int as
                              libc::c_uint).wrapping_sub(gameplayFrames.wrapping_rem(128
                                                                                         as
                                                                                         libc::c_int
                                                                                         as
                                                                                         libc::c_uint)),
                         gameplayFrames.wrapping_mul(1 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int,
                         1 as libc::c_int,
                         gameplayFrames.wrapping_rem(128 as libc::c_int as
                                                         libc::c_uint),
                         gameplayFrames.wrapping_mul(1 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int) as
            libc::c_uint;
    let fresh3 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_0: *mut Gfx = fresh3;
    (*_g_0).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_0).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh4 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_1: *mut Gfx = fresh4;
    (*_g_1).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_1).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let mut pad: s32 = 0;
    let fresh5 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_2: *mut Gfx = fresh5;
    (*_g_2).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x8 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_2).words.w1 =
        gSegments[((D_8012A2F8[gSaveContext.nightFlag as usize] as u32_0) <<
                       4 as libc::c_int >> 28 as libc::c_int) as
                      usize].wrapping_add(D_8012A2F8[gSaveContext.nightFlag as
                                                         usize] as u32_0 &
                                              0xffffff as libc::c_int as
                                                  libc::c_uint).wrapping_add(0x80000000
                                                                                 as
                                                                                 libc::c_uint)
            as *mut libc::c_void as libc::c_uint;
    Graph_CloseDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                     b"../z_scene_table.c\x00" as *const u8 as
                         *const libc::c_char, 4783 as libc::c_int);
}
// Scene Draw Config 28
#[no_mangle]
pub unsafe extern "C" fn func_80099760(mut globalCtx: *mut GlobalContext) {
    let mut gameplayFrames: u32_0 = 0;
    let mut __gfxCtx: *mut GraphicsContext = 0 as *mut GraphicsContext;
    let mut dispRefs: [*mut Gfx; 4] = [0 as *mut Gfx; 4];
    __gfxCtx = (*globalCtx).state.gfxCtx;
    Graph_OpenDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                    b"../z_scene_table.c\x00" as *const u8 as
                        *const libc::c_char, 4845 as libc::c_int);
    gameplayFrames = (*globalCtx).gameplayFrames;
    let fresh6 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g: *mut Gfx = fresh6;
    (*_g).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x8 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         gameplayFrames.wrapping_mul(2 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(256
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         0 as libc::c_int as u32_0, 64 as libc::c_int,
                         32 as libc::c_int, 1 as libc::c_int,
                         0 as libc::c_int as u32_0,
                         gameplayFrames.wrapping_mul(2 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         64 as libc::c_int, 32 as libc::c_int) as
            libc::c_uint;
    let fresh7 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_0: *mut Gfx = fresh7;
    (*_g_0).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_0).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh8 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_1: *mut Gfx = fresh8;
    (*_g_1).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_1).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    Graph_CloseDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                     b"../z_scene_table.c\x00" as *const u8 as
                         *const libc::c_char, 4859 as libc::c_int);
}
#[no_mangle]
pub static mut gDCEntranceTextures: [*mut libc::c_void; 2] =
    unsafe {
        [gDCDayEntranceTex.as_ptr() as *mut _ as *mut libc::c_void,
         gDCNightEntranceTex.as_ptr() as *mut _ as *mut libc::c_void]
    };
#[no_mangle]
pub static mut sDCLavaFloorTextures: [*mut libc::c_void; 8] =
    unsafe {
        [gDCLavaFloor1Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gDCLavaFloor2Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gDCLavaFloor3Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gDCLavaFloor4Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gDCLavaFloor5Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gDCLavaFloor6Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gDCLavaFloor7Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gDCLavaFloor8Tex.as_ptr() as *mut _ as *mut libc::c_void]
    };
// Scene Draw Config 20 - Dodongo's Cavern
#[no_mangle]
pub unsafe extern "C" fn func_80099878(mut globalCtx: *mut GlobalContext) {
    let mut gameplayFrames: u32_0 = 0;
    let mut pad: s32 = 0;
    let mut displayListHead: *mut Gfx =
        Graph_Alloc((*globalCtx).state.gfxCtx,
                    (2 as libc::c_int as
                         libc::c_uint).wrapping_mul(::std::mem::size_of::<[Gfx; 3]>()
                                                        as libc::c_ulong) as
                        size_t) as *mut Gfx;
    let mut __gfxCtx: *mut GraphicsContext = 0 as *mut GraphicsContext;
    let mut dispRefs: [*mut Gfx; 4] = [0 as *mut Gfx; 4];
    __gfxCtx = (*globalCtx).state.gfxCtx;
    Graph_OpenDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                    b"../z_scene_table.c\x00" as *const u8 as
                        *const libc::c_char, 4905 as libc::c_int);
    gameplayFrames = (*globalCtx).gameplayFrames;
    let fresh9 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g: *mut Gfx = fresh9;
    (*_g).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x8 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g).words.w1 =
        gSegments[((gDCEntranceTextures[gSaveContext.nightFlag as usize] as
                        u32_0) << 4 as libc::c_int >> 28 as libc::c_int) as
                      usize].wrapping_add(gDCEntranceTextures[gSaveContext.nightFlag
                                                                  as usize] as
                                              u32_0 &
                                              0xffffff as libc::c_int as
                                                  libc::c_uint).wrapping_add(0x80000000
                                                                                 as
                                                                                 libc::c_uint)
            as *mut libc::c_void as libc::c_uint;
    let fresh10 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_0: *mut Gfx = fresh10;
    (*_g_0).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x9 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_0).words.w1 =
        gSegments[((sDCLavaFloorTextures[((gameplayFrames &
                                               14 as libc::c_int as
                                                   libc::c_uint) as s32 >>
                                              1 as libc::c_int) as usize] as
                        u32_0) << 4 as libc::c_int >> 28 as libc::c_int) as
                      usize].wrapping_add(sDCLavaFloorTextures[((gameplayFrames
                                                                     &
                                                                     14 as
                                                                         libc::c_int
                                                                         as
                                                                         libc::c_uint)
                                                                    as s32 >>
                                                                    1 as
                                                                        libc::c_int)
                                                                   as usize]
                                              as u32_0 &
                                              0xffffff as libc::c_int as
                                                  libc::c_uint).wrapping_add(0x80000000
                                                                                 as
                                                                                 libc::c_uint)
            as *mut libc::c_void as libc::c_uint;
    let fresh11 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_1: *mut Gfx = fresh11;
    (*_g_1).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x9 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_1).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         gameplayFrames.wrapping_mul(1 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(256
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         0 as libc::c_int as u32_0, 64 as libc::c_int,
                         32 as libc::c_int, 1 as libc::c_int,
                         0 as libc::c_int as u32_0,
                         gameplayFrames.wrapping_mul(1 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         64 as libc::c_int, 32 as libc::c_int) as
            libc::c_uint;
    let fresh12 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_2: *mut Gfx = fresh12;
    (*_g_2).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0xa as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_2).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         0 as libc::c_int as u32_0,
                         gameplayFrames.wrapping_mul(1 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int,
                         1 as libc::c_int, 0 as libc::c_int as u32_0,
                         gameplayFrames.wrapping_mul(2 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int) as
            libc::c_uint;
    let mut pad2: [s32; 2] = [0; 2];
    let fresh13 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_3: *mut Gfx = fresh13;
    (*_g_3).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_3).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh14 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_4: *mut Gfx = fresh14;
    (*_g_4).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_4).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh15 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_5: *mut Gfx = fresh15;
    (*_g_5).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_5).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh16 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_6: *mut Gfx = fresh16;
    (*_g_6).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_6).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh17 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_7: *mut Gfx = fresh17;
    (*_g_7).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0xb as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_7).words.w1 = displayListHead as libc::c_uint;
    let fresh18 = displayListHead;
    displayListHead = displayListHead.offset(1);
    let mut _g_8: *mut Gfx = fresh18;
    (*_g_8).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_8).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh19 = displayListHead;
    displayListHead = displayListHead.offset(1);
    let mut _g_9: *mut Gfx = fresh19;
    (*_g_9).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_9).words.w1 =
        (255 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (255 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (255 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            ((*globalCtx).roomCtx.unk_74[BGDODOAGO_EYE_LEFT as libc::c_int as
                                             usize] as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh20 = displayListHead;
    displayListHead = displayListHead.offset(1);
    let mut _g_10: *mut Gfx = fresh20;
    (*_g_10).words.w0 =
        (0xdf as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_10).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh21 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_11: *mut Gfx = fresh21;
    (*_g_11).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0xc as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_11).words.w1 = displayListHead as libc::c_uint;
    let fresh22 = displayListHead;
    displayListHead = displayListHead.offset(1);
    let mut _g_12: *mut Gfx = fresh22;
    (*_g_12).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_12).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh23 = displayListHead;
    displayListHead = displayListHead.offset(1);
    let mut _g_13: *mut Gfx = fresh23;
    (*_g_13).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_13).words.w1 =
        (255 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (255 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (255 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            ((*globalCtx).roomCtx.unk_74[BGDODOAGO_EYE_RIGHT as libc::c_int as
                                             usize] as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let mut _g_14: *mut Gfx = displayListHead;
    (*_g_14).words.w0 =
        (0xdf as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_14).words.w1 = 0 as libc::c_int as libc::c_uint;
    Graph_CloseDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                     b"../z_scene_table.c\x00" as *const u8 as
                         *const libc::c_char, 4956 as libc::c_int);
}
// Scene Draw Config 30
#[no_mangle]
pub unsafe extern "C" fn func_80099BD8(mut globalCtx: *mut GlobalContext) {
    let mut temp: f32_0 = 0.;
    let mut displayListHead: *mut Gfx =
        Graph_Alloc((*globalCtx).state.gfxCtx,
                    (18 as libc::c_int as
                         libc::c_uint).wrapping_mul(::std::mem::size_of::<Gfx>()
                                                        as libc::c_ulong) as
                        size_t) as *mut Gfx;
    let mut __gfxCtx: *mut GraphicsContext = 0 as *mut GraphicsContext;
    let mut dispRefs: [*mut Gfx; 4] = [0 as *mut Gfx; 4];
    __gfxCtx = (*globalCtx).state.gfxCtx;
    Graph_OpenDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                    b"../z_scene_table.c\x00" as *const u8 as
                        *const libc::c_char, 5069 as libc::c_int);
    temp =
        (*globalCtx).roomCtx.unk_74[0 as libc::c_int as usize] as libc::c_int
            as libc::c_float / 255.0f32;
    let fresh24 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g: *mut Gfx = fresh24;
    (*_g).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x8 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g).words.w1 = displayListHead as libc::c_uint;
    let fresh25 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_0: *mut Gfx = fresh25;
    (*_g_0).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x8 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_0).words.w1 = displayListHead as libc::c_uint;
    let fresh26 = displayListHead;
    displayListHead = displayListHead.offset(1);
    let mut _g_1: *mut Gfx = fresh26;
    (*_g_1).words.w0 =
        (0xfa as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_1).words.w1 =
        ((255 as libc::c_int - (185.0f32 * temp) as u8_0 as libc::c_int) as
             u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            ((255 as libc::c_int - (145.0f32 * temp) as u8_0 as libc::c_int)
                 as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((255 as libc::c_int - (105.0f32 * temp) as u8_0 as libc::c_int)
                 as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (255 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh27 = displayListHead;
    displayListHead = displayListHead.offset(1);
    let mut _g_2: *mut Gfx = fresh27;
    (*_g_2).words.w0 =
        (0xdf as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_2).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh28 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_3: *mut Gfx = fresh28;
    (*_g_3).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x9 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_3).words.w1 = displayListHead as libc::c_uint;
    let fresh29 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_4: *mut Gfx = fresh29;
    (*_g_4).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x9 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_4).words.w1 = displayListHead as libc::c_uint;
    let fresh30 = displayListHead;
    displayListHead = displayListHead.offset(1);
    let mut _g_5: *mut Gfx = fresh30;
    (*_g_5).words.w0 =
        (0xfa as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_5).words.w1 =
        ((76 as libc::c_int + (6.0f32 * temp) as u8_0 as libc::c_int) as u32_0
             &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            ((76 as libc::c_int + (34.0f32 * temp) as u8_0 as libc::c_int) as
                 u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((76 as libc::c_int + (74.0f32 * temp) as u8_0 as libc::c_int) as
                 u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (255 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh31 = displayListHead;
    displayListHead = displayListHead.offset(1);
    let mut _g_6: *mut Gfx = fresh31;
    (*_g_6).words.w0 =
        (0xdf as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_6).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh32 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_7: *mut Gfx = fresh32;
    (*_g_7).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0xa as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_7).words.w1 = displayListHead as libc::c_uint;
    let fresh33 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_8: *mut Gfx = fresh33;
    (*_g_8).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0xa as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_8).words.w1 = displayListHead as libc::c_uint;
    let fresh34 = displayListHead;
    displayListHead = displayListHead.offset(1);
    let mut _g_9: *mut Gfx = fresh34;
    (*_g_9).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_9).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh35 = displayListHead;
    displayListHead = displayListHead.offset(1);
    let mut _g_10: *mut Gfx = fresh35;
    (*_g_10).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_10).words.w1 =
        (0 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            ((*globalCtx).roomCtx.unk_74[0 as libc::c_int as usize] as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh36 = displayListHead;
    displayListHead = displayListHead.offset(1);
    let mut _g_11: *mut Gfx = fresh36;
    (*_g_11).words.w0 =
        (0xdf as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_11).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh37 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_12: *mut Gfx = fresh37;
    (*_g_12).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0xb as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_12).words.w1 = displayListHead as libc::c_uint;
    let fresh38 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_13: *mut Gfx = fresh38;
    (*_g_13).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0xb as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_13).words.w1 = displayListHead as libc::c_uint;
    let fresh39 = displayListHead;
    displayListHead = displayListHead.offset(1);
    let mut _g_14: *mut Gfx = fresh39;
    (*_g_14).words.w0 =
        (0xfa as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_14).words.w1 =
        ((89 as libc::c_int + (166.0f32 * temp) as u8_0 as libc::c_int) as
             u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            ((89 as libc::c_int + (166.0f32 * temp) as u8_0 as libc::c_int) as
                 u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((89 as libc::c_int + (166.0f32 * temp) as u8_0 as libc::c_int) as
                 u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (255 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh40 = displayListHead;
    displayListHead = displayListHead.offset(1);
    let mut _g_15: *mut Gfx = fresh40;
    (*_g_15).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_15).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh41 = displayListHead;
    displayListHead = displayListHead.offset(1);
    let mut _g_16: *mut Gfx = fresh41;
    (*_g_16).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_16).words.w1 =
        (0 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            ((*globalCtx).roomCtx.unk_74[0 as libc::c_int as usize] as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh42 = displayListHead;
    displayListHead = displayListHead.offset(1);
    let mut _g_17: *mut Gfx = fresh42;
    (*_g_17).words.w0 =
        (0xdf as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_17).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh43 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_18: *mut Gfx = fresh43;
    (*_g_18).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0xc as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_18).words.w1 = displayListHead as libc::c_uint;
    let fresh44 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_19: *mut Gfx = fresh44;
    (*_g_19).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0xc as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_19).words.w1 = displayListHead as libc::c_uint;
    let fresh45 = displayListHead;
    displayListHead = displayListHead.offset(1);
    let mut _g_20: *mut Gfx = fresh45;
    (*_g_20).words.w0 =
        (0xfa as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_20).words.w1 =
        ((255 as libc::c_int + (179.0f32 * temp) as u8_0 as libc::c_int) as
             u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            ((255 as libc::c_int + (179.0f32 * temp) as u8_0 as libc::c_int)
                 as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((255 as libc::c_int + (179.0f32 * temp) as u8_0 as libc::c_int)
                 as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (255 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh46 = displayListHead;
    displayListHead = displayListHead.offset(1);
    let mut _g_21: *mut Gfx = fresh46;
    (*_g_21).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_21).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh47 = displayListHead;
    displayListHead = displayListHead.offset(1);
    let mut _g_22: *mut Gfx = fresh47;
    (*_g_22).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_22).words.w1 =
        (0 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            ((*globalCtx).roomCtx.unk_74[0 as libc::c_int as usize] as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh48 = displayListHead;
    displayListHead = displayListHead.offset(1);
    let mut _g_23: *mut Gfx = fresh48;
    (*_g_23).words.w0 =
        (0xdf as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_23).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh49 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_24: *mut Gfx = fresh49;
    (*_g_24).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0xd as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_24).words.w1 = displayListHead as libc::c_uint;
    let fresh50 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_25: *mut Gfx = fresh50;
    (*_g_25).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0xd as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_25).words.w1 = displayListHead as libc::c_uint;
    let fresh51 = displayListHead;
    displayListHead = displayListHead.offset(1);
    let mut _g_26: *mut Gfx = fresh51;
    (*_g_26).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_26).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh52 = displayListHead;
    displayListHead = displayListHead.offset(1);
    let mut _g_27: *mut Gfx = fresh52;
    (*_g_27).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_27).words.w1 =
        (0 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            ((*globalCtx).roomCtx.unk_74[1 as libc::c_int as usize] as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let mut _g_28: *mut Gfx = displayListHead;
    (*_g_28).words.w0 =
        (0xdf as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_28).words.w1 = 0 as libc::c_int as libc::c_uint;
    Graph_CloseDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                     b"../z_scene_table.c\x00" as *const u8 as
                         *const libc::c_char, 5145 as libc::c_int);
    if gSaveContext.sceneSetupIndex == 5 as libc::c_int {
        gCustomLensFlareOn = 1 as libc::c_int as u8_0;
        gCustomLensFlarePos.x = -20.0f32;
        gCustomLensFlarePos.y = 1220.0f32;
        gCustomLensFlarePos.z = -684.0f32;
        gLensFlareScale = 10 as libc::c_int as s16;
        gLensFlareColorIntensity = 8.0f32;
        gLensFlareScreenFillAlpha = 200 as libc::c_int as s16
    };
}
// Scene Draw Config 31
#[no_mangle]
pub unsafe extern "C" fn func_8009A45C(mut globalCtx: *mut GlobalContext) {
    let mut gameplayFrames: u32_0 = 0;
    let mut __gfxCtx: *mut GraphicsContext = 0 as *mut GraphicsContext;
    let mut dispRefs: [*mut Gfx; 4] = [0 as *mut Gfx; 4];
    __gfxCtx = (*globalCtx).state.gfxCtx;
    Graph_OpenDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                    b"../z_scene_table.c\x00" as *const u8 as
                        *const libc::c_char, 5171 as libc::c_int);
    gameplayFrames = (*globalCtx).gameplayFrames;
    let fresh53 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g: *mut Gfx = fresh53;
    (*_g).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x8 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g).words.w1 =
        Gfx_TexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int as u32_0,
                      gameplayFrames.wrapping_mul(1 as libc::c_int as
                                                      libc::c_uint).wrapping_rem(64
                                                                                     as
                                                                                     libc::c_int
                                                                                     as
                                                                                     libc::c_uint),
                      256 as libc::c_int, 16 as libc::c_int) as libc::c_uint;
    let fresh54 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_0: *mut Gfx = fresh54;
    (*_g_0).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x9 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_0).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         (127 as libc::c_int as
                              libc::c_uint).wrapping_sub(gameplayFrames.wrapping_rem(128
                                                                                         as
                                                                                         libc::c_int
                                                                                         as
                                                                                         libc::c_uint)),
                         gameplayFrames.wrapping_mul(1 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int,
                         1 as libc::c_int,
                         gameplayFrames.wrapping_rem(128 as libc::c_int as
                                                         libc::c_uint),
                         gameplayFrames.wrapping_mul(1 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int) as
            libc::c_uint;
    let fresh55 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_1: *mut Gfx = fresh55;
    (*_g_1).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0xa as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_1).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         0 as libc::c_int as u32_0, 0 as libc::c_int as u32_0,
                         32 as libc::c_int, 32 as libc::c_int,
                         1 as libc::c_int, 0 as libc::c_int as u32_0,
                         (127 as libc::c_int as
                              libc::c_uint).wrapping_sub(gameplayFrames.wrapping_mul(1
                                                                                         as
                                                                                         libc::c_int
                                                                                         as
                                                                                         libc::c_uint).wrapping_rem(128
                                                                                                                        as
                                                                                                                        libc::c_int
                                                                                                                        as
                                                                                                                        libc::c_uint)),
                         32 as libc::c_int, 32 as libc::c_int) as
            libc::c_uint;
    let fresh56 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_2: *mut Gfx = fresh56;
    (*_g_2).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0xb as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_2).words.w1 =
        Gfx_TexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int as u32_0,
                      gameplayFrames.wrapping_mul(1 as libc::c_int as
                                                      libc::c_uint).wrapping_rem(128
                                                                                     as
                                                                                     libc::c_int
                                                                                     as
                                                                                     libc::c_uint),
                      32 as libc::c_int, 32 as libc::c_int) as libc::c_uint;
    let fresh57 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_3: *mut Gfx = fresh57;
    (*_g_3).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0xc as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_3).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         0 as libc::c_int as u32_0,
                         gameplayFrames.wrapping_mul(50 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(2048
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         8 as libc::c_int, 512 as libc::c_int,
                         1 as libc::c_int, 0 as libc::c_int as u32_0,
                         gameplayFrames.wrapping_mul(60 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(2048
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         8 as libc::c_int, 512 as libc::c_int) as
            libc::c_uint;
    let fresh58 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_4: *mut Gfx = fresh58;
    (*_g_4).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0xd as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_4).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         0 as libc::c_int as u32_0, 0 as libc::c_int as u32_0,
                         32 as libc::c_int, 64 as libc::c_int,
                         1 as libc::c_int, 0 as libc::c_int as u32_0,
                         gameplayFrames.wrapping_mul(1 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int) as
            libc::c_uint;
    let fresh59 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_5: *mut Gfx = fresh59;
    (*_g_5).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_5).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh60 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_6: *mut Gfx = fresh60;
    (*_g_6).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_6).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh61 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_7: *mut Gfx = fresh61;
    (*_g_7).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_7).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh62 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_8: *mut Gfx = fresh62;
    (*_g_8).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_8).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    Graph_CloseDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                     b"../z_scene_table.c\x00" as *const u8 as
                         *const libc::c_char, 5212 as libc::c_int);
}
// Scene Draw Config 32
#[no_mangle]
pub unsafe extern "C" fn func_8009A798(mut globalCtx: *mut GlobalContext) {
    let mut gameplayFrames: u32_0 = 0;
    let mut __gfxCtx: *mut GraphicsContext = 0 as *mut GraphicsContext;
    let mut dispRefs: [*mut Gfx; 4] = [0 as *mut Gfx; 4];
    __gfxCtx = (*globalCtx).state.gfxCtx;
    Graph_OpenDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                    b"../z_scene_table.c\x00" as *const u8 as
                        *const libc::c_char, 5226 as libc::c_int);
    gameplayFrames = (*globalCtx).gameplayFrames;
    let fresh63 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g: *mut Gfx = fresh63;
    (*_g).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x8 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g).words.w1 =
        Gfx_TexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int as u32_0,
                      gameplayFrames.wrapping_mul(2 as libc::c_int as
                                                      libc::c_uint).wrapping_rem(256
                                                                                     as
                                                                                     libc::c_int
                                                                                     as
                                                                                     libc::c_uint),
                      64 as libc::c_int, 64 as libc::c_int) as libc::c_uint;
    let fresh64 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_0: *mut Gfx = fresh64;
    (*_g_0).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_0).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh65 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_1: *mut Gfx = fresh65;
    (*_g_1).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_1).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh66 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_2: *mut Gfx = fresh66;
    (*_g_2).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0xa as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_2).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         (127 as libc::c_int as
                              libc::c_uint).wrapping_sub(gameplayFrames.wrapping_rem(128
                                                                                         as
                                                                                         libc::c_int
                                                                                         as
                                                                                         libc::c_uint)),
                         gameplayFrames.wrapping_mul(1 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int,
                         1 as libc::c_int,
                         gameplayFrames.wrapping_rem(128 as libc::c_int as
                                                         libc::c_uint),
                         gameplayFrames.wrapping_mul(1 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int) as
            libc::c_uint;
    let fresh67 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_3: *mut Gfx = fresh67;
    (*_g_3).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x9 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_3).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         (127 as libc::c_int as
                              libc::c_uint).wrapping_sub(gameplayFrames.wrapping_mul(1
                                                                                         as
                                                                                         libc::c_int
                                                                                         as
                                                                                         libc::c_uint).wrapping_rem(128
                                                                                                                        as
                                                                                                                        libc::c_int
                                                                                                                        as
                                                                                                                        libc::c_uint)),
                         gameplayFrames.wrapping_mul(1 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(256
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 64 as libc::c_int,
                         1 as libc::c_int, 0 as libc::c_int as u32_0,
                         0 as libc::c_int as u32_0, 32 as libc::c_int,
                         128 as libc::c_int) as libc::c_uint;
    let fresh68 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_4: *mut Gfx = fresh68;
    (*_g_4).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_4).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh69 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_5: *mut Gfx = fresh69;
    (*_g_5).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_5).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh70 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_6: *mut Gfx = fresh70;
    (*_g_6).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_6).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh71 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_7: *mut Gfx = fresh71;
    (*_g_7).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_7).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    Graph_CloseDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                     b"../z_scene_table.c\x00" as *const u8 as
                         *const libc::c_char, 5264 as libc::c_int);
}
// Scene Draw Config 33
#[no_mangle]
pub unsafe extern "C" fn func_8009A9DC(mut globalCtx: *mut GlobalContext) {
    let mut gameplayFrames: u32_0 = 0;
    let mut __gfxCtx: *mut GraphicsContext = 0 as *mut GraphicsContext;
    let mut dispRefs: [*mut Gfx; 4] = [0 as *mut Gfx; 4];
    __gfxCtx = (*globalCtx).state.gfxCtx;
    Graph_OpenDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                    b"../z_scene_table.c\x00" as *const u8 as
                        *const libc::c_char, 5278 as libc::c_int);
    gameplayFrames = (*globalCtx).gameplayFrames;
    let fresh72 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g: *mut Gfx = fresh72;
    (*_g).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x8 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         (127 as libc::c_int as
                              libc::c_uint).wrapping_sub(gameplayFrames.wrapping_rem(128
                                                                                         as
                                                                                         libc::c_int
                                                                                         as
                                                                                         libc::c_uint)),
                         gameplayFrames.wrapping_mul(3 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(256
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 64 as libc::c_int,
                         1 as libc::c_int,
                         gameplayFrames.wrapping_rem(128 as libc::c_int as
                                                         libc::c_uint),
                         gameplayFrames.wrapping_mul(3 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(256
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 64 as libc::c_int) as
            libc::c_uint;
    let fresh73 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_0: *mut Gfx = fresh73;
    (*_g_0).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x9 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_0).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         (127 as libc::c_int as
                              libc::c_uint).wrapping_sub(gameplayFrames.wrapping_rem(128
                                                                                         as
                                                                                         libc::c_int
                                                                                         as
                                                                                         libc::c_uint)),
                         gameplayFrames.wrapping_mul(3 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int,
                         1 as libc::c_int,
                         gameplayFrames.wrapping_rem(128 as libc::c_int as
                                                         libc::c_uint),
                         gameplayFrames.wrapping_mul(3 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int) as
            libc::c_uint;
    let fresh74 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_1: *mut Gfx = fresh74;
    (*_g_1).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_1).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh75 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_2: *mut Gfx = fresh75;
    (*_g_2).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_2).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh76 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_3: *mut Gfx = fresh76;
    (*_g_3).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_3).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh77 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_4: *mut Gfx = fresh77;
    (*_g_4).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_4).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    Graph_CloseDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                     b"../z_scene_table.c\x00" as *const u8 as
                         *const libc::c_char, 5301 as libc::c_int);
}
// Scene Draw Config 48
#[no_mangle]
pub unsafe extern "C" fn func_8009AB98(mut globalCtx: *mut GlobalContext) {
    let mut gameplayFrames: u32_0 = 0;
    let mut __gfxCtx: *mut GraphicsContext = 0 as *mut GraphicsContext;
    let mut dispRefs: [*mut Gfx; 4] = [0 as *mut Gfx; 4];
    __gfxCtx = (*globalCtx).state.gfxCtx;
    Graph_OpenDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                    b"../z_scene_table.c\x00" as *const u8 as
                        *const libc::c_char, 5317 as libc::c_int);
    gameplayFrames = (*globalCtx).gameplayFrames;
    let fresh78 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g: *mut Gfx = fresh78;
    (*_g).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x8 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g).words.w1 =
        Gfx_TexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int as u32_0,
                      gameplayFrames.wrapping_rem(64 as libc::c_int as
                                                      libc::c_uint),
                      256 as libc::c_int, 16 as libc::c_int) as libc::c_uint;
    let fresh79 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_0: *mut Gfx = fresh79;
    (*_g_0).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_0).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh80 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_1: *mut Gfx = fresh80;
    (*_g_1).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_1).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh81 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_2: *mut Gfx = fresh81;
    (*_g_2).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_2).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh82 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_3: *mut Gfx = fresh82;
    (*_g_3).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_3).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    Graph_CloseDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                     b"../z_scene_table.c\x00" as *const u8 as
                         *const libc::c_char, 5330 as libc::c_int);
}
// Scene Draw Config 39
#[no_mangle]
pub unsafe extern "C" fn func_8009ACA8(mut globalCtx: *mut GlobalContext) {
    let mut gameplayFrames: u32_0 = 0;
    let mut __gfxCtx: *mut GraphicsContext = 0 as *mut GraphicsContext;
    let mut dispRefs: [*mut Gfx; 4] = [0 as *mut Gfx; 4];
    __gfxCtx = (*globalCtx).state.gfxCtx;
    Graph_OpenDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                    b"../z_scene_table.c\x00" as *const u8 as
                        *const libc::c_char, 5346 as libc::c_int);
    gameplayFrames = (*globalCtx).gameplayFrames;
    let fresh83 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g: *mut Gfx = fresh83;
    (*_g).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x8 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         (127 as libc::c_int as
                              libc::c_uint).wrapping_sub(gameplayFrames.wrapping_rem(128
                                                                                         as
                                                                                         libc::c_int
                                                                                         as
                                                                                         libc::c_uint)),
                         gameplayFrames.wrapping_mul(3 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int,
                         1 as libc::c_int,
                         gameplayFrames.wrapping_rem(128 as libc::c_int as
                                                         libc::c_uint),
                         gameplayFrames.wrapping_mul(3 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int) as
            libc::c_uint;
    let fresh84 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_0: *mut Gfx = fresh84;
    (*_g_0).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x9 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_0).words.w1 =
        Gfx_TexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int as u32_0,
                      gameplayFrames.wrapping_rem(64 as libc::c_int as
                                                      libc::c_uint),
                      256 as libc::c_int, 16 as libc::c_int) as libc::c_uint;
    let fresh85 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_1: *mut Gfx = fresh85;
    (*_g_1).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_1).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh86 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_2: *mut Gfx = fresh86;
    (*_g_2).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_2).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh87 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_3: *mut Gfx = fresh87;
    (*_g_3).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_3).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh88 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_4: *mut Gfx = fresh88;
    (*_g_4).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_4).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    Graph_CloseDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                     b"../z_scene_table.c\x00" as *const u8 as
                         *const libc::c_char, 5367 as libc::c_int);
}
// Scene Draw Config 24
#[no_mangle]
pub unsafe extern "C" fn func_8009AE30(mut globalCtx: *mut GlobalContext) {
    let mut gameplayFrames: u32_0 = 0;
    let mut __gfxCtx: *mut GraphicsContext = 0 as *mut GraphicsContext;
    let mut dispRefs: [*mut Gfx; 4] = [0 as *mut Gfx; 4];
    __gfxCtx = (*globalCtx).state.gfxCtx;
    Graph_OpenDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                    b"../z_scene_table.c\x00" as *const u8 as
                        *const libc::c_char, 5384 as libc::c_int);
    gameplayFrames = (*globalCtx).gameplayFrames;
    if (*globalCtx).sceneNum as libc::c_int == SCENE_HAKADAN_BS as libc::c_int
       {
        let fresh89 = (*__gfxCtx).polyOpa.p;
        (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
        let mut _g: *mut Gfx = fresh89;
        (*_g).words.w0 =
            (0xdb as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int
                |
                (0x6 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    16 as libc::c_int |
                ((0x8 as libc::c_int * 4 as libc::c_int) as u32_0 &
                     (((0x1 as libc::c_int) << 16 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int;
        (*_g).words.w1 =
            Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                             gameplayFrames.wrapping_mul(2 as libc::c_int as
                                                             libc::c_uint).wrapping_rem(128
                                                                                            as
                                                                                            libc::c_int
                                                                                            as
                                                                                            libc::c_uint),
                             0 as libc::c_int as u32_0, 32 as libc::c_int,
                             32 as libc::c_int, 1 as libc::c_int,
                             gameplayFrames.wrapping_mul(2 as libc::c_int as
                                                             libc::c_uint).wrapping_rem(128
                                                                                            as
                                                                                            libc::c_int
                                                                                            as
                                                                                            libc::c_uint),
                             0 as libc::c_int as u32_0, 32 as libc::c_int,
                             32 as libc::c_int) as libc::c_uint
    } else {
        let fresh90 = (*__gfxCtx).polyXlu.p;
        (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
        let mut _g_0: *mut Gfx = fresh90;
        (*_g_0).words.w0 =
            (0xdb as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int
                |
                (0x6 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    16 as libc::c_int |
                ((0x8 as libc::c_int * 4 as libc::c_int) as u32_0 &
                     (((0x1 as libc::c_int) << 16 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int;
        (*_g_0).words.w1 =
            Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                             gameplayFrames.wrapping_mul(2 as libc::c_int as
                                                             libc::c_uint).wrapping_rem(128
                                                                                            as
                                                                                            libc::c_int
                                                                                            as
                                                                                            libc::c_uint),
                             0 as libc::c_int as u32_0, 32 as libc::c_int,
                             32 as libc::c_int, 1 as libc::c_int,
                             gameplayFrames.wrapping_mul(2 as libc::c_int as
                                                             libc::c_uint).wrapping_rem(128
                                                                                            as
                                                                                            libc::c_int
                                                                                            as
                                                                                            libc::c_uint),
                             0 as libc::c_int as u32_0, 32 as libc::c_int,
                             32 as libc::c_int) as libc::c_uint
    }
    let fresh91 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_1: *mut Gfx = fresh91;
    (*_g_1).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_1).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh92 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_2: *mut Gfx = fresh92;
    (*_g_2).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_2).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh93 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_3: *mut Gfx = fresh93;
    (*_g_3).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_3).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh94 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_4: *mut Gfx = fresh94;
    (*_g_4).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_4).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    Graph_CloseDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                     b"../z_scene_table.c\x00" as *const u8 as
                         *const libc::c_char, 5416 as libc::c_int);
}
#[no_mangle]
pub static mut sThievesHideoutEntranceTextures: [*mut libc::c_void; 2] =
    unsafe {
        [gThievesHideoutDayEntranceTex.as_ptr() as *mut _ as
             *mut libc::c_void,
         gThievesHideoutNightEntranceTex.as_ptr() as *mut _ as
             *mut libc::c_void]
    };
// Scene Draw Config 40
#[no_mangle]
pub unsafe extern "C" fn func_8009AFE0(mut globalCtx: *mut GlobalContext) {
    let mut gameplayFrames: u32_0 = 0;
    let mut __gfxCtx: *mut GraphicsContext = 0 as *mut GraphicsContext;
    let mut dispRefs: [*mut Gfx; 4] = [0 as *mut Gfx; 4];
    __gfxCtx = (*globalCtx).state.gfxCtx;
    Graph_OpenDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                    b"../z_scene_table.c\x00" as *const u8 as
                        *const libc::c_char, 5490 as libc::c_int);
    gameplayFrames = (*globalCtx).gameplayFrames;
    let fresh95 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g: *mut Gfx = fresh95;
    (*_g).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x9 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g).words.w1 =
        Gfx_TexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int as u32_0,
                      gameplayFrames.wrapping_mul(3 as libc::c_int as
                                                      libc::c_uint).wrapping_rem(128
                                                                                     as
                                                                                     libc::c_int
                                                                                     as
                                                                                     libc::c_uint),
                      32 as libc::c_int, 32 as libc::c_int) as libc::c_uint;
    let mut pad: [s32; 2] = [0; 2];
    let fresh96 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_0: *mut Gfx = fresh96;
    (*_g_0).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x8 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_0).words.w1 =
        gSegments[((sThievesHideoutEntranceTextures[gSaveContext.nightFlag as
                                                        usize] as u32_0) <<
                       4 as libc::c_int >> 28 as libc::c_int) as
                      usize].wrapping_add(sThievesHideoutEntranceTextures[gSaveContext.nightFlag
                                                                              as
                                                                              usize]
                                              as u32_0 &
                                              0xffffff as libc::c_int as
                                                  libc::c_uint).wrapping_add(0x80000000
                                                                                 as
                                                                                 libc::c_uint)
            as *mut libc::c_void as libc::c_uint;
    Graph_CloseDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                     b"../z_scene_table.c\x00" as *const u8 as
                         *const libc::c_char, 5507 as libc::c_int);
}
#[no_mangle]
pub static mut D_8012A330: [*mut libc::c_void; 2] =
    unsafe {
        [gWaterTempleDayEntranceTex.as_ptr() as *mut _ as *mut libc::c_void,
         gWaterTempleNightEntranceTex.as_ptr() as *mut _ as *mut libc::c_void]
    };
// Scene Draw Config 23 (Water Temple)
#[no_mangle]
pub unsafe extern "C" fn func_8009B0FC(mut globalCtx: *mut GlobalContext) {
    let mut gameplayFrames: u32_0 = 0;
    let mut spB0: s32 = 0;
    let mut spAC: s32 = 0;
    let mut __gfxCtx: *mut GraphicsContext = 0 as *mut GraphicsContext;
    let mut dispRefs: [*mut Gfx; 4] = [0 as *mut Gfx; 4];
    __gfxCtx = (*globalCtx).state.gfxCtx;
    Graph_OpenDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                    b"../z_scene_table.c\x00" as *const u8 as
                        *const libc::c_char, 5535 as libc::c_int);
    // Necessary to match
    spB0 =
        (*globalCtx).roomCtx.unk_74[1 as libc::c_int as usize] as libc::c_int
            >> 8 as libc::c_int & 0xff as libc::c_int;
    spAC =
        (*globalCtx).roomCtx.unk_74[1 as libc::c_int as usize] as libc::c_int
            & 0xff as libc::c_int;
    gameplayFrames = (*globalCtx).gameplayFrames;
    let fresh97 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g: *mut Gfx = fresh97;
    (*_g).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x8 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g).words.w1 =
        gSegments[((D_8012A330[gSaveContext.nightFlag as usize] as u32_0) <<
                       4 as libc::c_int >> 28 as libc::c_int) as
                      usize].wrapping_add(D_8012A330[gSaveContext.nightFlag as
                                                         usize] as u32_0 &
                                              0xffffff as libc::c_int as
                                                  libc::c_uint).wrapping_add(0x80000000
                                                                                 as
                                                                                 libc::c_uint)
            as *mut libc::c_void as libc::c_uint;
    if spB0 == 1 as libc::c_int {
        let fresh98 = (*__gfxCtx).polyOpa.p;
        (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
        let mut _g_0: *mut Gfx = fresh98;
        (*_g_0).words.w0 =
            (0xdb as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int
                |
                (0x6 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    16 as libc::c_int |
                ((0x8 as libc::c_int * 4 as libc::c_int) as u32_0 &
                     (((0x1 as libc::c_int) << 16 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int;
        (*_g_0).words.w1 =
            Gfx_TwoTexScrollEnvColor((*globalCtx).state.gfxCtx,
                                     0 as libc::c_int,
                                     gameplayFrames.wrapping_mul(1 as
                                                                     libc::c_int
                                                                     as
                                                                     libc::c_uint),
                                     0 as libc::c_int as u32_0,
                                     32 as libc::c_int, 32 as libc::c_int,
                                     1 as libc::c_int,
                                     0 as libc::c_int as u32_0,
                                     0 as libc::c_int as u32_0,
                                     32 as libc::c_int, 32 as libc::c_int,
                                     0 as libc::c_int, 0 as libc::c_int,
                                     0 as libc::c_int, spAC) as libc::c_uint
    } else if spB0 < 1 as libc::c_int {
        let fresh99 = (*__gfxCtx).polyOpa.p;
        (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
        let mut _g_1: *mut Gfx = fresh99;
        (*_g_1).words.w0 =
            (0xdb as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int
                |
                (0x6 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    16 as libc::c_int |
                ((0x8 as libc::c_int * 4 as libc::c_int) as u32_0 &
                     (((0x1 as libc::c_int) << 16 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int;
        (*_g_1).words.w1 =
            Gfx_TwoTexScrollEnvColor((*globalCtx).state.gfxCtx,
                                     0 as libc::c_int,
                                     gameplayFrames.wrapping_mul(1 as
                                                                     libc::c_int
                                                                     as
                                                                     libc::c_uint),
                                     0 as libc::c_int as u32_0,
                                     32 as libc::c_int, 32 as libc::c_int,
                                     1 as libc::c_int,
                                     0 as libc::c_int as u32_0,
                                     0 as libc::c_int as u32_0,
                                     32 as libc::c_int, 32 as libc::c_int,
                                     0 as libc::c_int, 0 as libc::c_int,
                                     0 as libc::c_int, 255 as libc::c_int) as
                libc::c_uint
    } else {
        let fresh100 = (*__gfxCtx).polyOpa.p;
        (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
        let mut _g_2: *mut Gfx = fresh100;
        (*_g_2).words.w0 =
            (0xdb as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int
                |
                (0x6 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    16 as libc::c_int |
                ((0x8 as libc::c_int * 4 as libc::c_int) as u32_0 &
                     (((0x1 as libc::c_int) << 16 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int;
        (*_g_2).words.w1 =
            Gfx_TwoTexScrollEnvColor((*globalCtx).state.gfxCtx,
                                     0 as libc::c_int,
                                     gameplayFrames.wrapping_mul(1 as
                                                                     libc::c_int
                                                                     as
                                                                     libc::c_uint),
                                     0 as libc::c_int as u32_0,
                                     32 as libc::c_int, 32 as libc::c_int,
                                     1 as libc::c_int,
                                     0 as libc::c_int as u32_0,
                                     0 as libc::c_int as u32_0,
                                     32 as libc::c_int, 32 as libc::c_int,
                                     0 as libc::c_int, 0 as libc::c_int,
                                     0 as libc::c_int, 160 as libc::c_int) as
                libc::c_uint
    }
    if spB0 == 2 as libc::c_int {
        let fresh101 = (*__gfxCtx).polyOpa.p;
        (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
        let mut _g_3: *mut Gfx = fresh101;
        (*_g_3).words.w0 =
            (0xdb as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int
                |
                (0x6 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    16 as libc::c_int |
                ((0x9 as libc::c_int * 4 as libc::c_int) as u32_0 &
                     (((0x1 as libc::c_int) << 16 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int;
        (*_g_3).words.w1 =
            Gfx_TwoTexScrollEnvColor((*globalCtx).state.gfxCtx,
                                     0 as libc::c_int,
                                     gameplayFrames.wrapping_mul(1 as
                                                                     libc::c_int
                                                                     as
                                                                     libc::c_uint),
                                     0 as libc::c_int as u32_0,
                                     32 as libc::c_int, 32 as libc::c_int,
                                     1 as libc::c_int,
                                     0 as libc::c_int as u32_0,
                                     0 as libc::c_int as u32_0,
                                     32 as libc::c_int, 32 as libc::c_int,
                                     0 as libc::c_int, 0 as libc::c_int,
                                     0 as libc::c_int, spAC) as libc::c_uint
    } else if spB0 < 2 as libc::c_int {
        let fresh102 = (*__gfxCtx).polyOpa.p;
        (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
        let mut _g_4: *mut Gfx = fresh102;
        (*_g_4).words.w0 =
            (0xdb as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int
                |
                (0x6 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    16 as libc::c_int |
                ((0x9 as libc::c_int * 4 as libc::c_int) as u32_0 &
                     (((0x1 as libc::c_int) << 16 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int;
        (*_g_4).words.w1 =
            Gfx_TwoTexScrollEnvColor((*globalCtx).state.gfxCtx,
                                     0 as libc::c_int,
                                     gameplayFrames.wrapping_mul(1 as
                                                                     libc::c_int
                                                                     as
                                                                     libc::c_uint),
                                     0 as libc::c_int as u32_0,
                                     32 as libc::c_int, 32 as libc::c_int,
                                     1 as libc::c_int,
                                     0 as libc::c_int as u32_0,
                                     0 as libc::c_int as u32_0,
                                     32 as libc::c_int, 32 as libc::c_int,
                                     0 as libc::c_int, 0 as libc::c_int,
                                     0 as libc::c_int, 255 as libc::c_int) as
                libc::c_uint
    } else {
        let fresh103 = (*__gfxCtx).polyOpa.p;
        (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
        let mut _g_5: *mut Gfx = fresh103;
        (*_g_5).words.w0 =
            (0xdb as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int
                |
                (0x6 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    16 as libc::c_int |
                ((0x9 as libc::c_int * 4 as libc::c_int) as u32_0 &
                     (((0x1 as libc::c_int) << 16 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int;
        (*_g_5).words.w1 =
            Gfx_TwoTexScrollEnvColor((*globalCtx).state.gfxCtx,
                                     0 as libc::c_int,
                                     gameplayFrames.wrapping_mul(1 as
                                                                     libc::c_int
                                                                     as
                                                                     libc::c_uint),
                                     0 as libc::c_int as u32_0,
                                     32 as libc::c_int, 32 as libc::c_int,
                                     1 as libc::c_int,
                                     0 as libc::c_int as u32_0,
                                     0 as libc::c_int as u32_0,
                                     32 as libc::c_int, 32 as libc::c_int,
                                     0 as libc::c_int, 0 as libc::c_int,
                                     0 as libc::c_int, 160 as libc::c_int) as
                libc::c_uint
    }
    if spB0 != 0 as libc::c_int {
        let fresh104 = (*__gfxCtx).polyOpa.p;
        (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
        let mut _g_6: *mut Gfx = fresh104;
        (*_g_6).words.w0 =
            (0xdb as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int
                |
                (0x6 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    16 as libc::c_int |
                ((0xa as libc::c_int * 4 as libc::c_int) as u32_0 &
                     (((0x1 as libc::c_int) << 16 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int;
        (*_g_6).words.w1 =
            Gfx_TwoTexScrollEnvColor((*globalCtx).state.gfxCtx,
                                     0 as libc::c_int,
                                     gameplayFrames.wrapping_mul(1 as
                                                                     libc::c_int
                                                                     as
                                                                     libc::c_uint),
                                     0 as libc::c_int as u32_0,
                                     32 as libc::c_int, 32 as libc::c_int,
                                     1 as libc::c_int,
                                     0 as libc::c_int as u32_0,
                                     0 as libc::c_int as u32_0,
                                     32 as libc::c_int, 32 as libc::c_int,
                                     0 as libc::c_int, 0 as libc::c_int,
                                     0 as libc::c_int, 160 as libc::c_int) as
                libc::c_uint;
        let fresh105 = (*__gfxCtx).polyOpa.p;
        (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
        let mut _g_7: *mut Gfx = fresh105;
        (*_g_7).words.w0 =
            (0xdb as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int
                |
                (0x6 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    16 as libc::c_int |
                ((0xb as libc::c_int * 4 as libc::c_int) as u32_0 &
                     (((0x1 as libc::c_int) << 16 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int;
        (*_g_7).words.w1 =
            Gfx_TwoTexScrollEnvColor((*globalCtx).state.gfxCtx,
                                     0 as libc::c_int,
                                     gameplayFrames.wrapping_mul(3 as
                                                                     libc::c_int
                                                                     as
                                                                     libc::c_uint),
                                     0 as libc::c_int as u32_0,
                                     32 as libc::c_int, 32 as libc::c_int,
                                     1 as libc::c_int,
                                     0 as libc::c_int as u32_0,
                                     0 as libc::c_int as u32_0,
                                     32 as libc::c_int, 32 as libc::c_int,
                                     0 as libc::c_int, 0 as libc::c_int,
                                     0 as libc::c_int, 180 as libc::c_int) as
                libc::c_uint
    } else {
        let fresh106 = (*__gfxCtx).polyOpa.p;
        (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
        let mut _g_8: *mut Gfx = fresh106;
        (*_g_8).words.w0 =
            (0xdb as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int
                |
                (0x6 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    16 as libc::c_int |
                ((0xa as libc::c_int * 4 as libc::c_int) as u32_0 &
                     (((0x1 as libc::c_int) << 16 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int;
        (*_g_8).words.w1 =
            Gfx_TwoTexScrollEnvColor((*globalCtx).state.gfxCtx,
                                     0 as libc::c_int,
                                     gameplayFrames.wrapping_mul(1 as
                                                                     libc::c_int
                                                                     as
                                                                     libc::c_uint).wrapping_rem(128
                                                                                                    as
                                                                                                    libc::c_int
                                                                                                    as
                                                                                                    libc::c_uint),
                                     0 as libc::c_int as u32_0,
                                     32 as libc::c_int, 32 as libc::c_int,
                                     1 as libc::c_int,
                                     0 as libc::c_int as u32_0,
                                     0 as libc::c_int as u32_0,
                                     32 as libc::c_int, 32 as libc::c_int,
                                     0 as libc::c_int, 0 as libc::c_int,
                                     0 as libc::c_int,
                                     160 as libc::c_int +
                                         (spAC as libc::c_float / 200.0f32 *
                                              95.0f32) as s32) as
                libc::c_uint;
        let fresh107 = (*__gfxCtx).polyOpa.p;
        (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
        let mut _g_9: *mut Gfx = fresh107;
        (*_g_9).words.w0 =
            (0xdb as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int
                |
                (0x6 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    16 as libc::c_int |
                ((0xb as libc::c_int * 4 as libc::c_int) as u32_0 &
                     (((0x1 as libc::c_int) << 16 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int;
        (*_g_9).words.w1 =
            Gfx_TwoTexScrollEnvColor((*globalCtx).state.gfxCtx,
                                     0 as libc::c_int,
                                     gameplayFrames.wrapping_mul(3 as
                                                                     libc::c_int
                                                                     as
                                                                     libc::c_uint),
                                     0 as libc::c_int as u32_0,
                                     32 as libc::c_int, 32 as libc::c_int,
                                     1 as libc::c_int,
                                     0 as libc::c_int as u32_0,
                                     0 as libc::c_int as u32_0,
                                     32 as libc::c_int, 32 as libc::c_int,
                                     0 as libc::c_int, 0 as libc::c_int,
                                     0 as libc::c_int,
                                     185 as libc::c_int +
                                         (spAC as libc::c_float / 200.0f32 *
                                              70.0f32) as s32) as libc::c_uint
    }
    let fresh108 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_10: *mut Gfx = fresh108;
    (*_g_10).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0xc as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_10).words.w1 =
        Gfx_TwoTexScrollEnvColor((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                                 gameplayFrames.wrapping_mul(1 as libc::c_int
                                                                 as
                                                                 libc::c_uint),
                                 gameplayFrames.wrapping_mul(1 as libc::c_int
                                                                 as
                                                                 libc::c_uint),
                                 32 as libc::c_int, 32 as libc::c_int,
                                 1 as libc::c_int, 0 as libc::c_int as u32_0,
                                 (127 as libc::c_int as
                                      libc::c_uint).wrapping_sub(gameplayFrames.wrapping_mul(1
                                                                                                 as
                                                                                                 libc::c_int
                                                                                                 as
                                                                                                 libc::c_uint)),
                                 32 as libc::c_int, 32 as libc::c_int,
                                 0 as libc::c_int, 0 as libc::c_int,
                                 0 as libc::c_int, 128 as libc::c_int) as
            libc::c_uint;
    let fresh109 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_11: *mut Gfx = fresh109;
    (*_g_11).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0xd as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_11).words.w1 =
        Gfx_TwoTexScrollEnvColor((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                                 gameplayFrames.wrapping_mul(4 as libc::c_int
                                                                 as
                                                                 libc::c_uint),
                                 0 as libc::c_int as u32_0, 32 as libc::c_int,
                                 32 as libc::c_int, 1 as libc::c_int,
                                 gameplayFrames.wrapping_mul(4 as libc::c_int
                                                                 as
                                                                 libc::c_uint),
                                 0 as libc::c_int as u32_0, 32 as libc::c_int,
                                 32 as libc::c_int, 0 as libc::c_int,
                                 0 as libc::c_int, 0 as libc::c_int,
                                 128 as libc::c_int) as libc::c_uint;
    let mut pad: [s32; 2] = [0; 2];
    Graph_CloseDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                     b"../z_scene_table.c\x00" as *const u8 as
                         *const libc::c_char, 5644 as libc::c_int);
}
// Scene Draw Config 29
#[no_mangle]
pub unsafe extern "C" fn func_8009B86C(mut globalCtx: *mut GlobalContext) {
    let mut gameplayFrames: u32_0 = 0;
    let mut __gfxCtx: *mut GraphicsContext = 0 as *mut GraphicsContext;
    let mut dispRefs: [*mut Gfx; 4] = [0 as *mut Gfx; 4];
    __gfxCtx = (*globalCtx).state.gfxCtx;
    Graph_OpenDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                    b"../z_scene_table.c\x00" as *const u8 as
                        *const libc::c_char, 5791 as libc::c_int);
    gameplayFrames = (*globalCtx).gameplayFrames;
    let fresh110 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g: *mut Gfx = fresh110;
    (*_g).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x8 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         gameplayFrames.wrapping_mul(1 as libc::c_int as
                                                         libc::c_uint),
                         0 as libc::c_int as u32_0, 32 as libc::c_int,
                         32 as libc::c_int, 1 as libc::c_int,
                         0 as libc::c_int as u32_0, 0 as libc::c_int as u32_0,
                         32 as libc::c_int, 32 as libc::c_int) as
            libc::c_uint;
    let fresh111 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_0: *mut Gfx = fresh111;
    (*_g_0).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_0).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh112 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_1: *mut Gfx = fresh112;
    (*_g_1).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_1).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            ((*globalCtx).roomCtx.unk_74[0 as libc::c_int as usize] as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh113 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_2: *mut Gfx = fresh113;
    (*_g_2).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_2).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh114 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_3: *mut Gfx = fresh114;
    (*_g_3).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_3).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (145 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    Graph_CloseDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                     b"../z_scene_table.c\x00" as *const u8 as
                         *const libc::c_char, 5808 as libc::c_int);
}
// Scene Draw Config 34
#[no_mangle]
pub unsafe extern "C" fn func_8009B9BC(mut globalCtx: *mut GlobalContext) {
    let mut gameplayFrames: u32_0 = 0;
    let mut __gfxCtx: *mut GraphicsContext = 0 as *mut GraphicsContext;
    let mut dispRefs: [*mut Gfx; 4] = [0 as *mut Gfx; 4];
    __gfxCtx = (*globalCtx).state.gfxCtx;
    Graph_OpenDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                    b"../z_scene_table.c\x00" as *const u8 as
                        *const libc::c_char, 5822 as libc::c_int);
    gameplayFrames = (*globalCtx).gameplayFrames;
    let fresh115 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g: *mut Gfx = fresh115;
    (*_g).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x8 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g).words.w1 =
        Gfx_TexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int as u32_0,
                      gameplayFrames.wrapping_rem(64 as libc::c_int as
                                                      libc::c_uint),
                      4 as libc::c_int, 16 as libc::c_int) as libc::c_uint;
    let fresh116 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_0: *mut Gfx = fresh116;
    (*_g_0).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_0).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh117 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_1: *mut Gfx = fresh117;
    (*_g_1).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_1).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    Graph_CloseDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                     b"../z_scene_table.c\x00" as *const u8 as
                         *const libc::c_char, 5836 as libc::c_int);
}
// Scene Draw Config 35
#[no_mangle]
pub unsafe extern "C" fn func_8009BAA4(mut globalCtx: *mut GlobalContext) {
    let mut gameplayFrames: u32_0 = 0;
    let mut __gfxCtx: *mut GraphicsContext = 0 as *mut GraphicsContext;
    let mut dispRefs: [*mut Gfx; 4] = [0 as *mut Gfx; 4];
    __gfxCtx = (*globalCtx).state.gfxCtx;
    Graph_OpenDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                    b"../z_scene_table.c\x00" as *const u8 as
                        *const libc::c_char, 5850 as libc::c_int);
    gameplayFrames = (*globalCtx).gameplayFrames;
    let fresh118 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g: *mut Gfx = fresh118;
    (*_g).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x8 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         (127 as libc::c_int as
                              libc::c_uint).wrapping_sub(gameplayFrames.wrapping_rem(128
                                                                                         as
                                                                                         libc::c_int
                                                                                         as
                                                                                         libc::c_uint)),
                         gameplayFrames.wrapping_mul(3 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int,
                         1 as libc::c_int,
                         gameplayFrames.wrapping_rem(128 as libc::c_int as
                                                         libc::c_uint),
                         gameplayFrames.wrapping_mul(3 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int) as
            libc::c_uint;
    if (*globalCtx).sceneNum as libc::c_int ==
           SCENE_HAIRAL_NIWA as libc::c_int {
        let fresh119 = (*__gfxCtx).polyXlu.p;
        (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
        let mut _g_0: *mut Gfx = fresh119;
        (*_g_0).words.w0 =
            (0xdb as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int
                |
                (0x6 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    16 as libc::c_int |
                ((0x9 as libc::c_int * 4 as libc::c_int) as u32_0 &
                     (((0x1 as libc::c_int) << 16 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int;
        (*_g_0).words.w1 =
            Gfx_TexScroll((*globalCtx).state.gfxCtx,
                          0 as libc::c_int as u32_0,
                          gameplayFrames.wrapping_mul(10 as libc::c_int as
                                                          libc::c_uint).wrapping_rem(256
                                                                                         as
                                                                                         libc::c_int
                                                                                         as
                                                                                         libc::c_uint),
                          32 as libc::c_int, 64 as libc::c_int) as
                libc::c_uint
    }
    let fresh120 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_1: *mut Gfx = fresh120;
    (*_g_1).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_1).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh121 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_2: *mut Gfx = fresh121;
    (*_g_2).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_2).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh122 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_3: *mut Gfx = fresh122;
    (*_g_3).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_3).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh123 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_4: *mut Gfx = fresh123;
    (*_g_4).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_4).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    Graph_CloseDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                     b"../z_scene_table.c\x00" as *const u8 as
                         *const libc::c_char, 5876 as libc::c_int);
}
// Scene Draw Config 36
#[no_mangle]
pub unsafe extern "C" fn func_8009BC44(mut globalCtx: *mut GlobalContext) {
    let mut gameplayFrames: u32_0 = 0;
    let mut sp83: s8 = 0;
    // Necessary to match
    sp83 =
        (coss(((*globalCtx).gameplayFrames.wrapping_mul(1500 as libc::c_int as
                                                            libc::c_uint) &
                   0xffff as libc::c_int as libc::c_uint) as u16_0) as
             libc::c_int >> 8 as libc::c_int) as s8;
    let mut __gfxCtx: *mut GraphicsContext = 0 as *mut GraphicsContext;
    let mut dispRefs: [*mut Gfx; 4] = [0 as *mut Gfx; 4];
    __gfxCtx = (*globalCtx).state.gfxCtx;
    Graph_OpenDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                    b"../z_scene_table.c\x00" as *const u8 as
                        *const libc::c_char, 5894 as libc::c_int);
    gameplayFrames = (*globalCtx).gameplayFrames;
    if (*globalCtx).sceneNum as libc::c_int == SCENE_GANON_TOU as libc::c_int
       {
        let fresh124 = (*__gfxCtx).polyXlu.p;
        (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
        let mut _g: *mut Gfx = fresh124;
        (*_g).words.w0 =
            (0xdb as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int
                |
                (0x6 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    16 as libc::c_int |
                ((0x9 as libc::c_int * 4 as libc::c_int) as u32_0 &
                     (((0x1 as libc::c_int) << 16 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int;
        (*_g).words.w1 =
            Gfx_TexScroll((*globalCtx).state.gfxCtx,
                          0 as libc::c_int as u32_0,
                          gameplayFrames.wrapping_mul(1 as libc::c_int as
                                                          libc::c_uint).wrapping_rem(256
                                                                                         as
                                                                                         libc::c_int
                                                                                         as
                                                                                         libc::c_uint),
                          64 as libc::c_int, 64 as libc::c_int) as
                libc::c_uint;
        let fresh125 = (*__gfxCtx).polyXlu.p;
        (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
        let mut _g_0: *mut Gfx = fresh125;
        (*_g_0).words.w0 =
            (0xdb as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int
                |
                (0x6 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    16 as libc::c_int |
                ((0x8 as libc::c_int * 4 as libc::c_int) as u32_0 &
                     (((0x1 as libc::c_int) << 16 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int;
        (*_g_0).words.w1 =
            Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                             0 as libc::c_int as u32_0,
                             (255 as libc::c_int as
                                  libc::c_uint).wrapping_sub(gameplayFrames.wrapping_mul(1
                                                                                             as
                                                                                             libc::c_int
                                                                                             as
                                                                                             libc::c_uint).wrapping_rem(256
                                                                                                                            as
                                                                                                                            libc::c_int
                                                                                                                            as
                                                                                                                            libc::c_uint)),
                             64 as libc::c_int, 64 as libc::c_int,
                             1 as libc::c_int, 0 as libc::c_int as u32_0,
                             gameplayFrames.wrapping_mul(1 as libc::c_int as
                                                             libc::c_uint).wrapping_rem(256
                                                                                            as
                                                                                            libc::c_int
                                                                                            as
                                                                                            libc::c_uint),
                             64 as libc::c_int, 64 as libc::c_int) as
                libc::c_uint
    }
    let fresh126 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_1: *mut Gfx = fresh126;
    (*_g_1).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0xb as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_1).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         (255 as libc::c_int as
                              libc::c_uint).wrapping_sub(gameplayFrames.wrapping_mul(1
                                                                                         as
                                                                                         libc::c_int
                                                                                         as
                                                                                         libc::c_uint).wrapping_rem(128
                                                                                                                        as
                                                                                                                        libc::c_int
                                                                                                                        as
                                                                                                                        libc::c_uint)),
                         gameplayFrames.wrapping_mul(1 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int,
                         1 as libc::c_int,
                         gameplayFrames.wrapping_mul(1 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         gameplayFrames.wrapping_mul(1 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int) as
            libc::c_uint;
    let fresh127 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_2: *mut Gfx = fresh127;
    (*_g_2).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_2).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh128 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_3: *mut Gfx = fresh128;
    (*_g_3).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_3).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh129 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_4: *mut Gfx = fresh129;
    (*_g_4).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_4).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh130 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_5: *mut Gfx = fresh130;
    (*_g_5).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_5).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    sp83 =
        ((sp83 as libc::c_int >> 1 as libc::c_int) + 192 as libc::c_int) as
            s8;
    let fresh131 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_6: *mut Gfx = fresh131;
    (*_g_6).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_6).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh132 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_7: *mut Gfx = fresh132;
    (*_g_7).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_7).words.w1 =
        (sp83 as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (sp83 as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (sp83 as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    Graph_CloseDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                     b"../z_scene_table.c\x00" as *const u8 as
                         *const libc::c_char, 5930 as libc::c_int);
}
// Screen Shake for Ganon's Tower Collapse
#[no_mangle]
pub unsafe extern "C" fn func_8009BEEC(mut globalCtx: *mut GlobalContext) {
    let mut var: s32 = 0;
    if (*globalCtx).gameplayFrames.wrapping_rem(128 as libc::c_int as
                                                    libc::c_uint) ==
           13 as libc::c_int as libc::c_uint {
        var =
            Quake_Add((*globalCtx).cameraPtrs[(*globalCtx).activeCamera as
                                                  usize],
                      2 as libc::c_int as u32_0) as s32;
        Quake_SetSpeed(var as s16, 10000 as libc::c_int as s16);
        Quake_SetQuakeValues(var as s16, 4 as libc::c_int as s16,
                             0 as libc::c_int as s16, 0 as libc::c_int as s16,
                             0 as libc::c_int as s16);
        Quake_SetCountdown(var as s16, 127 as libc::c_int as s16);
    }
    if (*globalCtx).gameplayFrames.wrapping_rem(64 as libc::c_int as
                                                    libc::c_uint) ==
           0 as libc::c_int as libc::c_uint && Rand_ZeroOne() > 0.6f32 {
        var =
            Quake_Add((*globalCtx).cameraPtrs[(*globalCtx).activeCamera as
                                                  usize],
                      3 as libc::c_int as u32_0) as s32;
        Quake_SetSpeed(var as s16,
                       (32000.0f32 + Rand_ZeroOne() * 3000.0f32) as s16);
        Quake_SetQuakeValues(var as s16,
                             (10.0f32 - Rand_ZeroOne() * 9.0f32) as s16,
                             0 as libc::c_int as s16, 0 as libc::c_int as s16,
                             0 as libc::c_int as s16);
        Quake_SetCountdown(var as s16,
                           (48.0f32 - Rand_ZeroOne() * 15.0f32) as s16);
    };
}
// Scene Draw Config 38
#[no_mangle]
pub unsafe extern "C" fn func_8009C0AC(mut globalCtx: *mut GlobalContext) {
    let mut gameplayFrames: u32_0 = 0;
    let mut sp7B: s8 = 0;
    // Necessary to match
    sp7B =
        (coss(((*globalCtx).gameplayFrames.wrapping_mul(1500 as libc::c_int as
                                                            libc::c_uint) &
                   0xffff as libc::c_int as libc::c_uint) as u16_0) as
             libc::c_int >> 8 as libc::c_int) as s8;
    let mut __gfxCtx: *mut GraphicsContext = 0 as *mut GraphicsContext;
    let mut dispRefs: [*mut Gfx; 4] = [0 as *mut Gfx; 4];
    __gfxCtx = (*globalCtx).state.gfxCtx;
    Graph_OpenDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                    b"../z_scene_table.c\x00" as *const u8 as
                        *const libc::c_char, 5968 as libc::c_int);
    gameplayFrames = (*globalCtx).gameplayFrames;
    let fresh133 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g: *mut Gfx = fresh133;
    (*_g).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x8 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         0 as libc::c_int as u32_0,
                         gameplayFrames.wrapping_mul(1 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(512
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         64 as libc::c_int, 128 as libc::c_int,
                         1 as libc::c_int, 0 as libc::c_int as u32_0,
                         (511 as libc::c_int as
                              libc::c_uint).wrapping_sub(gameplayFrames.wrapping_mul(1
                                                                                         as
                                                                                         libc::c_int
                                                                                         as
                                                                                         libc::c_uint).wrapping_rem(512
                                                                                                                        as
                                                                                                                        libc::c_int
                                                                                                                        as
                                                                                                                        libc::c_uint)),
                         64 as libc::c_int, 128 as libc::c_int) as
            libc::c_uint;
    let fresh134 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_0: *mut Gfx = fresh134;
    (*_g_0).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x9 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_0).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         0 as libc::c_int as u32_0,
                         gameplayFrames.wrapping_mul(1 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(256
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 64 as libc::c_int,
                         1 as libc::c_int, 0 as libc::c_int as u32_0,
                         (255 as libc::c_int as
                              libc::c_uint).wrapping_sub(gameplayFrames.wrapping_mul(1
                                                                                         as
                                                                                         libc::c_int
                                                                                         as
                                                                                         libc::c_uint).wrapping_rem(256
                                                                                                                        as
                                                                                                                        libc::c_int
                                                                                                                        as
                                                                                                                        libc::c_uint)),
                         32 as libc::c_int, 64 as libc::c_int) as
            libc::c_uint;
    let fresh135 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_1: *mut Gfx = fresh135;
    (*_g_1).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0xa as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_1).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         0 as libc::c_int as u32_0,
                         gameplayFrames.wrapping_mul(20 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(2048
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         16 as libc::c_int, 512 as libc::c_int,
                         1 as libc::c_int, 0 as libc::c_int as u32_0,
                         gameplayFrames.wrapping_mul(30 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(2048
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         16 as libc::c_int, 512 as libc::c_int) as
            libc::c_uint;
    let fresh136 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_2: *mut Gfx = fresh136;
    (*_g_2).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_2).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh137 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_3: *mut Gfx = fresh137;
    (*_g_3).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_3).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh138 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_4: *mut Gfx = fresh138;
    (*_g_4).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_4).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh139 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_5: *mut Gfx = fresh139;
    (*_g_5).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_5).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    sp7B =
        ((sp7B as libc::c_int >> 1 as libc::c_int) + 192 as libc::c_int) as
            s8;
    let fresh140 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_6: *mut Gfx = fresh140;
    (*_g_6).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_6).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh141 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_7: *mut Gfx = fresh141;
    (*_g_7).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_7).words.w1 =
        (sp7B as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (sp7B as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (sp7B as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    Graph_CloseDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                     b"../z_scene_table.c\x00" as *const u8 as
                         *const libc::c_char, 6004 as libc::c_int);
    if Flags_GetSwitch(globalCtx, 0x37 as libc::c_int) != 0 {
        if (*globalCtx).sceneNum as libc::c_int ==
               SCENE_GANON_DEMO as libc::c_int ||
               (*globalCtx).sceneNum as libc::c_int ==
                   SCENE_GANON_FINAL as libc::c_int ||
               (*globalCtx).sceneNum as libc::c_int ==
                   SCENE_GANON_SONOGO as libc::c_int ||
               (*globalCtx).sceneNum as libc::c_int ==
                   SCENE_GANONTIKA_SONOGO as libc::c_int {
            func_8009BEEC(globalCtx);
        }
    };
}
#[no_mangle]
pub static mut sIceCavernEntranceTextures: [*mut libc::c_void; 2] =
    unsafe {
        [gIceCavernDayEntranceTex.as_ptr() as *mut _ as *mut libc::c_void,
         gIceCavernNightEntranceTex.as_ptr() as *mut _ as *mut libc::c_void]
    };
// Scene Draw Config 37
#[no_mangle]
pub unsafe extern "C" fn func_8009C3EC(mut globalCtx: *mut GlobalContext) {
    let mut gameplayFrames: u32_0 = 0;
    // Necessary to match
    let mut __gfxCtx: *mut GraphicsContext = 0 as *mut GraphicsContext;
    let mut dispRefs: [*mut Gfx; 4] = [0 as *mut Gfx; 4];
    __gfxCtx = (*globalCtx).state.gfxCtx;
    Graph_OpenDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                    b"../z_scene_table.c\x00" as *const u8 as
                        *const libc::c_char, 6042 as libc::c_int);
    gameplayFrames = (*globalCtx).gameplayFrames;
    let fresh142 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g: *mut Gfx = fresh142;
    (*_g).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x8 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g).words.w1 =
        gSegments[((sIceCavernEntranceTextures[gSaveContext.nightFlag as
                                                   usize] as u32_0) <<
                       4 as libc::c_int >> 28 as libc::c_int) as
                      usize].wrapping_add(sIceCavernEntranceTextures[gSaveContext.nightFlag
                                                                         as
                                                                         usize]
                                              as u32_0 &
                                              0xffffff as libc::c_int as
                                                  libc::c_uint).wrapping_add(0x80000000
                                                                                 as
                                                                                 libc::c_uint)
            as *mut libc::c_void as libc::c_uint;
    let fresh143 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_0: *mut Gfx = fresh143;
    (*_g_0).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x9 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_0).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         (127 as libc::c_int as
                              libc::c_uint).wrapping_sub(gameplayFrames.wrapping_rem(128
                                                                                         as
                                                                                         libc::c_int
                                                                                         as
                                                                                         libc::c_uint)),
                         gameplayFrames.wrapping_mul(1 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int,
                         1 as libc::c_int,
                         gameplayFrames.wrapping_rem(128 as libc::c_int as
                                                         libc::c_uint),
                         gameplayFrames.wrapping_mul(1 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int) as
            libc::c_uint;
    let fresh144 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_1: *mut Gfx = fresh144;
    (*_g_1).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0xa as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_1).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         (127 as libc::c_int as
                              libc::c_uint).wrapping_sub(gameplayFrames.wrapping_rem(128
                                                                                         as
                                                                                         libc::c_int
                                                                                         as
                                                                                         libc::c_uint)),
                         gameplayFrames.wrapping_mul(1 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int,
                         1 as libc::c_int,
                         gameplayFrames.wrapping_rem(128 as libc::c_int as
                                                         libc::c_uint),
                         gameplayFrames.wrapping_mul(1 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int) as
            libc::c_uint;
    let mut pad: [s32; 2] = [0; 2];
    let fresh145 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_2: *mut Gfx = fresh145;
    (*_g_2).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_2).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh146 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_3: *mut Gfx = fresh146;
    (*_g_3).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_3).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh147 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_4: *mut Gfx = fresh147;
    (*_g_4).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_4).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh148 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_5: *mut Gfx = fresh148;
    (*_g_5).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_5).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    Graph_CloseDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                     b"../z_scene_table.c\x00" as *const u8 as
                         *const libc::c_char, 6076 as libc::c_int);
}
// Scene Draw Config 42
#[no_mangle]
pub unsafe extern "C" fn func_8009C608(mut globalCtx: *mut GlobalContext) {
    let mut gameplayFrames: u32_0 = 0;
    let mut __gfxCtx: *mut GraphicsContext = 0 as *mut GraphicsContext;
    let mut dispRefs: [*mut Gfx; 4] = [0 as *mut Gfx; 4];
    __gfxCtx = (*globalCtx).state.gfxCtx;
    Graph_OpenDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                    b"../z_scene_table.c\x00" as *const u8 as
                        *const libc::c_char, 6151 as libc::c_int);
    gameplayFrames = (*globalCtx).gameplayFrames;
    let fresh149 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g: *mut Gfx = fresh149;
    (*_g).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x8 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g).words.w1 =
        Gfx_TexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int as u32_0,
                      gameplayFrames.wrapping_mul(1 as libc::c_int as
                                                      libc::c_uint).wrapping_rem(64
                                                                                     as
                                                                                     libc::c_int
                                                                                     as
                                                                                     libc::c_uint),
                      256 as libc::c_int, 16 as libc::c_int) as libc::c_uint;
    let fresh150 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_0: *mut Gfx = fresh150;
    (*_g_0).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x9 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_0).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         0 as libc::c_int as u32_0,
                         gameplayFrames.wrapping_mul(60 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(2048
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         8 as libc::c_int, 512 as libc::c_int,
                         1 as libc::c_int, 0 as libc::c_int as u32_0,
                         gameplayFrames.wrapping_mul(50 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(2048
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         8 as libc::c_int, 512 as libc::c_int) as
            libc::c_uint;
    let fresh151 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_1: *mut Gfx = fresh151;
    (*_g_1).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0xa as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_1).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         (127 as libc::c_int as
                              libc::c_uint).wrapping_sub(gameplayFrames.wrapping_mul(1
                                                                                         as
                                                                                         libc::c_int
                                                                                         as
                                                                                         libc::c_uint).wrapping_rem(128
                                                                                                                        as
                                                                                                                        libc::c_int
                                                                                                                        as
                                                                                                                        libc::c_uint)),
                         0 as libc::c_int as u32_0, 32 as libc::c_int,
                         32 as libc::c_int, 1 as libc::c_int,
                         gameplayFrames.wrapping_mul(1 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         0 as libc::c_int as u32_0, 32 as libc::c_int,
                         32 as libc::c_int) as libc::c_uint;
    let fresh152 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_2: *mut Gfx = fresh152;
    (*_g_2).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0xb as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_2).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         0 as libc::c_int as u32_0,
                         (1023 as libc::c_int as
                              libc::c_uint).wrapping_sub(gameplayFrames.wrapping_mul(6
                                                                                         as
                                                                                         libc::c_int
                                                                                         as
                                                                                         libc::c_uint).wrapping_rem(1024
                                                                                                                        as
                                                                                                                        libc::c_int
                                                                                                                        as
                                                                                                                        libc::c_uint)),
                         16 as libc::c_int, 256 as libc::c_int,
                         1 as libc::c_int, 0 as libc::c_int as u32_0,
                         (1023 as libc::c_int as
                              libc::c_uint).wrapping_sub(gameplayFrames.wrapping_mul(3
                                                                                         as
                                                                                         libc::c_int
                                                                                         as
                                                                                         libc::c_uint).wrapping_rem(1024
                                                                                                                        as
                                                                                                                        libc::c_int
                                                                                                                        as
                                                                                                                        libc::c_uint)),
                         16 as libc::c_int, 256 as libc::c_int) as
            libc::c_uint;
    let fresh153 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_3: *mut Gfx = fresh153;
    (*_g_3).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_3).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh154 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_4: *mut Gfx = fresh154;
    (*_g_4).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_4).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh155 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_5: *mut Gfx = fresh155;
    (*_g_5).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_5).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh156 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_6: *mut Gfx = fresh156;
    (*_g_6).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_6).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    Graph_CloseDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                     b"../z_scene_table.c\x00" as *const u8 as
                         *const libc::c_char, 6187 as libc::c_int);
}
// Scene Draw Config 43
#[no_mangle]
pub unsafe extern "C" fn func_8009C8B8(mut globalCtx: *mut GlobalContext) {
    let mut gameplayFrames: u32_0 = 0;
    let mut __gfxCtx: *mut GraphicsContext = 0 as *mut GraphicsContext;
    let mut dispRefs: [*mut Gfx; 4] = [0 as *mut Gfx; 4];
    __gfxCtx = (*globalCtx).state.gfxCtx;
    Graph_OpenDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                    b"../z_scene_table.c\x00" as *const u8 as
                        *const libc::c_char, 6201 as libc::c_int);
    gameplayFrames = (*globalCtx).gameplayFrames;
    let fresh157 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g: *mut Gfx = fresh157;
    (*_g).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x8 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         0 as libc::c_int as u32_0, 0 as libc::c_int as u32_0,
                         32 as libc::c_int, 32 as libc::c_int,
                         1 as libc::c_int, 0 as libc::c_int as u32_0,
                         gameplayFrames.wrapping_mul(1 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int) as
            libc::c_uint;
    let fresh158 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_0: *mut Gfx = fresh158;
    (*_g_0).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0xa as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_0).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         (127 as libc::c_int as
                              libc::c_uint).wrapping_sub(gameplayFrames.wrapping_rem(128
                                                                                         as
                                                                                         libc::c_int
                                                                                         as
                                                                                         libc::c_uint)),
                         gameplayFrames.wrapping_mul(1 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int,
                         1 as libc::c_int,
                         gameplayFrames.wrapping_rem(128 as libc::c_int as
                                                         libc::c_uint),
                         gameplayFrames.wrapping_mul(1 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int) as
            libc::c_uint;
    let fresh159 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_1: *mut Gfx = fresh159;
    (*_g_1).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x9 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_1).words.w1 =
        Gfx_TexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int as u32_0,
                      (255 as libc::c_int as
                           libc::c_uint).wrapping_sub(gameplayFrames.wrapping_mul(10
                                                                                      as
                                                                                      libc::c_int
                                                                                      as
                                                                                      libc::c_uint).wrapping_rem(256
                                                                                                                     as
                                                                                                                     libc::c_int
                                                                                                                     as
                                                                                                                     libc::c_uint)),
                      32 as libc::c_int, 64 as libc::c_int) as libc::c_uint;
    let fresh160 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_2: *mut Gfx = fresh160;
    (*_g_2).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_2).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh161 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_3: *mut Gfx = fresh161;
    (*_g_3).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_3).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh162 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_4: *mut Gfx = fresh162;
    (*_g_4).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_4).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh163 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_5: *mut Gfx = fresh163;
    (*_g_5).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_5).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    Graph_CloseDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                     b"../z_scene_table.c\x00" as *const u8 as
                         *const libc::c_char, 6232 as libc::c_int);
}
// Scene Draw Config 47
#[no_mangle]
pub unsafe extern "C" fn func_8009CAC0(mut globalCtx: *mut GlobalContext) {
    let mut gameplayFrames: u32_0 = 0;
    let mut __gfxCtx: *mut GraphicsContext = 0 as *mut GraphicsContext;
    let mut dispRefs: [*mut Gfx; 4] = [0 as *mut Gfx; 4];
    __gfxCtx = (*globalCtx).state.gfxCtx;
    Graph_OpenDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                    b"../z_scene_table.c\x00" as *const u8 as
                        *const libc::c_char, 6249 as libc::c_int);
    gameplayFrames = (*globalCtx).gameplayFrames;
    let fresh164 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g: *mut Gfx = fresh164;
    (*_g).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x8 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         (127 as libc::c_int as
                              libc::c_uint).wrapping_sub(gameplayFrames.wrapping_rem(128
                                                                                         as
                                                                                         libc::c_int
                                                                                         as
                                                                                         libc::c_uint)),
                         gameplayFrames.wrapping_mul(1 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int,
                         1 as libc::c_int,
                         gameplayFrames.wrapping_rem(128 as libc::c_int as
                                                         libc::c_uint),
                         gameplayFrames.wrapping_mul(1 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int) as
            libc::c_uint;
    let fresh165 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_0: *mut Gfx = fresh165;
    (*_g_0).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_0).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh166 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_1: *mut Gfx = fresh166;
    (*_g_1).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_1).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh167 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_2: *mut Gfx = fresh167;
    (*_g_2).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_2).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh168 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_3: *mut Gfx = fresh168;
    (*_g_3).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_3).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    Graph_CloseDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                     b"../z_scene_table.c\x00" as *const u8 as
                         *const libc::c_char, 6264 as libc::c_int);
}
#[no_mangle]
pub static mut sGTGEntranceTextures: [*mut libc::c_void; 2] =
    unsafe {
        [gGTGDayEntranceTex.as_ptr() as *mut _ as *mut libc::c_void,
         gGTGNightEntranceTex.as_ptr() as *mut _ as *mut libc::c_void]
    };
// Scene Draw Config 27
#[no_mangle]
pub unsafe extern "C" fn func_8009CC00(mut globalCtx: *mut GlobalContext) {
    let mut gameplayFrames: u32_0 = 0;
    // Necessary to match
    let mut __gfxCtx: *mut GraphicsContext = 0 as *mut GraphicsContext;
    let mut dispRefs: [*mut Gfx; 4] = [0 as *mut Gfx; 4];
    __gfxCtx = (*globalCtx).state.gfxCtx;
    Graph_OpenDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                    b"../z_scene_table.c\x00" as *const u8 as
                        *const libc::c_char, 6290 as libc::c_int);
    gameplayFrames = (*globalCtx).gameplayFrames;
    let fresh169 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g: *mut Gfx = fresh169;
    (*_g).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x8 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g).words.w1 =
        gSegments[((sGTGEntranceTextures[gSaveContext.nightFlag as usize] as
                        u32_0) << 4 as libc::c_int >> 28 as libc::c_int) as
                      usize].wrapping_add(sGTGEntranceTextures[gSaveContext.nightFlag
                                                                   as usize]
                                              as u32_0 &
                                              0xffffff as libc::c_int as
                                                  libc::c_uint).wrapping_add(0x80000000
                                                                                 as
                                                                                 libc::c_uint)
            as *mut libc::c_void as libc::c_uint;
    let fresh170 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_0: *mut Gfx = fresh170;
    (*_g_0).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x9 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_0).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         (127 as libc::c_int as
                              libc::c_uint).wrapping_sub(gameplayFrames.wrapping_rem(128
                                                                                         as
                                                                                         libc::c_int
                                                                                         as
                                                                                         libc::c_uint)),
                         gameplayFrames.wrapping_mul(1 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int,
                         1 as libc::c_int,
                         gameplayFrames.wrapping_rem(128 as libc::c_int as
                                                         libc::c_uint),
                         gameplayFrames.wrapping_mul(1 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int) as
            libc::c_uint;
    let fresh171 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_1: *mut Gfx = fresh171;
    (*_g_1).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0xa as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_1).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         (127 as libc::c_int as
                              libc::c_uint).wrapping_sub(gameplayFrames.wrapping_rem(128
                                                                                         as
                                                                                         libc::c_int
                                                                                         as
                                                                                         libc::c_uint)),
                         gameplayFrames.wrapping_mul(1 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int,
                         1 as libc::c_int,
                         gameplayFrames.wrapping_rem(128 as libc::c_int as
                                                         libc::c_uint),
                         gameplayFrames.wrapping_mul(1 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int) as
            libc::c_uint;
    let mut pad: [s32; 2] = [0; 2];
    let fresh172 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_2: *mut Gfx = fresh172;
    (*_g_2).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_2).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh173 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_3: *mut Gfx = fresh173;
    (*_g_3).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_3).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh174 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_4: *mut Gfx = fresh174;
    (*_g_4).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_4).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh175 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_5: *mut Gfx = fresh175;
    (*_g_5).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_5).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    Graph_CloseDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                     b"../z_scene_table.c\x00" as *const u8 as
                         *const libc::c_char, 6320 as libc::c_int);
}
#[no_mangle]
pub unsafe extern "C" fn Gfx_TwoTexScrollPrimColor(mut gfxCtx:
                                                       *mut GraphicsContext,
                                                   mut tile1: s32,
                                                   mut x1: u32_0,
                                                   mut y1: u32_0,
                                                   mut width1: s32,
                                                   mut height1: s32,
                                                   mut tile2: s32,
                                                   mut x2: u32_0,
                                                   mut y2: u32_0,
                                                   mut width2: s32,
                                                   mut height2: s32,
                                                   mut r: s32, mut g: s32,
                                                   mut b: s32, mut a: s32)
 -> *mut Gfx {
    let mut displayList: *mut Gfx =
        Graph_Alloc(gfxCtx,
                    (10 as libc::c_int as
                         libc::c_uint).wrapping_mul(::std::mem::size_of::<Gfx>()
                                                        as libc::c_ulong) as
                        size_t) as *mut Gfx;
    x1 =
        (x1 as libc::c_uint).wrapping_rem(2048 as libc::c_int as libc::c_uint)
            as u32_0 as u32_0;
    y1 =
        (y1 as libc::c_uint).wrapping_rem(2048 as libc::c_int as libc::c_uint)
            as u32_0 as u32_0;
    x2 =
        (x2 as libc::c_uint).wrapping_rem(2048 as libc::c_int as libc::c_uint)
            as u32_0 as u32_0;
    y2 =
        (y2 as libc::c_uint).wrapping_rem(2048 as libc::c_int as libc::c_uint)
            as u32_0 as u32_0;
    let mut _g: *mut Gfx = displayList;
    (*_g).words.w0 =
        (0xe8 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g).words.w1 = 0 as libc::c_int as libc::c_uint;
    let mut _g_0: *mut Gfx = displayList.offset(1 as libc::c_int as isize);
    (*_g_0).words.w0 =
        (0xf2 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (x1 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 12 as libc::c_int
            |
            (y1 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_0).words.w1 =
        (tile1 as u32_0 &
             (((0x1 as libc::c_int) << 3 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (x1.wrapping_add(((width1 - 1 as libc::c_int) << 2 as libc::c_int)
                                 as libc::c_uint) &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 12 as libc::c_int
            |
            (y1.wrapping_add(((height1 - 1 as libc::c_int) <<
                                  2 as libc::c_int) as libc::c_uint) &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let mut _g_1: *mut Gfx = displayList.offset(2 as libc::c_int as isize);
    (*_g_1).words.w0 =
        (0xe8 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_1).words.w1 = 0 as libc::c_int as libc::c_uint;
    let mut _g_2: *mut Gfx = displayList.offset(3 as libc::c_int as isize);
    (*_g_2).words.w0 =
        (0xf2 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (x2 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 12 as libc::c_int
            |
            (y2 &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_2).words.w1 =
        (tile2 as u32_0 &
             (((0x1 as libc::c_int) << 3 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (x2.wrapping_add(((width2 - 1 as libc::c_int) << 2 as libc::c_int)
                                 as libc::c_uint) &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 12 as libc::c_int
            |
            (y2.wrapping_add(((height2 - 1 as libc::c_int) <<
                                  2 as libc::c_int) as libc::c_uint) &
                 (((0x1 as libc::c_int) << 12 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let mut _g_3: *mut Gfx = displayList.offset(4 as libc::c_int as isize);
    (*_g_3).words.w0 =
        (0xfa as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (0 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_3).words.w1 =
        (r as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (g as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (b as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (a as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let mut _g_4: *mut Gfx = displayList.offset(5 as libc::c_int as isize);
    (*_g_4).words.w0 =
        (0xdf as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_4).words.w1 = 0 as libc::c_int as libc::c_uint;
    return displayList;
}
// Scene Draw Config 50
#[no_mangle]
pub unsafe extern "C" fn func_8009CF84(mut globalCtx: *mut GlobalContext) {
    let mut gameplayFrames: u32_0 = 0;
    let mut __gfxCtx: *mut GraphicsContext = 0 as *mut GraphicsContext;
    let mut dispRefs: [*mut Gfx; 4] = [0 as *mut Gfx; 4];
    __gfxCtx = (*globalCtx).state.gfxCtx;
    Graph_OpenDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                    b"../z_scene_table.c\x00" as *const u8 as
                        *const libc::c_char, 6433 as libc::c_int);
    gameplayFrames = (*globalCtx).gameplayFrames;
    let fresh176 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g: *mut Gfx = fresh176;
    (*_g).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x8 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g).words.w1 =
        Gfx_TwoTexScrollPrimColor((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                                  (127 as libc::c_int as
                                       libc::c_uint).wrapping_sub(gameplayFrames.wrapping_rem(128
                                                                                                  as
                                                                                                  libc::c_int
                                                                                                  as
                                                                                                  libc::c_uint)),
                                  gameplayFrames.wrapping_mul(1 as libc::c_int
                                                                  as
                                                                  libc::c_uint).wrapping_rem(128
                                                                                                 as
                                                                                                 libc::c_int
                                                                                                 as
                                                                                                 libc::c_uint),
                                  32 as libc::c_int, 32 as libc::c_int,
                                  1 as libc::c_int,
                                  gameplayFrames.wrapping_rem(128 as
                                                                  libc::c_int
                                                                  as
                                                                  libc::c_uint),
                                  gameplayFrames.wrapping_mul(1 as libc::c_int
                                                                  as
                                                                  libc::c_uint).wrapping_rem(128
                                                                                                 as
                                                                                                 libc::c_int
                                                                                                 as
                                                                                                 libc::c_uint),
                                  32 as libc::c_int, 32 as libc::c_int,
                                  255 as libc::c_int, 255 as libc::c_int,
                                  255 as libc::c_int,
                                  (*globalCtx).roomCtx.unk_74[0 as libc::c_int
                                                                  as usize] as
                                      libc::c_int + 127 as libc::c_int) as
            libc::c_uint;
    let fresh177 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_0: *mut Gfx = fresh177;
    (*_g_0).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_0).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh178 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_1: *mut Gfx = fresh178;
    (*_g_1).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_1).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh179 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_2: *mut Gfx = fresh179;
    (*_g_2).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_2).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh180 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_3: *mut Gfx = fresh180;
    (*_g_3).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_3).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    Graph_CloseDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                     b"../z_scene_table.c\x00" as *const u8 as
                         *const libc::c_char, 6449 as libc::c_int);
}
// Scene Draw Config 41
#[no_mangle]
pub unsafe extern "C" fn func_8009D0E8(mut globalCtx: *mut GlobalContext) {
    let mut gameplayFrames: u32_0 = 0;
    let mut __gfxCtx: *mut GraphicsContext = 0 as *mut GraphicsContext;
    let mut dispRefs: [*mut Gfx; 4] = [0 as *mut Gfx; 4];
    __gfxCtx = (*globalCtx).state.gfxCtx;
    Graph_OpenDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                    b"../z_scene_table.c\x00" as *const u8 as
                        *const libc::c_char, 6463 as libc::c_int);
    gameplayFrames = (*globalCtx).gameplayFrames;
    let fresh181 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g: *mut Gfx = fresh181;
    (*_g).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x8 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g).words.w1 =
        Gfx_TexScroll((*globalCtx).state.gfxCtx,
                      (127 as libc::c_int as
                           libc::c_uint).wrapping_sub(gameplayFrames.wrapping_mul(4
                                                                                      as
                                                                                      libc::c_int
                                                                                      as
                                                                                      libc::c_uint).wrapping_rem(128
                                                                                                                     as
                                                                                                                     libc::c_int
                                                                                                                     as
                                                                                                                     libc::c_uint)),
                      0 as libc::c_int as u32_0, 32 as libc::c_int,
                      32 as libc::c_int) as libc::c_uint;
    let fresh182 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_0: *mut Gfx = fresh182;
    (*_g_0).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x9 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_0).words.w1 =
        Gfx_TexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int as u32_0,
                      gameplayFrames.wrapping_mul(5 as libc::c_int as
                                                      libc::c_uint).wrapping_rem(64
                                                                                     as
                                                                                     libc::c_int
                                                                                     as
                                                                                     libc::c_uint),
                      16 as libc::c_int, 16 as libc::c_int) as libc::c_uint;
    let fresh183 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_1: *mut Gfx = fresh183;
    (*_g_1).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0xa as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_1).words.w1 =
        Gfx_TexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int as u32_0,
                      (63 as libc::c_int as
                           libc::c_uint).wrapping_sub(gameplayFrames.wrapping_mul(2
                                                                                      as
                                                                                      libc::c_int
                                                                                      as
                                                                                      libc::c_uint).wrapping_rem(64
                                                                                                                     as
                                                                                                                     libc::c_int
                                                                                                                     as
                                                                                                                     libc::c_uint)),
                      16 as libc::c_int, 16 as libc::c_int) as libc::c_uint;
    let fresh184 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_2: *mut Gfx = fresh184;
    (*_g_2).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0xb as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_2).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         0 as libc::c_int as u32_0,
                         (127 as libc::c_int as
                              libc::c_uint).wrapping_sub(gameplayFrames.wrapping_mul(3
                                                                                         as
                                                                                         libc::c_int
                                                                                         as
                                                                                         libc::c_uint).wrapping_rem(128
                                                                                                                        as
                                                                                                                        libc::c_int
                                                                                                                        as
                                                                                                                        libc::c_uint)),
                         32 as libc::c_int, 32 as libc::c_int,
                         1 as libc::c_int, 0 as libc::c_int as u32_0,
                         0 as libc::c_int as u32_0, 32 as libc::c_int,
                         32 as libc::c_int) as libc::c_uint;
    let fresh185 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_3: *mut Gfx = fresh185;
    (*_g_3).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_3).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh186 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_4: *mut Gfx = fresh186;
    (*_g_4).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_4).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh187 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_5: *mut Gfx = fresh187;
    (*_g_5).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_5).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh188 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_6: *mut Gfx = fresh188;
    (*_g_6).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_6).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    Graph_CloseDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                     b"../z_scene_table.c\x00" as *const u8 as
                         *const libc::c_char, 6491 as libc::c_int);
}
#[no_mangle]
pub static mut sLonLonHouseEntranceTextures: [*mut libc::c_void; 2] =
    unsafe {
        [gLonLonHouseDayEntranceTex.as_ptr() as *mut _ as *mut libc::c_void,
         gLonLonHouseNightEntranceTex.as_ptr() as *mut _ as *mut libc::c_void]
    };
// Scene Draw Config 44
#[no_mangle]
pub unsafe extern "C" fn func_8009D31C(mut globalCtx: *mut GlobalContext) {
    let mut __gfxCtx: *mut GraphicsContext = 0 as *mut GraphicsContext;
    let mut dispRefs: [*mut Gfx; 4] = [0 as *mut Gfx; 4];
    __gfxCtx = (*globalCtx).state.gfxCtx;
    Graph_OpenDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                    b"../z_scene_table.c\x00" as *const u8 as
                        *const libc::c_char, 6515 as libc::c_int);
    let mut pad: [s32; 2] = [0; 2];
    let fresh189 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g: *mut Gfx = fresh189;
    (*_g).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x8 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g).words.w1 =
        gSegments[((sLonLonHouseEntranceTextures[gSaveContext.nightFlag as
                                                     usize] as u32_0) <<
                       4 as libc::c_int >> 28 as libc::c_int) as
                      usize].wrapping_add(sLonLonHouseEntranceTextures[gSaveContext.nightFlag
                                                                           as
                                                                           usize]
                                              as u32_0 &
                                              0xffffff as libc::c_int as
                                                  libc::c_uint).wrapping_add(0x80000000
                                                                                 as
                                                                                 libc::c_uint)
            as *mut libc::c_void as libc::c_uint;
    let fresh190 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_0: *mut Gfx = fresh190;
    (*_g_0).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_0).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh191 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_1: *mut Gfx = fresh191;
    (*_g_1).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_1).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh192 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_2: *mut Gfx = fresh192;
    (*_g_2).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_2).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh193 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_3: *mut Gfx = fresh193;
    (*_g_3).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_3).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    Graph_CloseDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                     b"../z_scene_table.c\x00" as *const u8 as
                         *const libc::c_char, 6528 as libc::c_int);
}
#[no_mangle]
pub static mut sGuardHouseView2Textures: [*mut libc::c_void; 2] =
    unsafe {
        [gGuardHouseOutSideView1DayTex.as_ptr() as *mut _ as
             *mut libc::c_void,
         gGuardHouseOutSideView1NightTex.as_ptr() as *mut _ as
             *mut libc::c_void]
    };
#[no_mangle]
pub static mut sGuardHouseView1Textures: [*mut libc::c_void; 2] =
    unsafe {
        [gGuardHouseOutSideView2DayTex.as_ptr() as *mut _ as
             *mut libc::c_void,
         gGuardHouseOutSideView2NightTex.as_ptr() as *mut _ as
             *mut libc::c_void]
    };
// Scene Draw Config 45
#[no_mangle]
pub unsafe extern "C" fn func_8009D438(mut globalCtx: *mut GlobalContext) {
    let mut var: s32 = 0;
    let mut __gfxCtx: *mut GraphicsContext = 0 as *mut GraphicsContext;
    let mut dispRefs: [*mut Gfx; 4] = [0 as *mut Gfx; 4];
    __gfxCtx = (*globalCtx).state.gfxCtx;
    Graph_OpenDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                    b"../z_scene_table.c\x00" as *const u8 as
                        *const libc::c_char, 6560 as libc::c_int);
    if gSaveContext.linkAge == 0 as libc::c_int {
        var = 1 as libc::c_int
    } else { var = gSaveContext.nightFlag }
    let fresh194 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g: *mut Gfx = fresh194;
    (*_g).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x8 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g).words.w1 =
        gSegments[((sGuardHouseView1Textures[var as usize] as u32_0) <<
                       4 as libc::c_int >> 28 as libc::c_int) as
                      usize].wrapping_add(sGuardHouseView1Textures[var as
                                                                       usize]
                                              as u32_0 &
                                              0xffffff as libc::c_int as
                                                  libc::c_uint).wrapping_add(0x80000000
                                                                                 as
                                                                                 libc::c_uint)
            as *mut libc::c_void as libc::c_uint;
    let fresh195 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_0: *mut Gfx = fresh195;
    (*_g_0).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x9 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_0).words.w1 =
        gSegments[((sGuardHouseView2Textures[var as usize] as u32_0) <<
                       4 as libc::c_int >> 28 as libc::c_int) as
                      usize].wrapping_add(sGuardHouseView2Textures[var as
                                                                       usize]
                                              as u32_0 &
                                              0xffffff as libc::c_int as
                                                  libc::c_uint).wrapping_add(0x80000000
                                                                                 as
                                                                                 libc::c_uint)
            as *mut libc::c_void as libc::c_uint;
    let fresh196 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_1: *mut Gfx = fresh196;
    (*_g_1).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_1).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh197 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_2: *mut Gfx = fresh197;
    (*_g_2).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_2).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh198 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_3: *mut Gfx = fresh198;
    (*_g_3).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_3).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh199 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_4: *mut Gfx = fresh199;
    (*_g_4).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_4).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    Graph_CloseDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                     b"../z_scene_table.c\x00" as *const u8 as
                         *const libc::c_char, 6581 as libc::c_int);
}
// Scene Draw Config 46
#[no_mangle]
pub unsafe extern "C" fn func_8009D5B4(mut globalCtx: *mut GlobalContext) {
    let mut gameplayFrames: u32_0 = 0;
    let mut __gfxCtx: *mut GraphicsContext = 0 as *mut GraphicsContext;
    let mut dispRefs: [*mut Gfx; 4] = [0 as *mut Gfx; 4];
    __gfxCtx = (*globalCtx).state.gfxCtx;
    Graph_OpenDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                    b"../z_scene_table.c\x00" as *const u8 as
                        *const libc::c_char, 6595 as libc::c_int);
    gameplayFrames = (*globalCtx).gameplayFrames;
    let fresh200 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g: *mut Gfx = fresh200;
    (*_g).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x8 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g).words.w1 =
        Gfx_TexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int as u32_0,
                      gameplayFrames.wrapping_mul(3 as libc::c_int as
                                                      libc::c_uint).wrapping_rem(128
                                                                                     as
                                                                                     libc::c_int
                                                                                     as
                                                                                     libc::c_uint),
                      32 as libc::c_int, 32 as libc::c_int) as libc::c_uint;
    let fresh201 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_0: *mut Gfx = fresh201;
    (*_g_0).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x9 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_0).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         0 as libc::c_int as u32_0,
                         (1023 as libc::c_int as
                              libc::c_uint).wrapping_sub(gameplayFrames.wrapping_mul(3
                                                                                         as
                                                                                         libc::c_int
                                                                                         as
                                                                                         libc::c_uint).wrapping_rem(1024
                                                                                                                        as
                                                                                                                        libc::c_int
                                                                                                                        as
                                                                                                                        libc::c_uint)),
                         16 as libc::c_int, 256 as libc::c_int,
                         1 as libc::c_int, 0 as libc::c_int as u32_0,
                         (1023 as libc::c_int as
                              libc::c_uint).wrapping_sub(gameplayFrames.wrapping_mul(6
                                                                                         as
                                                                                         libc::c_int
                                                                                         as
                                                                                         libc::c_uint).wrapping_rem(1024
                                                                                                                        as
                                                                                                                        libc::c_int
                                                                                                                        as
                                                                                                                        libc::c_uint)),
                         16 as libc::c_int, 256 as libc::c_int) as
            libc::c_uint;
    let fresh202 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_1: *mut Gfx = fresh202;
    (*_g_1).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_1).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh203 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_2: *mut Gfx = fresh203;
    (*_g_2).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_2).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh204 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_3: *mut Gfx = fresh204;
    (*_g_3).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_3).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh205 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_4: *mut Gfx = fresh205;
    (*_g_4).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_4).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    Graph_CloseDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                     b"../z_scene_table.c\x00" as *const u8 as
                         *const libc::c_char, 6615 as libc::c_int);
}
#[no_mangle]
pub static mut sForestTempleEntranceTextures: [*mut libc::c_void; 2] =
    unsafe {
        [gForestTempleDayEntranceTex.as_ptr() as *mut _ as *mut libc::c_void,
         gForestTempleNightEntranceTex.as_ptr() as *mut _ as
             *mut libc::c_void]
    };
// Scene Draw Config 22
#[no_mangle]
pub unsafe extern "C" fn func_8009D758(mut globalCtx: *mut GlobalContext) {
    let mut gameplayFrames: u32_0 = 0;
    // Necessary to match
    let mut __gfxCtx: *mut GraphicsContext = 0 as *mut GraphicsContext;
    let mut dispRefs: [*mut Gfx; 4] = [0 as *mut Gfx; 4];
    __gfxCtx = (*globalCtx).state.gfxCtx;
    Graph_OpenDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                    b"../z_scene_table.c\x00" as *const u8 as
                        *const libc::c_char, 6640 as libc::c_int);
    gameplayFrames = (*globalCtx).gameplayFrames;
    let fresh206 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g: *mut Gfx = fresh206;
    (*_g).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x8 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g).words.w1 =
        gSegments[((sForestTempleEntranceTextures[gSaveContext.nightFlag as
                                                      usize] as u32_0) <<
                       4 as libc::c_int >> 28 as libc::c_int) as
                      usize].wrapping_add(sForestTempleEntranceTextures[gSaveContext.nightFlag
                                                                            as
                                                                            usize]
                                              as u32_0 &
                                              0xffffff as libc::c_int as
                                                  libc::c_uint).wrapping_add(0x80000000
                                                                                 as
                                                                                 libc::c_uint)
            as *mut libc::c_void as libc::c_uint;
    let fresh207 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_0: *mut Gfx = fresh207;
    (*_g_0).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x9 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_0).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         (127 as libc::c_int as
                              libc::c_uint).wrapping_sub(gameplayFrames.wrapping_rem(128
                                                                                         as
                                                                                         libc::c_int
                                                                                         as
                                                                                         libc::c_uint)),
                         gameplayFrames.wrapping_mul(1 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int,
                         1 as libc::c_int,
                         gameplayFrames.wrapping_rem(128 as libc::c_int as
                                                         libc::c_uint),
                         gameplayFrames.wrapping_mul(1 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int) as
            libc::c_uint;
    let fresh208 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_1: *mut Gfx = fresh208;
    (*_g_1).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0xa as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_1).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         (127 as libc::c_int as
                              libc::c_uint).wrapping_sub(gameplayFrames.wrapping_rem(128
                                                                                         as
                                                                                         libc::c_int
                                                                                         as
                                                                                         libc::c_uint)),
                         gameplayFrames.wrapping_mul(1 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int,
                         1 as libc::c_int,
                         gameplayFrames.wrapping_rem(128 as libc::c_int as
                                                         libc::c_uint),
                         gameplayFrames.wrapping_mul(1 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int) as
            libc::c_uint;
    let mut pad: [s32; 2] = [0; 2];
    let fresh209 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_2: *mut Gfx = fresh209;
    (*_g_2).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_2).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh210 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_3: *mut Gfx = fresh210;
    (*_g_3).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_3).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh211 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_4: *mut Gfx = fresh211;
    (*_g_4).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_4).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh212 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_5: *mut Gfx = fresh212;
    (*_g_5).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_5).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    Graph_CloseDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                     b"../z_scene_table.c\x00" as *const u8 as
                         *const libc::c_char, 6671 as libc::c_int);
}
#[no_mangle]
pub static mut sSpiritTempleEntranceTextures: [*mut libc::c_void; 2] =
    unsafe {
        [gSpiritTempleDayEntranceTex.as_ptr() as *mut _ as *mut libc::c_void,
         gSpiritTempleNightEntranceTex.as_ptr() as *mut _ as
             *mut libc::c_void]
    };
// Scene Draw Config 25
#[no_mangle]
pub unsafe extern "C" fn func_8009D974(mut globalCtx: *mut GlobalContext) {
    let mut __gfxCtx: *mut GraphicsContext = 0 as *mut GraphicsContext;
    let mut dispRefs: [*mut Gfx; 4] = [0 as *mut Gfx; 4];
    __gfxCtx = (*globalCtx).state.gfxCtx;
    Graph_OpenDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                    b"../z_scene_table.c\x00" as *const u8 as
                        *const libc::c_char, 6752 as libc::c_int);
    let mut pad: [s32; 2] = [0; 2];
    let fresh213 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g: *mut Gfx = fresh213;
    (*_g).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x8 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g).words.w1 =
        gSegments[((sSpiritTempleEntranceTextures[gSaveContext.nightFlag as
                                                      usize] as u32_0) <<
                       4 as libc::c_int >> 28 as libc::c_int) as
                      usize].wrapping_add(sSpiritTempleEntranceTextures[gSaveContext.nightFlag
                                                                            as
                                                                            usize]
                                              as u32_0 &
                                              0xffffff as libc::c_int as
                                                  libc::c_uint).wrapping_add(0x80000000
                                                                                 as
                                                                                 libc::c_uint)
            as *mut libc::c_void as libc::c_uint;
    Graph_CloseDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                     b"../z_scene_table.c\x00" as *const u8 as
                         *const libc::c_char, 6762 as libc::c_int);
}
// Scene Draw Config 1
#[no_mangle]
pub unsafe extern "C" fn func_8009DA30(mut globalCtx: *mut GlobalContext) {
    let mut gameplayFrames: u32_0 = 0;
    let mut displayListHead: *mut Gfx = 0 as *mut Gfx;
    displayListHead =
        Graph_Alloc((*globalCtx).state.gfxCtx,
                    (3 as libc::c_int as
                         libc::c_uint).wrapping_mul(::std::mem::size_of::<Gfx>()
                                                        as libc::c_ulong) as
                        size_t) as *mut Gfx;
    let mut __gfxCtx: *mut GraphicsContext = 0 as *mut GraphicsContext;
    let mut dispRefs: [*mut Gfx; 4] = [0 as *mut Gfx; 4];
    __gfxCtx = (*globalCtx).state.gfxCtx;
    Graph_OpenDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                    b"../z_scene_table.c\x00" as *const u8 as
                        *const libc::c_char, 6814 as libc::c_int);
    gameplayFrames = (*globalCtx).gameplayFrames;
    let fresh214 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g: *mut Gfx = fresh214;
    (*_g).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x8 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         (127 as libc::c_int as
                              libc::c_uint).wrapping_sub(gameplayFrames.wrapping_rem(128
                                                                                         as
                                                                                         libc::c_int
                                                                                         as
                                                                                         libc::c_uint)),
                         gameplayFrames.wrapping_mul(3 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int,
                         1 as libc::c_int,
                         gameplayFrames.wrapping_rem(128 as libc::c_int as
                                                         libc::c_uint),
                         gameplayFrames.wrapping_mul(3 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int) as
            libc::c_uint;
    let fresh215 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_0: *mut Gfx = fresh215;
    (*_g_0).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x9 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_0).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         (127 as libc::c_int as
                              libc::c_uint).wrapping_sub(gameplayFrames.wrapping_rem(128
                                                                                         as
                                                                                         libc::c_int
                                                                                         as
                                                                                         libc::c_uint)),
                         gameplayFrames.wrapping_mul(10 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int,
                         1 as libc::c_int,
                         gameplayFrames.wrapping_rem(128 as libc::c_int as
                                                         libc::c_uint),
                         gameplayFrames.wrapping_mul(10 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int) as
            libc::c_uint;
    let fresh216 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_1: *mut Gfx = fresh216;
    (*_g_1).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_1).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh217 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_2: *mut Gfx = fresh217;
    (*_g_2).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_2).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh218 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_3: *mut Gfx = fresh218;
    (*_g_3).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_3).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh219 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_4: *mut Gfx = fresh219;
    (*_g_4).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_4).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh220 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_5: *mut Gfx = fresh220;
    (*_g_5).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0xa as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_5).words.w1 = displayListHead as libc::c_uint;
    if gSaveContext.dayTime as libc::c_int >= 0x4aac as libc::c_int &&
           gSaveContext.dayTime as libc::c_int <= 0xc555 as libc::c_int {
        let mut _g_6: *mut Gfx = displayListHead;
        (*_g_6).words.w0 =
            (0xdf as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int;
        (*_g_6).words.w1 = 0 as libc::c_int as libc::c_uint
    } else {
        if gSaveContext.dayTime as libc::c_int > 0xc555 as libc::c_int {
            if (*globalCtx).roomCtx.unk_74[0 as libc::c_int as usize] as
                   libc::c_int != 255 as libc::c_int {
                Math_StepToS(&mut *(*globalCtx).roomCtx.unk_74.as_mut_ptr().offset(0
                                                                                       as
                                                                                       libc::c_int
                                                                                       as
                                                                                       isize),
                             255 as libc::c_int as s16,
                             5 as libc::c_int as s16);
            }
        } else if gSaveContext.dayTime as libc::c_int >= 0x4000 as libc::c_int
         {
            if (*globalCtx).roomCtx.unk_74[0 as libc::c_int as usize] as
                   libc::c_int != 0 as libc::c_int {
                Math_StepToS(&mut *(*globalCtx).roomCtx.unk_74.as_mut_ptr().offset(0
                                                                                       as
                                                                                       libc::c_int
                                                                                       as
                                                                                       isize),
                             0 as libc::c_int as s16,
                             10 as libc::c_int as s16);
            }
        }
        let fresh221 = displayListHead;
        displayListHead = displayListHead.offset(1);
        let mut _g_7: *mut Gfx = fresh221;
        (*_g_7).words.w0 =
            (0xfa as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int
                |
                (0 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    8 as libc::c_int |
                (0 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int;
        (*_g_7).words.w1 =
            (255 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int
                |
                (255 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    16 as libc::c_int |
                (255 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    8 as libc::c_int |
                ((*globalCtx).roomCtx.unk_74[0 as libc::c_int as usize] as
                     u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int;
        let fresh222 = displayListHead;
        displayListHead = displayListHead.offset(1);
        let mut _g_8: *mut Gfx = fresh222;
        (*_g_8).words.w0 =
            (0xde as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int
                |
                (0 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    16 as libc::c_int |
                (0 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 16 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int;
        (*_g_8).words.w1 =
            spot00_room_0DL_012B20.as_mut_ptr() as libc::c_uint;
        let mut _g_9: *mut Gfx = displayListHead;
        (*_g_9).words.w0 =
            (0xdf as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int;
        (*_g_9).words.w1 = 0 as libc::c_int as libc::c_uint
    }
    Graph_CloseDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                     b"../z_scene_table.c\x00" as *const u8 as
                         *const libc::c_char, 6866 as libc::c_int);
}
#[no_mangle]
pub static mut sKakarikoWindowTextures: [*mut libc::c_void; 2] =
    unsafe {
        [gKakarikoVillageDayWindowTex.as_ptr() as *mut _ as *mut libc::c_void,
         gKakarikoVillageNightWindowTex.as_ptr() as *mut _ as
             *mut libc::c_void]
    };
// Scene Draw Config 2
#[no_mangle]
pub unsafe extern "C" fn func_8009DD5C(mut globalCtx: *mut GlobalContext) {
    let mut __gfxCtx: *mut GraphicsContext = 0 as *mut GraphicsContext;
    let mut dispRefs: [*mut Gfx; 4] = [0 as *mut Gfx; 4];
    __gfxCtx = (*globalCtx).state.gfxCtx;
    Graph_OpenDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                    b"../z_scene_table.c\x00" as *const u8 as
                        *const libc::c_char, 6890 as libc::c_int);
    let mut pad: [s32; 2] = [0; 2];
    let fresh223 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g: *mut Gfx = fresh223;
    (*_g).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x8 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g).words.w1 =
        gSegments[((sKakarikoWindowTextures[gSaveContext.nightFlag as usize]
                        as u32_0) << 4 as libc::c_int >> 28 as libc::c_int) as
                      usize].wrapping_add(sKakarikoWindowTextures[gSaveContext.nightFlag
                                                                      as
                                                                      usize]
                                              as u32_0 &
                                              0xffffff as libc::c_int as
                                                  libc::c_uint).wrapping_add(0x80000000
                                                                                 as
                                                                                 libc::c_uint)
            as *mut libc::c_void as libc::c_uint;
    let fresh224 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_0: *mut Gfx = fresh224;
    (*_g_0).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_0).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh225 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_1: *mut Gfx = fresh225;
    (*_g_1).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_1).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh226 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_2: *mut Gfx = fresh226;
    (*_g_2).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_2).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh227 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_3: *mut Gfx = fresh227;
    (*_g_3).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_3).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    Graph_CloseDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                     b"../z_scene_table.c\x00" as *const u8 as
                         *const libc::c_char, 6903 as libc::c_int);
}
// Scene Draw Config 3
#[no_mangle]
pub unsafe extern "C" fn func_8009DE78(mut globalCtx: *mut GlobalContext) {
    let mut gameplayFrames: u32_0 = 0;
    let mut __gfxCtx: *mut GraphicsContext = 0 as *mut GraphicsContext;
    let mut dispRefs: [*mut Gfx; 4] = [0 as *mut Gfx; 4];
    __gfxCtx = (*globalCtx).state.gfxCtx;
    Graph_OpenDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                    b"../z_scene_table.c\x00" as *const u8 as
                        *const libc::c_char, 6917 as libc::c_int);
    gameplayFrames = (*globalCtx).gameplayFrames;
    let fresh228 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g: *mut Gfx = fresh228;
    (*_g).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x8 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         (127 as libc::c_int as
                              libc::c_uint).wrapping_sub(gameplayFrames.wrapping_rem(128
                                                                                         as
                                                                                         libc::c_int
                                                                                         as
                                                                                         libc::c_uint)),
                         gameplayFrames.wrapping_mul(6 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int,
                         1 as libc::c_int,
                         gameplayFrames.wrapping_rem(128 as libc::c_int as
                                                         libc::c_uint),
                         gameplayFrames.wrapping_mul(6 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int) as
            libc::c_uint;
    let fresh229 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_0: *mut Gfx = fresh229;
    (*_g_0).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x9 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_0).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         (127 as libc::c_int as
                              libc::c_uint).wrapping_sub(gameplayFrames.wrapping_rem(128
                                                                                         as
                                                                                         libc::c_int
                                                                                         as
                                                                                         libc::c_uint)),
                         gameplayFrames.wrapping_mul(3 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int,
                         1 as libc::c_int,
                         gameplayFrames.wrapping_rem(128 as libc::c_int as
                                                         libc::c_uint),
                         gameplayFrames.wrapping_mul(3 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int) as
            libc::c_uint;
    let fresh230 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_1: *mut Gfx = fresh230;
    (*_g_1).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0xa as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_1).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         (127 as libc::c_int as
                              libc::c_uint).wrapping_sub(gameplayFrames.wrapping_rem(128
                                                                                         as
                                                                                         libc::c_int
                                                                                         as
                                                                                         libc::c_uint)),
                         gameplayFrames.wrapping_mul(1 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int,
                         1 as libc::c_int,
                         gameplayFrames.wrapping_rem(128 as libc::c_int as
                                                         libc::c_uint),
                         gameplayFrames.wrapping_mul(1 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int) as
            libc::c_uint;
    let fresh231 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_2: *mut Gfx = fresh231;
    (*_g_2).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_2).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh232 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_3: *mut Gfx = fresh232;
    (*_g_3).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_3).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh233 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_4: *mut Gfx = fresh233;
    (*_g_4).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_4).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh234 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_5: *mut Gfx = fresh234;
    (*_g_5).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_5).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    Graph_CloseDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                     b"../z_scene_table.c\x00" as *const u8 as
                         *const libc::c_char, 6948 as libc::c_int);
}
// Scene Draw Config 4
#[no_mangle]
pub unsafe extern "C" fn func_8009E0B8(mut globalCtx: *mut GlobalContext) {
    let mut gameplayFrames: u32_0 = 0;
    let mut spA3: u8_0 = 0;
    let mut spA0: u16_0 = 0;
    let mut displayListHead: *mut Gfx = 0 as *mut Gfx;
    spA3 = 128 as libc::c_int as u8_0;
    spA0 = 500 as libc::c_int as u16_0;
    displayListHead =
        Graph_Alloc((*globalCtx).state.gfxCtx,
                    (6 as libc::c_int as
                         libc::c_uint).wrapping_mul(::std::mem::size_of::<Gfx>()
                                                        as libc::c_ulong) as
                        size_t) as *mut Gfx;
    let mut __gfxCtx: *mut GraphicsContext = 0 as *mut GraphicsContext;
    let mut dispRefs: [*mut Gfx; 4] = [0 as *mut Gfx; 4];
    __gfxCtx = (*globalCtx).state.gfxCtx;
    Graph_OpenDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                    b"../z_scene_table.c\x00" as *const u8 as
                        *const libc::c_char, 6965 as libc::c_int);
    gameplayFrames = (*globalCtx).gameplayFrames;
    let fresh235 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g: *mut Gfx = fresh235;
    (*_g).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x9 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         (127 as libc::c_int as
                              libc::c_uint).wrapping_sub(gameplayFrames.wrapping_rem(128
                                                                                         as
                                                                                         libc::c_int
                                                                                         as
                                                                                         libc::c_uint)),
                         gameplayFrames.wrapping_mul(1 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int,
                         1 as libc::c_int,
                         gameplayFrames.wrapping_rem(128 as libc::c_int as
                                                         libc::c_uint),
                         gameplayFrames.wrapping_mul(1 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int) as
            libc::c_uint;
    let fresh236 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_0: *mut Gfx = fresh236;
    (*_g_0).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x8 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_0).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         (127 as libc::c_int as
                              libc::c_uint).wrapping_sub(gameplayFrames.wrapping_rem(128
                                                                                         as
                                                                                         libc::c_int
                                                                                         as
                                                                                         libc::c_uint)),
                         gameplayFrames.wrapping_mul(10 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int,
                         1 as libc::c_int,
                         gameplayFrames.wrapping_rem(128 as libc::c_int as
                                                         libc::c_uint),
                         gameplayFrames.wrapping_mul(10 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int) as
            libc::c_uint;
    let fresh237 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_1: *mut Gfx = fresh237;
    (*_g_1).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_1).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh238 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_2: *mut Gfx = fresh238;
    (*_g_2).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_2).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh239 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_3: *mut Gfx = fresh239;
    (*_g_3).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_3).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh240 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_4: *mut Gfx = fresh240;
    (*_g_4).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_4).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    if gSaveContext.sceneSetupIndex == 4 as libc::c_int {
        spA3 =
            (255 as libc::c_int -
                 (*globalCtx).roomCtx.unk_74[0 as libc::c_int as usize] as
                     u8_0 as libc::c_int) as u8_0
    } else if gSaveContext.sceneSetupIndex == 6 as libc::c_int {
        spA0 =
            ((*globalCtx).roomCtx.unk_74[0 as libc::c_int as usize] as
                 libc::c_int + 500 as libc::c_int) as u16_0
    } else if (gSaveContext.sceneSetupIndex < 4 as libc::c_int ||
                   gSaveContext.linkAge == 0 as libc::c_int) &&
                  gSaveContext.eventChkInf[0 as libc::c_int as usize] as
                      libc::c_int & 0x80 as libc::c_int != 0 {
        spA0 = 2150 as libc::c_int as u16_0
    }
    let fresh241 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_5: *mut Gfx = fresh241;
    (*_g_5).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0xa as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_5).words.w1 = displayListHead as libc::c_uint;
    let fresh242 = displayListHead;
    displayListHead = displayListHead.offset(1);
    let mut _g_6: *mut Gfx = fresh242;
    (*_g_6).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_6).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh243 = displayListHead;
    displayListHead = displayListHead.offset(1);
    let mut _g_7: *mut Gfx = fresh243;
    (*_g_7).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_7).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (spA3 as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh244 = displayListHead;
    displayListHead = displayListHead.offset(1);
    let mut _g_8: *mut Gfx = fresh244;
    (*_g_8).words.w0 =
        (0xdf as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_8).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh245 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_9: *mut Gfx = fresh245;
    (*_g_9).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0xb as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_9).words.w1 = displayListHead as libc::c_uint;
    let fresh246 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_10: *mut Gfx = fresh246;
    (*_g_10).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0xb as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_10).words.w1 = displayListHead as libc::c_uint;
    let fresh247 = displayListHead;
    displayListHead = displayListHead.offset(1);
    let mut _g_11: *mut Gfx = fresh247;
    (*_g_11).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_11).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh248 = displayListHead;
    displayListHead = displayListHead.offset(1);
    let mut _g_12: *mut Gfx = fresh248;
    (*_g_12).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_12).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            ((spA0 as libc::c_int as libc::c_float * 0.1f32) as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let mut _g_13: *mut Gfx = displayListHead;
    (*_g_13).words.w0 =
        (0xdf as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_13).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh249 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_14: *mut Gfx = fresh249;
    (*_g_14).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0xc as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_14).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         0 as libc::c_int as u32_0,
                         (-((*globalCtx).roomCtx.unk_74[0 as libc::c_int as
                                                            usize] as
                                libc::c_int) as libc::c_float * 0.02f32) as
                             s16 as u32_0, 32 as libc::c_int,
                         16 as libc::c_int, 1 as libc::c_int,
                         0 as libc::c_int as u32_0,
                         (-((*globalCtx).roomCtx.unk_74[0 as libc::c_int as
                                                            usize] as
                                libc::c_int) as libc::c_float * 0.02f32) as
                             s16 as u32_0, 32 as libc::c_int,
                         16 as libc::c_int) as libc::c_uint;
    Graph_CloseDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                     b"../z_scene_table.c\x00" as *const u8 as
                         *const libc::c_char, 7044 as libc::c_int);
}
// Scene Draw Config 5
#[no_mangle]
pub unsafe extern "C" fn func_8009E54C(mut globalCtx: *mut GlobalContext) {
    let mut gameplayFrames: u32_0 = 0;
    let mut __gfxCtx: *mut GraphicsContext = 0 as *mut GraphicsContext;
    let mut dispRefs: [*mut Gfx; 4] = [0 as *mut Gfx; 4];
    __gfxCtx = (*globalCtx).state.gfxCtx;
    Graph_OpenDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                    b"../z_scene_table.c\x00" as *const u8 as
                        *const libc::c_char, 7058 as libc::c_int);
    if gSaveContext.sceneSetupIndex > 3 as libc::c_int ||
           gSaveContext.linkAge == 0 as libc::c_int &&
               gSaveContext.eventChkInf[6 as libc::c_int as usize] as
                   libc::c_int & 0x200 as libc::c_int == 0 {
        (*globalCtx).roomCtx.unk_74[0 as libc::c_int as usize] =
            87 as libc::c_int as s16
    }
    gameplayFrames = (*globalCtx).gameplayFrames;
    let fresh250 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g: *mut Gfx = fresh250;
    (*_g).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x8 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g).words.w1 =
        Gfx_TwoTexScrollEnvColor((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                                 gameplayFrames, gameplayFrames,
                                 32 as libc::c_int, 32 as libc::c_int,
                                 1 as libc::c_int, 0 as libc::c_int as u32_0,
                                 0 as libc::c_int as u32_0, 32 as libc::c_int,
                                 32 as libc::c_int, 0 as libc::c_int,
                                 0 as libc::c_int, 0 as libc::c_int,
                                 (*globalCtx).roomCtx.unk_74[0 as libc::c_int
                                                                 as usize] as
                                     libc::c_int + 168 as libc::c_int) as
            libc::c_uint;
    let fresh251 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_0: *mut Gfx = fresh251;
    (*_g_0).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x9 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_0).words.w1 =
        Gfx_TwoTexScrollEnvColor((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                                 gameplayFrames.wrapping_neg(),
                                 gameplayFrames.wrapping_neg(),
                                 32 as libc::c_int, 32 as libc::c_int,
                                 1 as libc::c_int, 0 as libc::c_int as u32_0,
                                 0 as libc::c_int as u32_0, 16 as libc::c_int,
                                 64 as libc::c_int, 0 as libc::c_int,
                                 0 as libc::c_int, 0 as libc::c_int,
                                 (*globalCtx).roomCtx.unk_74[0 as libc::c_int
                                                                 as usize] as
                                     libc::c_int + 168 as libc::c_int) as
            libc::c_uint;
    let fresh252 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_1: *mut Gfx = fresh252;
    (*_g_1).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_1).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh253 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_2: *mut Gfx = fresh253;
    (*_g_2).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_2).words.w1 =
        (255 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (255 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (255 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    Graph_CloseDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                     b"../z_scene_table.c\x00" as *const u8 as
                         *const libc::c_char, 7097 as libc::c_int);
}
#[no_mangle]
pub static mut sZorasDomainEntranceTextures: [*mut libc::c_void; 2] =
    unsafe {
        [gZorasDomainDayEntranceTex.as_ptr() as *mut _ as *mut libc::c_void,
         gZorasDomainNightEntranceTex.as_ptr() as *mut _ as *mut libc::c_void]
    };
// Scene Draw Config 6
#[no_mangle]
pub unsafe extern "C" fn func_8009E730(mut globalCtx: *mut GlobalContext) {
    let mut gameplayFrames: u32_0 = 0;
    let mut var: u32_0 = 0;
    let mut __gfxCtx: *mut GraphicsContext = 0 as *mut GraphicsContext;
    let mut dispRefs: [*mut Gfx; 4] = [0 as *mut Gfx; 4];
    __gfxCtx = (*globalCtx).state.gfxCtx;
    Graph_OpenDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                    b"../z_scene_table.c\x00" as *const u8 as
                        *const libc::c_char, 7123 as libc::c_int);
    gameplayFrames = (*globalCtx).gameplayFrames;
    var =
        (127 as libc::c_int as
             libc::c_uint).wrapping_sub(gameplayFrames.wrapping_mul(1 as
                                                                        libc::c_int
                                                                        as
                                                                        libc::c_uint).wrapping_rem(128
                                                                                                       as
                                                                                                       libc::c_int
                                                                                                       as
                                                                                                       libc::c_uint));
    if gSaveContext.linkAge == 0 as libc::c_int {
        var = 0 as libc::c_int as u32_0
    }
    let fresh254 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g: *mut Gfx = fresh254;
    (*_g).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0xc as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         0 as libc::c_int as u32_0, 0 as libc::c_int as u32_0,
                         64 as libc::c_int, 32 as libc::c_int,
                         1 as libc::c_int, 0 as libc::c_int as u32_0, var,
                         64 as libc::c_int, 32 as libc::c_int) as
            libc::c_uint;
    let fresh255 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_0: *mut Gfx = fresh255;
    (*_g_0).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_0).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh256 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_1: *mut Gfx = fresh256;
    (*_g_1).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_1).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh257 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_2: *mut Gfx = fresh257;
    (*_g_2).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x8 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_2).words.w1 =
        gSegments[((sZorasDomainEntranceTextures[gSaveContext.nightFlag as
                                                     usize] as u32_0) <<
                       4 as libc::c_int >> 28 as libc::c_int) as
                      usize].wrapping_add(sZorasDomainEntranceTextures[gSaveContext.nightFlag
                                                                           as
                                                                           usize]
                                              as u32_0 &
                                              0xffffff as libc::c_int as
                                                  libc::c_uint).wrapping_add(0x80000000
                                                                                 as
                                                                                 libc::c_uint)
            as *mut libc::c_void as libc::c_uint;
    let mut pad: [s32; 2] = [0; 2];
    Graph_CloseDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                     b"../z_scene_table.c\x00" as *const u8 as
                         *const libc::c_char, 7147 as libc::c_int);
}
// Scene Draw Config 7
#[no_mangle]
pub unsafe extern "C" fn func_8009E8C0(mut globalCtx: *mut GlobalContext) {
    let mut gameplayFrames: u32_0 = 0;
    let mut __gfxCtx: *mut GraphicsContext = 0 as *mut GraphicsContext;
    let mut dispRefs: [*mut Gfx; 4] = [0 as *mut Gfx; 4];
    __gfxCtx = (*globalCtx).state.gfxCtx;
    Graph_OpenDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                    b"../z_scene_table.c\x00" as *const u8 as
                        *const libc::c_char, 7161 as libc::c_int);
    gameplayFrames = (*globalCtx).gameplayFrames;
    let fresh258 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g: *mut Gfx = fresh258;
    (*_g).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x8 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         gameplayFrames.wrapping_mul(1 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         0 as libc::c_int as u32_0, 32 as libc::c_int,
                         32 as libc::c_int, 1 as libc::c_int,
                         0 as libc::c_int as u32_0, 0 as libc::c_int as u32_0,
                         32 as libc::c_int, 32 as libc::c_int) as
            libc::c_uint;
    let fresh259 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_0: *mut Gfx = fresh259;
    (*_g_0).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x9 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_0).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         0 as libc::c_int as u32_0,
                         (255 as libc::c_int as
                              libc::c_uint).wrapping_sub(gameplayFrames.wrapping_mul(2
                                                                                         as
                                                                                         libc::c_int
                                                                                         as
                                                                                         libc::c_uint).wrapping_rem(256
                                                                                                                        as
                                                                                                                        libc::c_int
                                                                                                                        as
                                                                                                                        libc::c_uint)),
                         64 as libc::c_int, 64 as libc::c_int,
                         1 as libc::c_int, 0 as libc::c_int as u32_0,
                         (255 as libc::c_int as
                              libc::c_uint).wrapping_sub(gameplayFrames.wrapping_mul(2
                                                                                         as
                                                                                         libc::c_int
                                                                                         as
                                                                                         libc::c_uint).wrapping_rem(256
                                                                                                                        as
                                                                                                                        libc::c_int
                                                                                                                        as
                                                                                                                        libc::c_uint)),
                         64 as libc::c_int, 64 as libc::c_int) as
            libc::c_uint;
    let fresh260 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_1: *mut Gfx = fresh260;
    (*_g_1).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0xa as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_1).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         0 as libc::c_int as u32_0,
                         gameplayFrames.wrapping_mul(1 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int,
                         1 as libc::c_int, 0 as libc::c_int as u32_0,
                         gameplayFrames.wrapping_mul(1 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int) as
            libc::c_uint;
    let fresh261 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_2: *mut Gfx = fresh261;
    (*_g_2).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_2).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh262 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_3: *mut Gfx = fresh262;
    (*_g_3).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_3).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh263 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_4: *mut Gfx = fresh263;
    (*_g_4).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_4).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh264 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_5: *mut Gfx = fresh264;
    (*_g_5).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_5).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    Graph_CloseDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                     b"../z_scene_table.c\x00" as *const u8 as
                         *const libc::c_char, 7192 as libc::c_int);
}
// Scene Draw Config 8
#[no_mangle]
pub unsafe extern "C" fn func_8009EAD8(mut globalCtx: *mut GlobalContext) {
    let mut gameplayFrames: u32_0 = 0;
    let mut __gfxCtx: *mut GraphicsContext = 0 as *mut GraphicsContext;
    let mut dispRefs: [*mut Gfx; 4] = [0 as *mut Gfx; 4];
    __gfxCtx = (*globalCtx).state.gfxCtx;
    Graph_OpenDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                    b"../z_scene_table.c\x00" as *const u8 as
                        *const libc::c_char, 7206 as libc::c_int);
    gameplayFrames = (*globalCtx).gameplayFrames;
    let fresh265 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g: *mut Gfx = fresh265;
    (*_g).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x8 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         0 as libc::c_int as u32_0,
                         gameplayFrames.wrapping_mul(3 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(1024
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 256 as libc::c_int,
                         1 as libc::c_int, 0 as libc::c_int as u32_0,
                         gameplayFrames.wrapping_mul(3 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(1024
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 256 as libc::c_int) as
            libc::c_uint;
    let fresh266 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_0: *mut Gfx = fresh266;
    (*_g_0).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x9 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_0).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         0 as libc::c_int as u32_0,
                         gameplayFrames.wrapping_mul(1 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(256
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         64 as libc::c_int, 64 as libc::c_int,
                         1 as libc::c_int, 0 as libc::c_int as u32_0,
                         gameplayFrames.wrapping_mul(1 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(256
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         64 as libc::c_int, 64 as libc::c_int) as
            libc::c_uint;
    let fresh267 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_1: *mut Gfx = fresh267;
    (*_g_1).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0xa as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_1).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         0 as libc::c_int as u32_0,
                         gameplayFrames.wrapping_mul(2 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int,
                         1 as libc::c_int, 0 as libc::c_int as u32_0,
                         gameplayFrames.wrapping_mul(2 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int) as
            libc::c_uint;
    let fresh268 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_2: *mut Gfx = fresh268;
    (*_g_2).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0xb as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_2).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         0 as libc::c_int as u32_0, 0 as libc::c_int as u32_0,
                         32 as libc::c_int, 32 as libc::c_int,
                         1 as libc::c_int, 0 as libc::c_int as u32_0,
                         (127 as libc::c_int as
                              libc::c_uint).wrapping_sub(gameplayFrames.wrapping_mul(3
                                                                                         as
                                                                                         libc::c_int
                                                                                         as
                                                                                         libc::c_uint).wrapping_rem(128
                                                                                                                        as
                                                                                                                        libc::c_int
                                                                                                                        as
                                                                                                                        libc::c_uint)),
                         32 as libc::c_int, 32 as libc::c_int) as
            libc::c_uint;
    let fresh269 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_3: *mut Gfx = fresh269;
    (*_g_3).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0xc as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_3).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         0 as libc::c_int as u32_0,
                         gameplayFrames.wrapping_mul(1 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int,
                         1 as libc::c_int, 0 as libc::c_int as u32_0,
                         gameplayFrames.wrapping_mul(1 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int) as
            libc::c_uint;
    let fresh270 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_4: *mut Gfx = fresh270;
    (*_g_4).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0xd as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_4).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         0 as libc::c_int as u32_0,
                         gameplayFrames.wrapping_mul(1 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(64
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         16 as libc::c_int, 16 as libc::c_int,
                         1 as libc::c_int, 0 as libc::c_int as u32_0,
                         gameplayFrames.wrapping_mul(1 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(64
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         16 as libc::c_int, 16 as libc::c_int) as
            libc::c_uint;
    let fresh271 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_5: *mut Gfx = fresh271;
    (*_g_5).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_5).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh272 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_6: *mut Gfx = fresh272;
    (*_g_6).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_6).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh273 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_7: *mut Gfx = fresh273;
    (*_g_7).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_7).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh274 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_8: *mut Gfx = fresh274;
    (*_g_8).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_8).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    Graph_CloseDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                     b"../z_scene_table.c\x00" as *const u8 as
                         *const libc::c_char, 7260 as libc::c_int);
}
// Scene Draw Config 9
#[no_mangle]
pub unsafe extern "C" fn func_8009EE44(mut globalCtx: *mut GlobalContext) {
    let mut gameplayFrames: u32_0 = 0;
    // Necessary to match
    let mut __gfxCtx: *mut GraphicsContext = 0 as *mut GraphicsContext;
    let mut dispRefs: [*mut Gfx; 4] = [0 as *mut Gfx; 4];
    __gfxCtx = (*globalCtx).state.gfxCtx;
    Graph_OpenDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                    b"../z_scene_table.c\x00" as *const u8 as
                        *const libc::c_char, 7274 as libc::c_int);
    gameplayFrames = (*globalCtx).gameplayFrames;
    let fresh275 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g: *mut Gfx = fresh275;
    (*_g).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x8 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         gameplayFrames.wrapping_rem(128 as libc::c_int as
                                                         libc::c_uint),
                         0 as libc::c_int as u32_0, 32 as libc::c_int,
                         16 as libc::c_int, 1 as libc::c_int,
                         gameplayFrames.wrapping_rem(128 as libc::c_int as
                                                         libc::c_uint),
                         0 as libc::c_int as u32_0, 32 as libc::c_int,
                         16 as libc::c_int) as libc::c_uint;
    let fresh276 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_0: *mut Gfx = fresh276;
    (*_g_0).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x9 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_0).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         (127 as libc::c_int as
                              libc::c_uint).wrapping_sub(gameplayFrames.wrapping_rem(128
                                                                                         as
                                                                                         libc::c_int
                                                                                         as
                                                                                         libc::c_uint)),
                         gameplayFrames.wrapping_rem(128 as libc::c_int as
                                                         libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int,
                         1 as libc::c_int,
                         gameplayFrames.wrapping_rem(128 as libc::c_int as
                                                         libc::c_uint),
                         gameplayFrames.wrapping_rem(128 as libc::c_int as
                                                         libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int) as
            libc::c_uint;
    let fresh277 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_1: *mut Gfx = fresh277;
    (*_g_1).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_1).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh278 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_2: *mut Gfx = fresh278;
    (*_g_2).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_2).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh279 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_3: *mut Gfx = fresh279;
    (*_g_3).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_3).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh280 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_4: *mut Gfx = fresh280;
    (*_g_4).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_4).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    if (*globalCtx).roomCtx.unk_74[0 as libc::c_int as usize] as libc::c_int
           == 0 as libc::c_int &&
           gSaveContext.inventory.items[gItemSlots[ITEM_COJIRO as libc::c_int
                                                       as usize] as usize] as
               libc::c_int == ITEM_COJIRO as libc::c_int {
        if (*globalCtx).roomCtx.unk_74[1 as libc::c_int as usize] as
               libc::c_int == 50 as libc::c_int {
            func_8002F7DC(&mut (*((*(*globalCtx).actorCtx.actorLists.as_mut_ptr().offset(ACTORCAT_PLAYER
                                                                                             as
                                                                                             libc::c_int
                                                                                             as
                                                                                             isize)).head
                                      as *mut Player)).actor,
                          0x2813 as libc::c_int as u16_0);
            (*globalCtx).roomCtx.unk_74[0 as libc::c_int as usize] =
                1 as libc::c_int as s16
        }
        (*globalCtx).roomCtx.unk_74[1 as libc::c_int as usize] += 1
    }
    Graph_CloseDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                     b"../z_scene_table.c\x00" as *const u8 as
                         *const libc::c_char, 7309 as libc::c_int);
}
// Scene Draw Config 10
#[no_mangle]
pub unsafe extern "C" fn func_8009F074(mut globalCtx: *mut GlobalContext) {
    let mut gameplayFrames: u32_0 = 0;
    let mut __gfxCtx: *mut GraphicsContext = 0 as *mut GraphicsContext;
    let mut dispRefs: [*mut Gfx; 4] = [0 as *mut Gfx; 4];
    __gfxCtx = (*globalCtx).state.gfxCtx;
    Graph_OpenDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                    b"../z_scene_table.c\x00" as *const u8 as
                        *const libc::c_char, 7323 as libc::c_int);
    gameplayFrames = (*globalCtx).gameplayFrames;
    let fresh281 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g: *mut Gfx = fresh281;
    (*_g).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x8 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         0 as libc::c_int as u32_0, 0 as libc::c_int as u32_0,
                         32 as libc::c_int, 32 as libc::c_int,
                         1 as libc::c_int, 0 as libc::c_int as u32_0,
                         (127 as libc::c_int as
                              libc::c_uint).wrapping_sub(gameplayFrames.wrapping_rem(128
                                                                                         as
                                                                                         libc::c_int
                                                                                         as
                                                                                         libc::c_uint)),
                         32 as libc::c_int, 32 as libc::c_int) as
            libc::c_uint;
    let fresh282 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_0: *mut Gfx = fresh282;
    (*_g_0).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_0).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh283 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_1: *mut Gfx = fresh283;
    (*_g_1).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_1).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh284 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_2: *mut Gfx = fresh284;
    (*_g_2).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_2).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh285 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_3: *mut Gfx = fresh285;
    (*_g_3).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_3).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    Graph_CloseDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                     b"../z_scene_table.c\x00" as *const u8 as
                         *const libc::c_char, 7339 as libc::c_int);
}
#[no_mangle]
pub static mut D_8012A380: [*mut libc::c_void; 2] =
    unsafe {
        [gSpot12_009678Tex.as_ptr() as *mut _ as *mut libc::c_void,
         gSpot12_00DE78Tex.as_ptr() as *mut _ as *mut libc::c_void]
    };
// Scene Draw Config 11
#[no_mangle]
pub unsafe extern "C" fn func_8009F1B4(mut globalCtx: *mut GlobalContext) {
    let mut __gfxCtx: *mut GraphicsContext = 0 as *mut GraphicsContext;
    let mut dispRefs: [*mut Gfx; 4] = [0 as *mut Gfx; 4];
    __gfxCtx = (*globalCtx).state.gfxCtx;
    Graph_OpenDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                    b"../z_scene_table.c\x00" as *const u8 as
                        *const libc::c_char, 7363 as libc::c_int);
    let mut pad: [s32; 2] = [0; 2];
    let fresh286 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g: *mut Gfx = fresh286;
    (*_g).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x8 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g).words.w1 =
        gSegments[((D_8012A380[gSaveContext.nightFlag as usize] as u32_0) <<
                       4 as libc::c_int >> 28 as libc::c_int) as
                      usize].wrapping_add(D_8012A380[gSaveContext.nightFlag as
                                                         usize] as u32_0 &
                                              0xffffff as libc::c_int as
                                                  libc::c_uint).wrapping_add(0x80000000
                                                                                 as
                                                                                 libc::c_uint)
            as *mut libc::c_void as libc::c_uint;
    Graph_CloseDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                     b"../z_scene_table.c\x00" as *const u8 as
                         *const libc::c_char, 7371 as libc::c_int);
}
// Scene Draw Config 12
#[no_mangle]
pub unsafe extern "C" fn func_8009F270(mut globalCtx: *mut GlobalContext) {
    let mut gameplayFrames: u32_0 = 0;
    let mut __gfxCtx: *mut GraphicsContext = 0 as *mut GraphicsContext;
    let mut dispRefs: [*mut Gfx; 4] = [0 as *mut Gfx; 4];
    __gfxCtx = (*globalCtx).state.gfxCtx;
    Graph_OpenDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                    b"../z_scene_table.c\x00" as *const u8 as
                        *const libc::c_char, 7385 as libc::c_int);
    gameplayFrames = (*globalCtx).gameplayFrames;
    let fresh287 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g: *mut Gfx = fresh287;
    (*_g).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x8 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         0 as libc::c_int as u32_0,
                         gameplayFrames.wrapping_rem(128 as libc::c_int as
                                                         libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int,
                         1 as libc::c_int, 0 as libc::c_int as u32_0,
                         gameplayFrames.wrapping_rem(128 as libc::c_int as
                                                         libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int) as
            libc::c_uint;
    let fresh288 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_0: *mut Gfx = fresh288;
    (*_g_0).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x9 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_0).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         0 as libc::c_int as u32_0,
                         gameplayFrames.wrapping_rem(128 as libc::c_int as
                                                         libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int,
                         1 as libc::c_int, 0 as libc::c_int as u32_0,
                         gameplayFrames.wrapping_rem(128 as libc::c_int as
                                                         libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int) as
            libc::c_uint;
    let fresh289 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_1: *mut Gfx = fresh289;
    (*_g_1).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_1).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh290 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_2: *mut Gfx = fresh290;
    (*_g_2).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_2).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh291 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_3: *mut Gfx = fresh291;
    (*_g_3).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_3).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh292 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_4: *mut Gfx = fresh292;
    (*_g_4).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_4).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    Graph_CloseDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                     b"../z_scene_table.c\x00" as *const u8 as
                         *const libc::c_char, 7409 as libc::c_int);
}
// Scene Draw Config 13
#[no_mangle]
pub unsafe extern "C" fn func_8009F40C(mut globalCtx: *mut GlobalContext) {
    let mut gameplayFrames: u32_0 = 0;
    let mut __gfxCtx: *mut GraphicsContext = 0 as *mut GraphicsContext;
    let mut dispRefs: [*mut Gfx; 4] = [0 as *mut Gfx; 4];
    __gfxCtx = (*globalCtx).state.gfxCtx;
    Graph_OpenDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                    b"../z_scene_table.c\x00" as *const u8 as
                        *const libc::c_char, 7423 as libc::c_int);
    gameplayFrames = (*globalCtx).gameplayFrames;
    let fresh293 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g: *mut Gfx = fresh293;
    (*_g).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x8 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         (127 as libc::c_int as
                              libc::c_uint).wrapping_sub(gameplayFrames.wrapping_rem(128
                                                                                         as
                                                                                         libc::c_int
                                                                                         as
                                                                                         libc::c_uint)),
                         gameplayFrames.wrapping_mul(10 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int,
                         1 as libc::c_int,
                         gameplayFrames.wrapping_rem(128 as libc::c_int as
                                                         libc::c_uint),
                         gameplayFrames.wrapping_mul(10 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int) as
            libc::c_uint;
    let fresh294 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_0: *mut Gfx = fresh294;
    (*_g_0).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x9 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_0).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         (127 as libc::c_int as
                              libc::c_uint).wrapping_sub(gameplayFrames.wrapping_rem(128
                                                                                         as
                                                                                         libc::c_int
                                                                                         as
                                                                                         libc::c_uint)),
                         gameplayFrames.wrapping_mul(3 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int,
                         1 as libc::c_int,
                         gameplayFrames.wrapping_rem(128 as libc::c_int as
                                                         libc::c_uint),
                         gameplayFrames.wrapping_mul(3 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int) as
            libc::c_uint;
    let fresh295 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_1: *mut Gfx = fresh295;
    (*_g_1).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_1).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh296 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_2: *mut Gfx = fresh296;
    (*_g_2).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_2).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh297 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_3: *mut Gfx = fresh297;
    (*_g_3).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_3).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh298 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_4: *mut Gfx = fresh298;
    (*_g_4).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_4).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    Graph_CloseDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                     b"../z_scene_table.c\x00" as *const u8 as
                         *const libc::c_char, 7443 as libc::c_int);
}
// Scene Draw Config 14
#[no_mangle]
pub unsafe extern "C" fn func_8009F5D4(mut globalCtx: *mut GlobalContext) {
    let mut displayListHead: *mut Gfx =
        Graph_Alloc((*globalCtx).state.gfxCtx,
                    (3 as libc::c_int as
                         libc::c_uint).wrapping_mul(::std::mem::size_of::<Gfx>()
                                                        as libc::c_ulong) as
                        size_t) as *mut Gfx;
    let mut __gfxCtx: *mut GraphicsContext = 0 as *mut GraphicsContext;
    let mut dispRefs: [*mut Gfx; 4] = [0 as *mut Gfx; 4];
    __gfxCtx = (*globalCtx).state.gfxCtx;
    Graph_OpenDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                    b"../z_scene_table.c\x00" as *const u8 as
                        *const libc::c_char, 7461 as libc::c_int);
    let fresh299 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g: *mut Gfx = fresh299;
    (*_g).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x8 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g).words.w1 = displayListHead as libc::c_uint;
    if gSaveContext.dayTime as libc::c_int >= 0x4aac as libc::c_int &&
           gSaveContext.dayTime as libc::c_int <= 0xc000 as libc::c_int {
        let mut _g_0: *mut Gfx = displayListHead;
        (*_g_0).words.w0 =
            (0xdf as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int;
        (*_g_0).words.w1 = 0 as libc::c_int as libc::c_uint
    } else {
        if gSaveContext.dayTime as libc::c_int > 0xc000 as libc::c_int {
            if (*globalCtx).roomCtx.unk_74[0 as libc::c_int as usize] as
                   libc::c_int != 255 as libc::c_int {
                Math_StepToS(&mut *(*globalCtx).roomCtx.unk_74.as_mut_ptr().offset(0
                                                                                       as
                                                                                       libc::c_int
                                                                                       as
                                                                                       isize),
                             255 as libc::c_int as s16,
                             5 as libc::c_int as s16);
            }
        } else if gSaveContext.dayTime as libc::c_int >= 0x4000 as libc::c_int
         {
            if (*globalCtx).roomCtx.unk_74[0 as libc::c_int as usize] as
                   libc::c_int != 0 as libc::c_int {
                Math_StepToS(&mut *(*globalCtx).roomCtx.unk_74.as_mut_ptr().offset(0
                                                                                       as
                                                                                       libc::c_int
                                                                                       as
                                                                                       isize),
                             0 as libc::c_int as s16,
                             10 as libc::c_int as s16);
            }
        }
        let fresh300 = displayListHead;
        displayListHead = displayListHead.offset(1);
        let mut _g_1: *mut Gfx = fresh300;
        (*_g_1).words.w0 =
            (0xfa as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int
                |
                (0 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    8 as libc::c_int |
                (0 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int;
        (*_g_1).words.w1 =
            (255 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int
                |
                (255 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    16 as libc::c_int |
                (255 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    8 as libc::c_int |
                ((*globalCtx).roomCtx.unk_74[0 as libc::c_int as usize] as
                     u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int;
        let fresh301 = displayListHead;
        displayListHead = displayListHead.offset(1);
        let mut _g_2: *mut Gfx = fresh301;
        (*_g_2).words.w0 =
            (0xde as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int
                |
                (0 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    16 as libc::c_int |
                (0 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 16 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int;
        (*_g_2).words.w1 =
            spot16_room_0DL_00AA48.as_mut_ptr() as libc::c_uint;
        let mut _g_3: *mut Gfx = displayListHead;
        (*_g_3).words.w0 =
            (0xdf as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int;
        (*_g_3).words.w1 = 0 as libc::c_int as libc::c_uint
    }
    let fresh302 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_4: *mut Gfx = fresh302;
    (*_g_4).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_4).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh303 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_5: *mut Gfx = fresh303;
    (*_g_5).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_5).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh304 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_6: *mut Gfx = fresh304;
    (*_g_6).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_6).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh305 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_7: *mut Gfx = fresh305;
    (*_g_7).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_7).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    Graph_CloseDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                     b"../z_scene_table.c\x00" as *const u8 as
                         *const libc::c_char, 7495 as libc::c_int);
}
// Scene Draw Config 15
#[no_mangle]
pub unsafe extern "C" fn func_8009F7D4(mut globalCtx: *mut GlobalContext) {
    let mut sp6F: s8 =
        (coss(((*globalCtx).gameplayFrames.wrapping_mul(1500 as libc::c_int as
                                                            libc::c_uint) &
                   0xffff as libc::c_int as libc::c_uint) as u16_0) as
             libc::c_int >> 8 as libc::c_int) as s8;
    let mut sp6E: s8 =
        (coss(((*globalCtx).gameplayFrames.wrapping_mul(1500 as libc::c_int as
                                                            libc::c_uint) &
                   0xffff as libc::c_int as libc::c_uint) as u16_0) as
             libc::c_int >> 8 as libc::c_int) as s8;
    let mut gameplayFrames: u32_0 = 0;
    let mut __gfxCtx: *mut GraphicsContext = 0 as *mut GraphicsContext;
    let mut dispRefs: [*mut Gfx; 4] = [0 as *mut Gfx; 4];
    __gfxCtx = (*globalCtx).state.gfxCtx;
    Graph_OpenDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                    b"../z_scene_table.c\x00" as *const u8 as
                        *const libc::c_char, 7512 as libc::c_int);
    gameplayFrames = (*globalCtx).gameplayFrames;
    sp6F =
        ((sp6F as libc::c_int >> 1 as libc::c_int) + 192 as libc::c_int) as
            s8;
    sp6E =
        ((sp6E as libc::c_int >> 1 as libc::c_int) + 192 as libc::c_int) as
            s8;
    let fresh306 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g: *mut Gfx = fresh306;
    (*_g).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x8 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         0 as libc::c_int as u32_0,
                         gameplayFrames.wrapping_rem(128 as libc::c_int as
                                                         libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int,
                         1 as libc::c_int, 0 as libc::c_int as u32_0,
                         gameplayFrames.wrapping_rem(128 as libc::c_int as
                                                         libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int) as
            libc::c_uint;
    let fresh307 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_0: *mut Gfx = fresh307;
    (*_g_0).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_0).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh308 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_1: *mut Gfx = fresh308;
    (*_g_1).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_1).words.w1 =
        (sp6F as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (sp6E as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (255 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh309 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_2: *mut Gfx = fresh309;
    (*_g_2).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_2).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh310 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_3: *mut Gfx = fresh310;
    (*_g_3).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_3).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    Graph_CloseDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                     b"../z_scene_table.c\x00" as *const u8 as
                         *const libc::c_char, 7530 as libc::c_int);
}
#[no_mangle]
pub static mut sGoronCityEntranceTextures: [*mut libc::c_void; 2] =
    unsafe {
        [gGoronCityDayEntranceTex.as_ptr() as *mut _ as *mut libc::c_void,
         gGoronCityNightEntranceTex.as_ptr() as *mut _ as *mut libc::c_void]
    };
// Scene Draw Config 16
#[no_mangle]
pub unsafe extern "C" fn func_8009F9D0(mut globalCtx: *mut GlobalContext) {
    let mut gameplayFrames: u32_0 = 0;
    let mut __gfxCtx: *mut GraphicsContext = 0 as *mut GraphicsContext;
    let mut dispRefs: [*mut Gfx; 4] = [0 as *mut Gfx; 4];
    __gfxCtx = (*globalCtx).state.gfxCtx;
    Graph_OpenDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                    b"../z_scene_table.c\x00" as *const u8 as
                        *const libc::c_char, 7555 as libc::c_int);
    gameplayFrames = (*globalCtx).gameplayFrames;
    let fresh311 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g: *mut Gfx = fresh311;
    (*_g).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x8 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         0 as libc::c_int as u32_0,
                         (127 as libc::c_int as
                              libc::c_uint).wrapping_sub(gameplayFrames.wrapping_rem(128
                                                                                         as
                                                                                         libc::c_int
                                                                                         as
                                                                                         libc::c_uint)),
                         32 as libc::c_int, 32 as libc::c_int,
                         1 as libc::c_int,
                         gameplayFrames.wrapping_rem(128 as libc::c_int as
                                                         libc::c_uint),
                         0 as libc::c_int as u32_0, 32 as libc::c_int,
                         32 as libc::c_int) as libc::c_uint;
    let fresh312 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_0: *mut Gfx = fresh312;
    (*_g_0).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_0).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh313 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_1: *mut Gfx = fresh313;
    (*_g_1).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_1).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh314 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_2: *mut Gfx = fresh314;
    (*_g_2).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_2).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh315 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_3: *mut Gfx = fresh315;
    (*_g_3).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_3).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh316 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_4: *mut Gfx = fresh316;
    (*_g_4).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x8 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_4).words.w1 =
        gSegments[((sGoronCityEntranceTextures[gSaveContext.nightFlag as
                                                   usize] as u32_0) <<
                       4 as libc::c_int >> 28 as libc::c_int) as
                      usize].wrapping_add(sGoronCityEntranceTextures[gSaveContext.nightFlag
                                                                         as
                                                                         usize]
                                              as u32_0 &
                                              0xffffff as libc::c_int as
                                                  libc::c_uint).wrapping_add(0x80000000
                                                                                 as
                                                                                 libc::c_uint)
            as *mut libc::c_void as libc::c_uint;
    let mut pad: [s32; 2] = [0; 2];
    Graph_CloseDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                     b"../z_scene_table.c\x00" as *const u8 as
                         *const libc::c_char, 7578 as libc::c_int);
}
#[no_mangle]
pub static mut sLonLonRanchWindowTextures: [*mut libc::c_void; 2] =
    unsafe {
        [gLonLonRanchDayWindowTex.as_ptr() as *mut _ as *mut libc::c_void,
         gLonLonRangeNightWindowsTex.as_ptr() as *mut _ as *mut libc::c_void]
    };
// Scene Draw Config 17
#[no_mangle]
pub unsafe extern "C" fn func_8009FB74(mut globalCtx: *mut GlobalContext) {
    let mut __gfxCtx: *mut GraphicsContext = 0 as *mut GraphicsContext;
    let mut dispRefs: [*mut Gfx; 4] = [0 as *mut Gfx; 4];
    __gfxCtx = (*globalCtx).state.gfxCtx;
    Graph_OpenDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                    b"../z_scene_table.c\x00" as *const u8 as
                        *const libc::c_char, 7602 as libc::c_int);
    let mut pad: [s32; 2] = [0; 2];
    let fresh317 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g: *mut Gfx = fresh317;
    (*_g).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x8 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g).words.w1 =
        gSegments[((sLonLonRanchWindowTextures[gSaveContext.nightFlag as
                                                   usize] as u32_0) <<
                       4 as libc::c_int >> 28 as libc::c_int) as
                      usize].wrapping_add(sLonLonRanchWindowTextures[gSaveContext.nightFlag
                                                                         as
                                                                         usize]
                                              as u32_0 &
                                              0xffffff as libc::c_int as
                                                  libc::c_uint).wrapping_add(0x80000000
                                                                                 as
                                                                                 libc::c_uint)
            as *mut libc::c_void as libc::c_uint;
    let fresh318 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_0: *mut Gfx = fresh318;
    (*_g_0).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_0).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh319 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_1: *mut Gfx = fresh319;
    (*_g_1).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_1).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh320 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_2: *mut Gfx = fresh320;
    (*_g_2).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_2).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh321 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_3: *mut Gfx = fresh321;
    (*_g_3).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_3).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    Graph_CloseDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                     b"../z_scene_table.c\x00" as *const u8 as
                         *const libc::c_char, 7615 as libc::c_int);
}
// Scene Draw Config 18
#[no_mangle]
pub unsafe extern "C" fn func_8009FC90(mut globalCtx: *mut GlobalContext) {
    let mut gameplayFrames: u32_0 = 0;
    let mut __gfxCtx: *mut GraphicsContext = 0 as *mut GraphicsContext;
    let mut dispRefs: [*mut Gfx; 4] = [0 as *mut Gfx; 4];
    __gfxCtx = (*globalCtx).state.gfxCtx;
    Graph_OpenDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                    b"../z_scene_table.c\x00" as *const u8 as
                        *const libc::c_char, 7630 as libc::c_int);
    gameplayFrames = (*globalCtx).gameplayFrames;
    let fresh322 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g: *mut Gfx = fresh322;
    (*_g).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x8 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         0 as libc::c_int as u32_0,
                         (127 as libc::c_int as
                              libc::c_uint).wrapping_sub(gameplayFrames.wrapping_rem(128
                                                                                         as
                                                                                         libc::c_int
                                                                                         as
                                                                                         libc::c_uint)),
                         32 as libc::c_int, 32 as libc::c_int,
                         1 as libc::c_int,
                         (127 as libc::c_int as
                              libc::c_uint).wrapping_sub(gameplayFrames.wrapping_rem(128
                                                                                         as
                                                                                         libc::c_int
                                                                                         as
                                                                                         libc::c_uint)),
                         0 as libc::c_int as u32_0, 32 as libc::c_int,
                         32 as libc::c_int) as libc::c_uint;
    let fresh323 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_0: *mut Gfx = fresh323;
    (*_g_0).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x9 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_0).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         gameplayFrames.wrapping_mul(3 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         (127 as libc::c_int as
                              libc::c_uint).wrapping_sub(gameplayFrames.wrapping_mul(6
                                                                                         as
                                                                                         libc::c_int
                                                                                         as
                                                                                         libc::c_uint).wrapping_rem(128
                                                                                                                        as
                                                                                                                        libc::c_int
                                                                                                                        as
                                                                                                                        libc::c_uint)),
                         32 as libc::c_int, 32 as libc::c_int,
                         1 as libc::c_int,
                         gameplayFrames.wrapping_mul(6 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         (127 as libc::c_int as
                              libc::c_uint).wrapping_sub(gameplayFrames.wrapping_mul(3
                                                                                         as
                                                                                         libc::c_int
                                                                                         as
                                                                                         libc::c_uint).wrapping_rem(128
                                                                                                                        as
                                                                                                                        libc::c_int
                                                                                                                        as
                                                                                                                        libc::c_uint)),
                         32 as libc::c_int, 32 as libc::c_int) as
            libc::c_uint;
    let fresh324 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_1: *mut Gfx = fresh324;
    (*_g_1).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_1).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh325 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_2: *mut Gfx = fresh325;
    (*_g_2).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_2).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (64 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh326 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_3: *mut Gfx = fresh326;
    (*_g_3).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_3).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh327 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_4: *mut Gfx = fresh327;
    (*_g_4).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_4).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (64 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    Graph_CloseDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                     b"../z_scene_table.c\x00" as *const u8 as
                         *const libc::c_char, 7653 as libc::c_int);
}
#[no_mangle]
pub static mut D_8012A398: f32_0 = 0.0f32;
#[no_mangle]
pub unsafe extern "C" fn func_8009FE58(mut globalCtx: *mut GlobalContext) {
    static mut D_8012A39C: s16 = 538 as libc::c_int as s16;
    static mut D_8012A3A0: s16 = 4272 as libc::c_int as s16;
    let mut gameplayFrames: u32_0 = 0;
    let mut temp: f32_0 = 0.;
    let mut __gfxCtx: *mut GraphicsContext = 0 as *mut GraphicsContext;
    let mut dispRefs: [*mut Gfx; 4] = [0 as *mut Gfx; 4];
    __gfxCtx = (*globalCtx).state.gfxCtx;
    Graph_OpenDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                    b"../z_scene_table.c\x00" as *const u8 as
                        *const libc::c_char, 7712 as libc::c_int);
    gameplayFrames = (*globalCtx).gameplayFrames;
    if (*globalCtx).sceneNum as libc::c_int == SCENE_BDAN as libc::c_int {
        let fresh328 = (*__gfxCtx).polyOpa.p;
        (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
        let mut _g: *mut Gfx = fresh328;
        (*_g).words.w0 =
            (0xdb as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int
                |
                (0x6 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    16 as libc::c_int |
                ((0x8 as libc::c_int * 4 as libc::c_int) as u32_0 &
                     (((0x1 as libc::c_int) << 16 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int;
        (*_g).words.w1 =
            Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                             gameplayFrames.wrapping_rem(128 as libc::c_int as
                                                             libc::c_uint),
                             gameplayFrames.wrapping_mul(2 as libc::c_int as
                                                             libc::c_uint).wrapping_rem(128
                                                                                            as
                                                                                            libc::c_int
                                                                                            as
                                                                                            libc::c_uint),
                             32 as libc::c_int, 32 as libc::c_int,
                             1 as libc::c_int,
                             (127 as libc::c_int as
                                  libc::c_uint).wrapping_sub(gameplayFrames.wrapping_rem(128
                                                                                             as
                                                                                             libc::c_int
                                                                                             as
                                                                                             libc::c_uint)),
                             gameplayFrames.wrapping_mul(2 as libc::c_int as
                                                             libc::c_uint).wrapping_rem(128
                                                                                            as
                                                                                            libc::c_int
                                                                                            as
                                                                                            libc::c_uint),
                             32 as libc::c_int, 32 as libc::c_int) as
                libc::c_uint;
        let fresh329 = (*__gfxCtx).polyOpa.p;
        (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
        let mut _g_0: *mut Gfx = fresh329;
        (*_g_0).words.w0 =
            (0xdb as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int
                |
                (0x6 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    16 as libc::c_int |
                ((0xb as libc::c_int * 4 as libc::c_int) as u32_0 &
                     (((0x1 as libc::c_int) << 16 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int;
        (*_g_0).words.w1 =
            Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                             0 as libc::c_int as u32_0,
                             (255 as libc::c_int as
                                  libc::c_uint).wrapping_sub(gameplayFrames.wrapping_mul(4
                                                                                             as
                                                                                             libc::c_int
                                                                                             as
                                                                                             libc::c_uint).wrapping_rem(256
                                                                                                                            as
                                                                                                                            libc::c_int
                                                                                                                            as
                                                                                                                            libc::c_uint)),
                             32 as libc::c_int, 64 as libc::c_int,
                             1 as libc::c_int, 0 as libc::c_int as u32_0,
                             (255 as libc::c_int as
                                  libc::c_uint).wrapping_sub(gameplayFrames.wrapping_mul(4
                                                                                             as
                                                                                             libc::c_int
                                                                                             as
                                                                                             libc::c_uint).wrapping_rem(256
                                                                                                                            as
                                                                                                                            libc::c_int
                                                                                                                            as
                                                                                                                            libc::c_uint)),
                             32 as libc::c_int, 64 as libc::c_int) as
                libc::c_uint
    } else {
        let fresh330 = (*__gfxCtx).polyOpa.p;
        (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
        let mut _g_1: *mut Gfx = fresh330;
        (*_g_1).words.w0 =
            (0xdb as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 24 as libc::c_int
                |
                (0x6 as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    16 as libc::c_int |
                ((0x8 as libc::c_int * 4 as libc::c_int) as u32_0 &
                     (((0x1 as libc::c_int) << 16 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    0 as libc::c_int;
        (*_g_1).words.w1 =
            Gfx_TexScroll((*globalCtx).state.gfxCtx,
                          (127 as libc::c_int as
                               libc::c_uint).wrapping_sub(gameplayFrames.wrapping_mul(1
                                                                                          as
                                                                                          libc::c_int
                                                                                          as
                                                                                          libc::c_uint)).wrapping_rem(128
                                                                                                                          as
                                                                                                                          libc::c_int
                                                                                                                          as
                                                                                                                          libc::c_uint),
                          gameplayFrames.wrapping_mul(1 as libc::c_int as
                                                          libc::c_uint).wrapping_rem(128
                                                                                         as
                                                                                         libc::c_int
                                                                                         as
                                                                                         libc::c_uint),
                          32 as libc::c_int, 32 as libc::c_int) as
                libc::c_uint
    }
    let fresh331 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_2: *mut Gfx = fresh331;
    (*_g_2).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_2).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh332 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_3: *mut Gfx = fresh332;
    (*_g_3).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_3).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh333 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_4: *mut Gfx = fresh333;
    (*_g_4).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_4).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh334 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_5: *mut Gfx = fresh334;
    (*_g_5).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_5).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    if FrameAdvance_IsEnabled(globalCtx) != 1 as libc::c_int {
        D_8012A39C = (D_8012A39C as libc::c_int + 1820 as libc::c_int) as s16;
        D_8012A3A0 = (D_8012A3A0 as libc::c_int + 1820 as libc::c_int) as s16;
        temp = 0.020000001f32;
        func_800AA76C(&mut (*globalCtx).view,
                      360.00018f32 / 65535.0f32 *
                          (3.14159265358979323846f32 / 180.0f32) * temp *
                          Math_CosS(D_8012A39C),
                      360.00018f32 / 65535.0f32 *
                          (3.14159265358979323846f32 / 180.0f32) * temp *
                          Math_SinS(D_8012A39C),
                      360.00018f32 / 65535.0f32 *
                          (3.14159265358979323846f32 / 180.0f32) * temp *
                          Math_SinS(D_8012A3A0));
        func_800AA78C(&mut (*globalCtx).view,
                      1.0f32 + 0.79999995f32 * temp * Math_SinS(D_8012A3A0),
                      1.0f32 + 0.39999998f32 * temp * Math_CosS(D_8012A3A0),
                      1.0f32 +
                          1 as libc::c_int as libc::c_float * temp *
                              Math_CosS(D_8012A39C));
        func_800AA7AC(&mut (*globalCtx).view, 0.95f32);
        match (*globalCtx).roomCtx.unk_74[0 as libc::c_int as usize] as
                  libc::c_int {
            1 => {
                if ((*globalCtx).roomCtx.unk_74[1 as libc::c_int as usize] as
                        libc::c_int) < 1200 as libc::c_int {
                    (*globalCtx).roomCtx.unk_74[1 as libc::c_int as usize] =
                        ((*globalCtx).roomCtx.unk_74[1 as libc::c_int as
                                                         usize] as libc::c_int
                             + 200 as libc::c_int) as s16
                } else {
                    (*globalCtx).roomCtx.unk_74[0 as libc::c_int as usize] +=
                        1
                }
            }
            2 => {
                if (*globalCtx).roomCtx.unk_74[1 as libc::c_int as usize] as
                       libc::c_int > 0 as libc::c_int {
                    (*globalCtx).roomCtx.unk_74[1 as libc::c_int as usize] =
                        ((*globalCtx).roomCtx.unk_74[1 as libc::c_int as
                                                         usize] as libc::c_int
                             - 30 as libc::c_int) as s16
                } else {
                    (*globalCtx).roomCtx.unk_74[1 as libc::c_int as usize] =
                        0 as libc::c_int as s16;
                    (*globalCtx).roomCtx.unk_74[0 as libc::c_int as usize] =
                        0 as libc::c_int as s16
                }
            }
            0 | _ => { }
        }
        D_8012A398 +=
            0.15f32 +
                (*globalCtx).roomCtx.unk_74[1 as libc::c_int as usize] as
                    libc::c_int as libc::c_float * 0.001f32
    }
    if (*globalCtx).roomCtx.curRoom.num as libc::c_int == 2 as libc::c_int {
        Matrix_Scale(1.0f32, sinf(D_8012A398) * 0.8f32, 1.0f32,
                     MTXMODE_NEW as libc::c_int as u8_0);
    } else {
        Matrix_Scale(1.005f32, sinf(D_8012A398) * 0.8f32, 1.005f32,
                     MTXMODE_NEW as libc::c_int as u8_0);
    }
    let fresh335 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_6: *mut Gfx = fresh335;
    (*_g_6).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0xd as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_6).words.w1 =
        Matrix_NewMtx((*globalCtx).state.gfxCtx,
                      b"../z_scene_table.c\x00" as *const u8 as
                          *const libc::c_char as *mut libc::c_char,
                      7809 as libc::c_int) as libc::c_uint;
    Graph_CloseDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                     b"../z_scene_table.c\x00" as *const u8 as
                         *const libc::c_char, 7811 as libc::c_int);
}
// Scene Draw Config 26
#[no_mangle]
pub unsafe extern "C" fn func_800A0334(mut globalCtx: *mut GlobalContext) {
    let mut gameplayFrames: u32_0 = 0;
    let mut __gfxCtx: *mut GraphicsContext = 0 as *mut GraphicsContext;
    let mut dispRefs: [*mut Gfx; 4] = [0 as *mut Gfx; 4];
    __gfxCtx = (*globalCtx).state.gfxCtx;
    Graph_OpenDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                    b"../z_scene_table.c\x00" as *const u8 as
                        *const libc::c_char, 7825 as libc::c_int);
    gameplayFrames = (*globalCtx).gameplayFrames;
    let fresh336 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g: *mut Gfx = fresh336;
    (*_g).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x8 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         (127 as libc::c_int as
                              libc::c_uint).wrapping_sub(gameplayFrames.wrapping_rem(128
                                                                                         as
                                                                                         libc::c_int
                                                                                         as
                                                                                         libc::c_uint)),
                         gameplayFrames.wrapping_mul(1 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(512
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 128 as libc::c_int,
                         1 as libc::c_int,
                         gameplayFrames.wrapping_rem(128 as libc::c_int as
                                                         libc::c_uint),
                         gameplayFrames.wrapping_mul(1 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(512
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 128 as libc::c_int) as
            libc::c_uint;
    let fresh337 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_0: *mut Gfx = fresh337;
    (*_g_0).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x9 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_0).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         (127 as libc::c_int as
                              libc::c_uint).wrapping_sub(gameplayFrames.wrapping_rem(128
                                                                                         as
                                                                                         libc::c_int
                                                                                         as
                                                                                         libc::c_uint)),
                         gameplayFrames.wrapping_mul(1 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int,
                         1 as libc::c_int,
                         gameplayFrames.wrapping_rem(128 as libc::c_int as
                                                         libc::c_uint),
                         gameplayFrames.wrapping_mul(1 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int) as
            libc::c_uint;
    let fresh338 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_1: *mut Gfx = fresh338;
    (*_g_1).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0xa as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_1).words.w1 =
        Gfx_TwoTexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int,
                         (127 as libc::c_int as
                              libc::c_uint).wrapping_sub(gameplayFrames.wrapping_rem(128
                                                                                         as
                                                                                         libc::c_int
                                                                                         as
                                                                                         libc::c_uint)),
                         gameplayFrames.wrapping_mul(1 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int,
                         1 as libc::c_int,
                         gameplayFrames.wrapping_rem(128 as libc::c_int as
                                                         libc::c_uint),
                         gameplayFrames.wrapping_mul(1 as libc::c_int as
                                                         libc::c_uint).wrapping_rem(128
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint),
                         32 as libc::c_int, 32 as libc::c_int) as
            libc::c_uint;
    let fresh339 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_2: *mut Gfx = fresh339;
    (*_g_2).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_2).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh340 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_3: *mut Gfx = fresh340;
    (*_g_3).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_3).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh341 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_4: *mut Gfx = fresh341;
    (*_g_4).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_4).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh342 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_5: *mut Gfx = fresh342;
    (*_g_5).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_5).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    Graph_CloseDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                     b"../z_scene_table.c\x00" as *const u8 as
                         *const libc::c_char, 7852 as libc::c_int);
}
// Scene Draw Config 52
#[no_mangle]
pub unsafe extern "C" fn func_800A055C(mut globalCtx: *mut GlobalContext) {
    func_8009BEEC(globalCtx);
}
// Scene Draw Config 51
#[no_mangle]
pub unsafe extern "C" fn func_800A057C(mut globalCtx: *mut GlobalContext) {
    func_8009BEEC(globalCtx);
}
// Scene Draw Config 49
#[no_mangle]
pub unsafe extern "C" fn func_800A059C(mut globalCtx: *mut GlobalContext) {
    let mut gameplayFrames: u32_0 = 0;
    let mut __gfxCtx: *mut GraphicsContext = 0 as *mut GraphicsContext;
    let mut dispRefs: [*mut Gfx; 4] = [0 as *mut Gfx; 4];
    __gfxCtx = (*globalCtx).state.gfxCtx;
    Graph_OpenDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                    b"../z_scene_table.c\x00" as *const u8 as
                        *const libc::c_char, 7893 as libc::c_int);
    gameplayFrames = (*globalCtx).gameplayFrames;
    let fresh343 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g: *mut Gfx = fresh343;
    (*_g).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x8 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g).words.w1 =
        Gfx_TexScroll((*globalCtx).state.gfxCtx,
                      (127 as libc::c_int as
                           libc::c_uint).wrapping_sub(gameplayFrames.wrapping_mul(2
                                                                                      as
                                                                                      libc::c_int
                                                                                      as
                                                                                      libc::c_uint).wrapping_rem(128
                                                                                                                     as
                                                                                                                     libc::c_int
                                                                                                                     as
                                                                                                                     libc::c_uint)),
                      0 as libc::c_int as u32_0, 32 as libc::c_int,
                      64 as libc::c_int) as libc::c_uint;
    let fresh344 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_0: *mut Gfx = fresh344;
    (*_g_0).words.w0 =
        (0xdb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (0x6 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            ((0x9 as libc::c_int * 4 as libc::c_int) as u32_0 &
                 (((0x1 as libc::c_int) << 16 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    (*_g_0).words.w1 =
        Gfx_TexScroll((*globalCtx).state.gfxCtx, 0 as libc::c_int as u32_0,
                      gameplayFrames.wrapping_mul(2 as libc::c_int as
                                                      libc::c_uint).wrapping_rem(512
                                                                                     as
                                                                                     libc::c_int
                                                                                     as
                                                                                     libc::c_uint),
                      128 as libc::c_int, 128 as libc::c_int) as libc::c_uint;
    let fresh345 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_1: *mut Gfx = fresh345;
    (*_g_1).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_1).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh346 = (*__gfxCtx).polyOpa.p;
    (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
    let mut _g_2: *mut Gfx = fresh346;
    (*_g_2).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_2).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    let fresh347 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_3: *mut Gfx = fresh347;
    (*_g_3).words.w0 =
        (0xe7 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_3).words.w1 = 0 as libc::c_int as libc::c_uint;
    let fresh348 = (*__gfxCtx).polyXlu.p;
    (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
    let mut _g_4: *mut Gfx = fresh348;
    (*_g_4).words.w0 =
        (0xfb as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int;
    (*_g_4).words.w1 =
        (128 as libc::c_int as u32_0 &
             (((0x1 as libc::c_int) << 8 as libc::c_int) - 1 as libc::c_int)
                 as libc::c_uint) << 24 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 16 as libc::c_int
            |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 8 as libc::c_int |
            (128 as libc::c_int as u32_0 &
                 (((0x1 as libc::c_int) << 8 as libc::c_int) -
                      1 as libc::c_int) as libc::c_uint) << 0 as libc::c_int;
    Graph_CloseDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                     b"../z_scene_table.c\x00" as *const u8 as
                         *const libc::c_char, 7910 as libc::c_int);
}
#[no_mangle]
pub static mut sSceneDrawHandlers:
           [Option<unsafe extern "C" fn(_: *mut GlobalContext) -> ()>; 53] =
    unsafe {
        [Some(func_80099550 as
                  unsafe extern "C" fn(_: *mut GlobalContext) -> ()),
         Some(func_8009DA30 as
                  unsafe extern "C" fn(_: *mut GlobalContext) -> ()),
         Some(func_8009DD5C as
                  unsafe extern "C" fn(_: *mut GlobalContext) -> ()),
         Some(func_8009DE78 as
                  unsafe extern "C" fn(_: *mut GlobalContext) -> ()),
         Some(func_8009E0B8 as
                  unsafe extern "C" fn(_: *mut GlobalContext) -> ()),
         Some(func_8009E54C as
                  unsafe extern "C" fn(_: *mut GlobalContext) -> ()),
         Some(func_8009E730 as
                  unsafe extern "C" fn(_: *mut GlobalContext) -> ()),
         Some(func_8009E8C0 as
                  unsafe extern "C" fn(_: *mut GlobalContext) -> ()),
         Some(func_8009EAD8 as
                  unsafe extern "C" fn(_: *mut GlobalContext) -> ()),
         Some(func_8009EE44 as
                  unsafe extern "C" fn(_: *mut GlobalContext) -> ()),
         Some(func_8009F074 as
                  unsafe extern "C" fn(_: *mut GlobalContext) -> ()),
         Some(func_8009F1B4 as
                  unsafe extern "C" fn(_: *mut GlobalContext) -> ()),
         Some(func_8009F270 as
                  unsafe extern "C" fn(_: *mut GlobalContext) -> ()),
         Some(func_8009F40C as
                  unsafe extern "C" fn(_: *mut GlobalContext) -> ()),
         Some(func_8009F5D4 as
                  unsafe extern "C" fn(_: *mut GlobalContext) -> ()),
         Some(func_8009F7D4 as
                  unsafe extern "C" fn(_: *mut GlobalContext) -> ()),
         Some(func_8009F9D0 as
                  unsafe extern "C" fn(_: *mut GlobalContext) -> ()),
         Some(func_8009FB74 as
                  unsafe extern "C" fn(_: *mut GlobalContext) -> ()),
         Some(func_8009FC90 as
                  unsafe extern "C" fn(_: *mut GlobalContext) -> ()),
         Some(func_800995DC as
                  unsafe extern "C" fn(_: *mut GlobalContext) -> ()),
         Some(func_80099878 as
                  unsafe extern "C" fn(_: *mut GlobalContext) -> ()),
         Some(func_8009FE58 as
                  unsafe extern "C" fn(_: *mut GlobalContext) -> ()),
         Some(func_8009D758 as
                  unsafe extern "C" fn(_: *mut GlobalContext) -> ()),
         Some(func_8009B0FC as
                  unsafe extern "C" fn(_: *mut GlobalContext) -> ()),
         Some(func_8009AE30 as
                  unsafe extern "C" fn(_: *mut GlobalContext) -> ()),
         Some(func_8009D974 as
                  unsafe extern "C" fn(_: *mut GlobalContext) -> ()),
         Some(func_800A0334 as
                  unsafe extern "C" fn(_: *mut GlobalContext) -> ()),
         Some(func_8009CC00 as
                  unsafe extern "C" fn(_: *mut GlobalContext) -> ()),
         Some(func_80099760 as
                  unsafe extern "C" fn(_: *mut GlobalContext) -> ()),
         Some(func_8009B86C as
                  unsafe extern "C" fn(_: *mut GlobalContext) -> ()),
         Some(func_80099BD8 as
                  unsafe extern "C" fn(_: *mut GlobalContext) -> ()),
         Some(func_8009A45C as
                  unsafe extern "C" fn(_: *mut GlobalContext) -> ()),
         Some(func_8009A798 as
                  unsafe extern "C" fn(_: *mut GlobalContext) -> ()),
         Some(func_8009A9DC as
                  unsafe extern "C" fn(_: *mut GlobalContext) -> ()),
         Some(func_8009B9BC as
                  unsafe extern "C" fn(_: *mut GlobalContext) -> ()),
         Some(func_8009BAA4 as
                  unsafe extern "C" fn(_: *mut GlobalContext) -> ()),
         Some(func_8009BC44 as
                  unsafe extern "C" fn(_: *mut GlobalContext) -> ()),
         Some(func_8009C3EC as
                  unsafe extern "C" fn(_: *mut GlobalContext) -> ()),
         Some(func_8009C0AC as
                  unsafe extern "C" fn(_: *mut GlobalContext) -> ()),
         Some(func_8009ACA8 as
                  unsafe extern "C" fn(_: *mut GlobalContext) -> ()),
         Some(func_8009AFE0 as
                  unsafe extern "C" fn(_: *mut GlobalContext) -> ()),
         Some(func_8009D0E8 as
                  unsafe extern "C" fn(_: *mut GlobalContext) -> ()),
         Some(func_8009C608 as
                  unsafe extern "C" fn(_: *mut GlobalContext) -> ()),
         Some(func_8009C8B8 as
                  unsafe extern "C" fn(_: *mut GlobalContext) -> ()),
         Some(func_8009D31C as
                  unsafe extern "C" fn(_: *mut GlobalContext) -> ()),
         Some(func_8009D438 as
                  unsafe extern "C" fn(_: *mut GlobalContext) -> ()),
         Some(func_8009D5B4 as
                  unsafe extern "C" fn(_: *mut GlobalContext) -> ()),
         Some(func_8009CAC0 as
                  unsafe extern "C" fn(_: *mut GlobalContext) -> ()),
         Some(func_8009AB98 as
                  unsafe extern "C" fn(_: *mut GlobalContext) -> ()),
         Some(func_800A059C as
                  unsafe extern "C" fn(_: *mut GlobalContext) -> ()),
         Some(func_8009CF84 as
                  unsafe extern "C" fn(_: *mut GlobalContext) -> ()),
         Some(func_800A057C as
                  unsafe extern "C" fn(_: *mut GlobalContext) -> ()),
         Some(func_800A055C as
                  unsafe extern "C" fn(_: *mut GlobalContext) -> ())]
    };
#[no_mangle]
pub unsafe extern "C" fn Scene_Draw(mut globalCtx: *mut GlobalContext) {
    if (*gGameInfo).data[(21 as libc::c_int * 6 as libc::c_int *
                              16 as libc::c_int + 80 as libc::c_int) as usize]
           as libc::c_int == 17 as libc::c_int {
        if (*gGameInfo).data[(21 as libc::c_int * 6 as libc::c_int *
                                  16 as libc::c_int + 95 as libc::c_int) as
                                 usize] as libc::c_int != 17 as libc::c_int {
            (*gGameInfo).data[(21 as libc::c_int * 6 as libc::c_int *
                                   16 as libc::c_int + 95 as libc::c_int) as
                                  usize] = 17 as libc::c_int as s16;
            (*gGameInfo).data[(21 as libc::c_int * 6 as libc::c_int *
                                   16 as libc::c_int + 81 as libc::c_int) as
                                  usize] = 1 as libc::c_int as s16;
            (*gGameInfo).data[(21 as libc::c_int * 6 as libc::c_int *
                                   16 as libc::c_int + 82 as libc::c_int) as
                                  usize] = 1 as libc::c_int as s16;
            (*gGameInfo).data[(21 as libc::c_int * 6 as libc::c_int *
                                   16 as libc::c_int + 83 as libc::c_int) as
                                  usize] = 0 as libc::c_int as s16;
            (*gGameInfo).data[(21 as libc::c_int * 6 as libc::c_int *
                                   16 as libc::c_int + 84 as libc::c_int) as
                                  usize] = 0 as libc::c_int as s16;
            (*gGameInfo).data[(21 as libc::c_int * 6 as libc::c_int *
                                   16 as libc::c_int + 85 as libc::c_int) as
                                  usize] = 0 as libc::c_int as s16;
            (*gGameInfo).data[(21 as libc::c_int * 6 as libc::c_int *
                                   16 as libc::c_int + 86 as libc::c_int) as
                                  usize] = 0 as libc::c_int as s16;
            (*gGameInfo).data[(21 as libc::c_int * 6 as libc::c_int *
                                   16 as libc::c_int + 87 as libc::c_int) as
                                  usize] = 0 as libc::c_int as s16;
            (*gGameInfo).data[(21 as libc::c_int * 6 as libc::c_int *
                                   16 as libc::c_int + 88 as libc::c_int) as
                                  usize] = 0 as libc::c_int as s16;
            (*gGameInfo).data[(21 as libc::c_int * 6 as libc::c_int *
                                   16 as libc::c_int + 89 as libc::c_int) as
                                  usize] = 0 as libc::c_int as s16;
            (*gGameInfo).data[(21 as libc::c_int * 6 as libc::c_int *
                                   16 as libc::c_int + 91 as libc::c_int) as
                                  usize] = 0 as libc::c_int as s16;
            (*gGameInfo).data[(21 as libc::c_int * 6 as libc::c_int *
                                   16 as libc::c_int + 92 as libc::c_int) as
                                  usize] = 0 as libc::c_int as s16;
            (*gGameInfo).data[(21 as libc::c_int * 6 as libc::c_int *
                                   16 as libc::c_int + 93 as libc::c_int) as
                                  usize] = 0 as libc::c_int as s16;
            (*gGameInfo).data[(21 as libc::c_int * 6 as libc::c_int *
                                   16 as libc::c_int + 94 as libc::c_int) as
                                  usize] = 0 as libc::c_int as s16
        }
        let mut __gfxCtx: *mut GraphicsContext = 0 as *mut GraphicsContext;
        let mut dispRefs: [*mut Gfx; 4] = [0 as *mut Gfx; 4];
        __gfxCtx = (*globalCtx).state.gfxCtx;
        Graph_OpenDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                        b"../z_scene_table.c\x00" as *const u8 as
                            *const libc::c_char, 8104 as libc::c_int);
        if (*gGameInfo).data[(21 as libc::c_int * 6 as libc::c_int *
                                  16 as libc::c_int + 81 as libc::c_int) as
                                 usize] as libc::c_int == 1 as libc::c_int {
            let fresh349 = (*__gfxCtx).polyOpa.p;
            (*__gfxCtx).polyOpa.p = (*__gfxCtx).polyOpa.p.offset(1);
            let mut _g: *mut Gfx = fresh349;
            (*_g).words.w0 =
                (0xde as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    24 as libc::c_int |
                    (0 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        16 as libc::c_int |
                    (0 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 16 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        0 as libc::c_int;
            (*_g).words.w1 = sDefaultDisplayList.as_mut_ptr() as libc::c_uint;
            let fresh350 = (*__gfxCtx).polyXlu.p;
            (*__gfxCtx).polyXlu.p = (*__gfxCtx).polyXlu.p.offset(1);
            let mut _g_0: *mut Gfx = fresh350;
            (*_g_0).words.w0 =
                (0xde as libc::c_int as u32_0 &
                     (((0x1 as libc::c_int) << 8 as libc::c_int) -
                          1 as libc::c_int) as libc::c_uint) <<
                    24 as libc::c_int |
                    (0 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 8 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        16 as libc::c_int |
                    (0 as libc::c_int as u32_0 &
                         (((0x1 as libc::c_int) << 16 as libc::c_int) -
                              1 as libc::c_int) as libc::c_uint) <<
                        0 as libc::c_int;
            (*_g_0).words.w1 =
                sDefaultDisplayList.as_mut_ptr() as libc::c_uint
        }
        Graph_CloseDisps(dispRefs.as_mut_ptr(), (*globalCtx).state.gfxCtx,
                         b"../z_scene_table.c\x00" as *const u8 as
                             *const libc::c_char, 8109 as libc::c_int);
        if (*gGameInfo).data[(21 as libc::c_int * 6 as libc::c_int *
                                  16 as libc::c_int + 82 as libc::c_int) as
                                 usize] as libc::c_int == 1 as libc::c_int {
            sSceneDrawHandlers[(*globalCtx).sceneConfig as
                                   usize].expect("non-null function pointer")(globalCtx);
        }
    } else {
        sSceneDrawHandlers[(*globalCtx).sceneConfig as
                               usize].expect("non-null function pointer")(globalCtx);
    };
}
unsafe extern "C" fn run_static_initializers() {
    gSceneTable =
        [{
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _ydan_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _ydan_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_06SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_06SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 1 as libc::c_int as u8_0,
                                 config: 19 as libc::c_int as u8_0,
                                 unk_12: 2 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _ddan_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _ddan_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_08SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_08SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 1 as libc::c_int as u8_0,
                                 config: 20 as libc::c_int as u8_0,
                                 unk_12: 3 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _bdan_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _bdan_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_07SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_07SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 1 as libc::c_int as u8_0,
                                 config: 21 as libc::c_int as u8_0,
                                 unk_12: 4 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _Bmori1_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _Bmori1_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_01SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_01SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 2 as libc::c_int as u8_0,
                                 config: 22 as libc::c_int as u8_0,
                                 unk_12: 5 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _HIDAN_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _HIDAN_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_03SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_03SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 2 as libc::c_int as u8_0,
                                 config: 18 as libc::c_int as u8_0,
                                 unk_12: 6 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _MIZUsin_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _MIZUsin_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_04SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_04SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 1 as libc::c_int as u8_0,
                                 config: 23 as libc::c_int as u8_0,
                                 unk_12: 7 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _jyasinzou_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _jyasinzou_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_05SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_05SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 1 as libc::c_int as u8_0,
                                 config: 25 as libc::c_int as u8_0,
                                 unk_12: 8 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _HAKAdan_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _HAKAdan_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_02SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_02SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 2 as libc::c_int as u8_0,
                                 config: 24 as libc::c_int as u8_0,
                                 unk_12: 9 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _HAKAdanCH_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _HAKAdanCH_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_54SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_54SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 2 as libc::c_int as u8_0,
                                 config: 24 as libc::c_int as u8_0,
                                 unk_12: 10 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _ice_doukutu_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _ice_doukutu_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_10SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_10SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 37 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _ganon_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _ganon_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         0 as libc::c_int as
                                                             u32_0,
                                                     vromEnd:
                                                         0 as libc::c_int as
                                                             u32_0,};
                                         init
                                     },
                                 unk_10: 2 as libc::c_int as u8_0,
                                 config: 0 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _men_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _men_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_11SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_11SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 27 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _gerudoway_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _gerudoway_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_49SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_49SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 40 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _ganontika_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _ganontika_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_09SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_09SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 26 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _ganon_sonogo_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _ganon_sonogo_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         0 as libc::c_int as
                                                             u32_0,
                                                     vromEnd:
                                                         0 as libc::c_int as
                                                             u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 51 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _ganontikasonogo_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _ganontikasonogo_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         0 as libc::c_int as
                                                             u32_0,
                                                     vromEnd:
                                                         0 as libc::c_int as
                                                             u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 52 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _takaraya_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _takaraya_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_51SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_51SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 0 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _ydan_boss_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _ydan_boss_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         0 as libc::c_int as
                                                             u32_0,
                                                     vromEnd:
                                                         0 as libc::c_int as
                                                             u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 28 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _ddan_boss_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _ddan_boss_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         0 as libc::c_int as
                                                             u32_0,
                                                     vromEnd:
                                                         0 as libc::c_int as
                                                             u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 0 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _bdan_boss_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _bdan_boss_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         0 as libc::c_int as
                                                             u32_0,
                                                     vromEnd:
                                                         0 as libc::c_int as
                                                             u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 21 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _moribossroom_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _moribossroom_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         0 as libc::c_int as
                                                             u32_0,
                                                     vromEnd:
                                                         0 as libc::c_int as
                                                             u32_0,};
                                         init
                                     },
                                 unk_10: 1 as libc::c_int as u8_0,
                                 config: 0 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _FIRE_bs_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _FIRE_bs_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         0 as libc::c_int as
                                                             u32_0,
                                                     vromEnd:
                                                         0 as libc::c_int as
                                                             u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 18 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _MIZUsin_bs_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _MIZUsin_bs_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         0 as libc::c_int as
                                                             u32_0,
                                                     vromEnd:
                                                         0 as libc::c_int as
                                                             u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 29 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _jyasinboss_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _jyasinboss_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         0 as libc::c_int as
                                                             u32_0,
                                                     vromEnd:
                                                         0 as libc::c_int as
                                                             u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 0 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _HAKAdan_bs_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _HAKAdan_bs_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         0 as libc::c_int as
                                                             u32_0,
                                                     vromEnd:
                                                         0 as libc::c_int as
                                                             u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 24 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _ganon_boss_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _ganon_boss_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         0 as libc::c_int as
                                                             u32_0,
                                                     vromEnd:
                                                         0 as libc::c_int as
                                                             u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 0 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _ganon_final_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _ganon_final_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         0 as libc::c_int as
                                                             u32_0,
                                                     vromEnd:
                                                         0 as libc::c_int as
                                                             u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 38 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _entra_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _entra_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         0 as libc::c_int as
                                                             u32_0,
                                                     vromEnd:
                                                         0 as libc::c_int as
                                                             u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 0 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _entra_n_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _entra_n_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         0 as libc::c_int as
                                                             u32_0,
                                                     vromEnd:
                                                         0 as libc::c_int as
                                                             u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 0 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _enrui_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _enrui_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         0 as libc::c_int as
                                                             u32_0,
                                                     vromEnd:
                                                         0 as libc::c_int as
                                                             u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 0 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _market_alley_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _market_alley_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_18SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_18SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 0 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _market_alley_n_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _market_alley_n_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_18SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_18SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 0 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _market_day_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _market_day_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_17SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_17SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 0 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _market_night_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _market_night_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_17SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_17SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 0 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _market_ruins_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _market_ruins_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_17SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_17SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 0 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _shrine_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _shrine_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         0 as libc::c_int as
                                                             u32_0,
                                                     vromEnd:
                                                         0 as libc::c_int as
                                                             u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 0 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _shrine_n_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _shrine_n_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         0 as libc::c_int as
                                                             u32_0,
                                                     vromEnd:
                                                         0 as libc::c_int as
                                                             u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 0 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _shrine_r_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _shrine_r_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         0 as libc::c_int as
                                                             u32_0,
                                                     vromEnd:
                                                         0 as libc::c_int as
                                                             u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 0 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _kokiri_home_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _kokiri_home_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         0 as libc::c_int as
                                                             u32_0,
                                                     vromEnd:
                                                         0 as libc::c_int as
                                                             u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 0 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _kokiri_home3_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _kokiri_home3_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         0 as libc::c_int as
                                                             u32_0,
                                                     vromEnd:
                                                         0 as libc::c_int as
                                                             u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 0 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _kokiri_home4_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _kokiri_home4_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         0 as libc::c_int as
                                                             u32_0,
                                                     vromEnd:
                                                         0 as libc::c_int as
                                                             u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 0 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _kokiri_home5_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _kokiri_home5_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         0 as libc::c_int as
                                                             u32_0,
                                                     vromEnd:
                                                         0 as libc::c_int as
                                                             u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 0 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _kakariko_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _kakariko_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         0 as libc::c_int as
                                                             u32_0,
                                                     vromEnd:
                                                         0 as libc::c_int as
                                                             u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 0 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _kakariko3_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _kakariko3_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         0 as libc::c_int as
                                                             u32_0,
                                                     vromEnd:
                                                         0 as libc::c_int as
                                                             u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 0 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _shop1_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _shop1_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_23SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_23SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 0 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _kokiri_shop_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _kokiri_shop_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_19SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_19SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 0 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _golon_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _golon_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_20SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_20SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 0 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _zoora_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _zoora_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_21SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_21SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 0 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _drag_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _drag_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_24SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_24SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 0 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _alley_shop_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _alley_shop_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_24SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_24SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 0 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _night_shop_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _night_shop_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_56SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_56SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 0 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _face_shop_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _face_shop_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_50SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_50SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 0 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _link_home_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _link_home_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         0 as libc::c_int as
                                                             u32_0,
                                                     vromEnd:
                                                         0 as libc::c_int as
                                                             u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 0 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _impa_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _impa_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         0 as libc::c_int as
                                                             u32_0,
                                                     vromEnd:
                                                         0 as libc::c_int as
                                                             u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 0 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _malon_stable_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _malon_stable_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_48SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_48SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 0 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _labo_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _labo_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         0 as libc::c_int as
                                                             u32_0,
                                                     vromEnd:
                                                         0 as libc::c_int as
                                                             u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 0 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _hylia_labo_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _hylia_labo_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_26SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_26SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 43 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _tent_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _tent_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         0 as libc::c_int as
                                                             u32_0,
                                                     vromEnd:
                                                         0 as libc::c_int as
                                                             u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 0 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _hut_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _hut_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_25SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_25SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 0 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _daiyousei_izumi_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _daiyousei_izumi_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_13SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_13SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 33 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _yousei_izumi_tate_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _yousei_izumi_tate_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_45SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_45SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 39 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _yousei_izumi_yoko_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _yousei_izumi_yoko_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_13SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_13SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 33 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _kakusiana_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _kakusiana_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         0 as libc::c_int as
                                                             u32_0,
                                                     vromEnd:
                                                         0 as libc::c_int as
                                                             u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 31 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _hakaana_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _hakaana_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         0 as libc::c_int as
                                                             u32_0,
                                                     vromEnd:
                                                         0 as libc::c_int as
                                                             u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 48 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _hakaana2_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _hakaana2_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         0 as libc::c_int as
                                                             u32_0,
                                                     vromEnd:
                                                         0 as libc::c_int as
                                                             u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 39 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _hakaana_ouke_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _hakaana_ouke_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_44SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_44SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 42 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _syatekijyou_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _syatekijyou_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_15SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_15SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 34 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _tokinoma_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _tokinoma_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_16SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_16SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 30 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _kenjyanoma_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _kenjyanoma_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_14SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_14SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 32 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _hairal_niwa_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _hairal_niwa_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_12SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_12SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 35 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _hairal_niwa_n_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _hairal_niwa_n_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_12SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_12SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 35 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _hiral_demo_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _hiral_demo_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         0 as libc::c_int as
                                                             u32_0,
                                                     vromEnd:
                                                         0 as libc::c_int as
                                                             u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 0 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _hakasitarelay_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _hakasitarelay_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_57SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_57SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 48 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _turibori_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _turibori_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_46SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_46SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 50 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _nakaniwa_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _nakaniwa_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_12SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_12SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 47 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _bowling_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _bowling_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_47SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_47SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 41 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _souko_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _souko_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         0 as libc::c_int as
                                                             u32_0,
                                                     vromEnd:
                                                         0 as libc::c_int as
                                                             u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 44 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _miharigoya_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _miharigoya_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         0 as libc::c_int as
                                                             u32_0,
                                                     vromEnd:
                                                         0 as libc::c_int as
                                                             u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 45 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _mahouya_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _mahouya_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_24SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_24SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 46 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _ganon_demo_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _ganon_demo_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         0 as libc::c_int as
                                                             u32_0,
                                                     vromEnd:
                                                         0 as libc::c_int as
                                                             u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 36 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _kinsuta_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _kinsuta_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_22SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_22SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 0 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _spot00_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _spot00_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_27SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_27SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 1 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _spot01_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _spot01_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_28SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_28SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 2 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _spot02_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _spot02_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_29SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_29SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 0 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _spot03_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _spot03_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_30SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_30SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 3 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _spot04_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _spot04_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_31SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_31SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 4 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _spot05_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _spot05_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_52SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_52SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 47 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _spot06_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _spot06_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_32SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_32SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 5 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _spot07_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _spot07_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_33SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_33SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 6 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _spot08_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _spot08_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_34SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_34SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 7 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _spot09_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _spot09_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_35SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_35SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 8 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _spot10_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _spot10_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_36SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_36SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 9 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _spot11_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _spot11_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_55SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_55SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 10 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _spot12_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _spot12_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_53SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_53SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 11 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _spot13_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _spot13_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_37SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_37SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 12 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _spot15_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _spot15_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_38SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_38SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 13 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _spot16_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _spot16_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_39SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_39SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 14 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _spot17_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _spot17_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_40SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_40SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 15 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _spot18_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _spot18_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_41SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_41SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 16 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _spot20_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _spot20_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_42SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_42SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 17 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _ganon_tou_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _ganon_tou_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_43SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_43SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 36 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _test01_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _test01_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         0 as libc::c_int as
                                                             u32_0,
                                                     vromEnd:
                                                         0 as libc::c_int as
                                                             u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 47 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _besitu_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _besitu_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         0 as libc::c_int as
                                                             u32_0,
                                                     vromEnd:
                                                         0 as libc::c_int as
                                                             u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 49 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _depth_test_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _depth_test_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         0 as libc::c_int as
                                                             u32_0,
                                                     vromEnd:
                                                         0 as libc::c_int as
                                                             u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 0 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _syotes_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _syotes_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         0 as libc::c_int as
                                                             u32_0,
                                                     vromEnd:
                                                         0 as libc::c_int as
                                                             u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 0 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _syotes2_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _syotes2_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         0 as libc::c_int as
                                                             u32_0,
                                                     vromEnd:
                                                         0 as libc::c_int as
                                                             u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 0 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _sutaru_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _sutaru_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         0 as libc::c_int as
                                                             u32_0,
                                                     vromEnd:
                                                         0 as libc::c_int as
                                                             u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 0 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _hairal_niwa2_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _hairal_niwa2_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _g_pn_12SegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _g_pn_12SegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 35 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _sasatest_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _sasatest_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         0 as libc::c_int as
                                                             u32_0,
                                                     vromEnd:
                                                         0 as libc::c_int as
                                                             u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 0 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         },
         {
             let mut init =
                 SceneTableEntry{sceneFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         _testroom_sceneSegmentRomStart.as_mut_ptr()
                                                             as u32_0,
                                                     vromEnd:
                                                         _testroom_sceneSegmentRomEnd.as_mut_ptr()
                                                             as u32_0,};
                                         init
                                     },
                                 titleFile:
                                     {
                                         let mut init =
                                             RomFile{vromStart:
                                                         0 as libc::c_int as
                                                             u32_0,
                                                     vromEnd:
                                                         0 as libc::c_int as
                                                             u32_0,};
                                         init
                                     },
                                 unk_10: 0 as libc::c_int as u8_0,
                                 config: 0 as libc::c_int as u8_0,
                                 unk_12: 0 as libc::c_int as u8_0,
                                 unk_13: 0 as libc::c_int as u8_0,};
             init
         }];
    sDefaultDisplayList =
        [Gfx{words:
                 {
                     let mut init =
                         Gwords{w0:
                                    (0xdb as libc::c_int as u32_0 &
                                         (((0x1 as libc::c_int) <<
                                               8 as libc::c_int) -
                                              1 as libc::c_int) as
                                             libc::c_uint) <<
                                        24 as libc::c_int |
                                        (0x6 as libc::c_int as u32_0 &
                                             (((0x1 as libc::c_int) <<
                                                   8 as libc::c_int) -
                                                  1 as libc::c_int) as
                                                 libc::c_uint) <<
                                            16 as libc::c_int |
                                        ((0x8 as libc::c_int *
                                              4 as libc::c_int) as u32_0 &
                                             (((0x1 as libc::c_int) <<
                                                   16 as libc::c_int) -
                                                  1 as libc::c_int) as
                                                 libc::c_uint) <<
                                            0 as libc::c_int,
                                w1: gEmptyDL.as_mut_ptr() as libc::c_uint,};
                     init
                 },},
         Gfx{words:
                 {
                     let mut init =
                         Gwords{w0:
                                    (0xdb as libc::c_int as u32_0 &
                                         (((0x1 as libc::c_int) <<
                                               8 as libc::c_int) -
                                              1 as libc::c_int) as
                                             libc::c_uint) <<
                                        24 as libc::c_int |
                                        (0x6 as libc::c_int as u32_0 &
                                             (((0x1 as libc::c_int) <<
                                                   8 as libc::c_int) -
                                                  1 as libc::c_int) as
                                                 libc::c_uint) <<
                                            16 as libc::c_int |
                                        ((0x9 as libc::c_int *
                                              4 as libc::c_int) as u32_0 &
                                             (((0x1 as libc::c_int) <<
                                                   16 as libc::c_int) -
                                                  1 as libc::c_int) as
                                                 libc::c_uint) <<
                                            0 as libc::c_int,
                                w1: gEmptyDL.as_mut_ptr() as libc::c_uint,};
                     init
                 },},
         Gfx{words:
                 {
                     let mut init =
                         Gwords{w0:
                                    (0xdb as libc::c_int as u32_0 &
                                         (((0x1 as libc::c_int) <<
                                               8 as libc::c_int) -
                                              1 as libc::c_int) as
                                             libc::c_uint) <<
                                        24 as libc::c_int |
                                        (0x6 as libc::c_int as u32_0 &
                                             (((0x1 as libc::c_int) <<
                                                   8 as libc::c_int) -
                                                  1 as libc::c_int) as
                                                 libc::c_uint) <<
                                            16 as libc::c_int |
                                        ((0xa as libc::c_int *
                                              4 as libc::c_int) as u32_0 &
                                             (((0x1 as libc::c_int) <<
                                                   16 as libc::c_int) -
                                                  1 as libc::c_int) as
                                                 libc::c_uint) <<
                                            0 as libc::c_int,
                                w1: gEmptyDL.as_mut_ptr() as libc::c_uint,};
                     init
                 },},
         Gfx{words:
                 {
                     let mut init =
                         Gwords{w0:
                                    (0xdb as libc::c_int as u32_0 &
                                         (((0x1 as libc::c_int) <<
                                               8 as libc::c_int) -
                                              1 as libc::c_int) as
                                             libc::c_uint) <<
                                        24 as libc::c_int |
                                        (0x6 as libc::c_int as u32_0 &
                                             (((0x1 as libc::c_int) <<
                                                   8 as libc::c_int) -
                                                  1 as libc::c_int) as
                                                 libc::c_uint) <<
                                            16 as libc::c_int |
                                        ((0xb as libc::c_int *
                                              4 as libc::c_int) as u32_0 &
                                             (((0x1 as libc::c_int) <<
                                                   16 as libc::c_int) -
                                                  1 as libc::c_int) as
                                                 libc::c_uint) <<
                                            0 as libc::c_int,
                                w1: gEmptyDL.as_mut_ptr() as libc::c_uint,};
                     init
                 },},
         Gfx{words:
                 {
                     let mut init =
                         Gwords{w0:
                                    (0xdb as libc::c_int as u32_0 &
                                         (((0x1 as libc::c_int) <<
                                               8 as libc::c_int) -
                                              1 as libc::c_int) as
                                             libc::c_uint) <<
                                        24 as libc::c_int |
                                        (0x6 as libc::c_int as u32_0 &
                                             (((0x1 as libc::c_int) <<
                                                   8 as libc::c_int) -
                                                  1 as libc::c_int) as
                                                 libc::c_uint) <<
                                            16 as libc::c_int |
                                        ((0xc as libc::c_int *
                                              4 as libc::c_int) as u32_0 &
                                             (((0x1 as libc::c_int) <<
                                                   16 as libc::c_int) -
                                                  1 as libc::c_int) as
                                                 libc::c_uint) <<
                                            0 as libc::c_int,
                                w1: gEmptyDL.as_mut_ptr() as libc::c_uint,};
                     init
                 },},
         Gfx{words:
                 {
                     let mut init =
                         Gwords{w0:
                                    (0xdb as libc::c_int as u32_0 &
                                         (((0x1 as libc::c_int) <<
                                               8 as libc::c_int) -
                                              1 as libc::c_int) as
                                             libc::c_uint) <<
                                        24 as libc::c_int |
                                        (0x6 as libc::c_int as u32_0 &
                                             (((0x1 as libc::c_int) <<
                                                   8 as libc::c_int) -
                                                  1 as libc::c_int) as
                                                 libc::c_uint) <<
                                            16 as libc::c_int |
                                        ((0xd as libc::c_int *
                                              4 as libc::c_int) as u32_0 &
                                             (((0x1 as libc::c_int) <<
                                                   16 as libc::c_int) -
                                                  1 as libc::c_int) as
                                                 libc::c_uint) <<
                                            0 as libc::c_int,
                                w1: gEmptyDL.as_mut_ptr() as libc::c_uint,};
                     init
                 },},
         Gfx{words:
                 {
                     let mut init =
                         Gwords{w0:
                                    (0xe7 as libc::c_int as u32_0 &
                                         (((0x1 as libc::c_int) <<
                                               8 as libc::c_int) -
                                              1 as libc::c_int) as
                                             libc::c_uint) <<
                                        24 as libc::c_int,
                                w1: 0 as libc::c_int as libc::c_uint,};
                     init
                 },},
         Gfx{words:
                 {
                     let mut init =
                         Gwords{w0:
                                    (0xfa as libc::c_int as u32_0 &
                                         (((0x1 as libc::c_int) <<
                                               8 as libc::c_int) -
                                              1 as libc::c_int) as
                                             libc::c_uint) <<
                                        24 as libc::c_int |
                                        (0 as libc::c_int as u32_0 &
                                             (((0x1 as libc::c_int) <<
                                                   8 as libc::c_int) -
                                                  1 as libc::c_int) as
                                                 libc::c_uint) <<
                                            8 as libc::c_int |
                                        (0 as libc::c_int as u32_0 &
                                             (((0x1 as libc::c_int) <<
                                                   8 as libc::c_int) -
                                                  1 as libc::c_int) as
                                                 libc::c_uint) <<
                                            0 as libc::c_int,
                                w1:
                                    (128 as libc::c_int as u32_0 &
                                         (((0x1 as libc::c_int) <<
                                               8 as libc::c_int) -
                                              1 as libc::c_int) as
                                             libc::c_uint) <<
                                        24 as libc::c_int |
                                        (128 as libc::c_int as u32_0 &
                                             (((0x1 as libc::c_int) <<
                                                   8 as libc::c_int) -
                                                  1 as libc::c_int) as
                                                 libc::c_uint) <<
                                            16 as libc::c_int |
                                        (128 as libc::c_int as u32_0 &
                                             (((0x1 as libc::c_int) <<
                                                   8 as libc::c_int) -
                                                  1 as libc::c_int) as
                                                 libc::c_uint) <<
                                            8 as libc::c_int |
                                        (128 as libc::c_int as u32_0 &
                                             (((0x1 as libc::c_int) <<
                                                   8 as libc::c_int) -
                                                  1 as libc::c_int) as
                                                 libc::c_uint) <<
                                            0 as libc::c_int,};
                     init
                 },},
         Gfx{words:
                 {
                     let mut init =
                         Gwords{w0:
                                    (0xfb as libc::c_int as u32_0 &
                                         (((0x1 as libc::c_int) <<
                                               8 as libc::c_int) -
                                              1 as libc::c_int) as
                                             libc::c_uint) <<
                                        24 as libc::c_int,
                                w1:
                                    (128 as libc::c_int as u32_0 &
                                         (((0x1 as libc::c_int) <<
                                               8 as libc::c_int) -
                                              1 as libc::c_int) as
                                             libc::c_uint) <<
                                        24 as libc::c_int |
                                        (128 as libc::c_int as u32_0 &
                                             (((0x1 as libc::c_int) <<
                                                   8 as libc::c_int) -
                                                  1 as libc::c_int) as
                                                 libc::c_uint) <<
                                            16 as libc::c_int |
                                        (128 as libc::c_int as u32_0 &
                                             (((0x1 as libc::c_int) <<
                                                   8 as libc::c_int) -
                                                  1 as libc::c_int) as
                                                 libc::c_uint) <<
                                            8 as libc::c_int |
                                        (128 as libc::c_int as u32_0 &
                                             (((0x1 as libc::c_int) <<
                                                   8 as libc::c_int) -
                                                  1 as libc::c_int) as
                                                 libc::c_uint) <<
                                            0 as libc::c_int,};
                     init
                 },},
         Gfx{words:
                 {
                     let mut init =
                         Gwords{w0:
                                    (0xdf as libc::c_int as u32_0 &
                                         (((0x1 as libc::c_int) <<
                                               8 as libc::c_int) -
                                              1 as libc::c_int) as
                                             libc::c_uint) <<
                                        24 as libc::c_int,
                                w1: 0 as libc::c_int as libc::c_uint,};
                     init
                 },}]
}
#[used]
#[cfg_attr(target_os = "linux", link_section = ".init_array")]
#[cfg_attr(target_os = "windows", link_section = ".CRT$XIB")]
#[cfg_attr(target_os = "macos", link_section = "__DATA,__mod_init_func")]
static INIT_ARRAY: [unsafe extern "C" fn(); 1] = [run_static_initializers];
